{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/extends","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/slicedToArray","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"./AudioAvailability","data":{"isAsync":false}},{"name":"../AV","data":{"isAsync":false}},{"name":"../ExponentAV","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Sound = void 0;\n\n  var _extends2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/extends\"));\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _slicedToArray2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/slicedToArray\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[6], \"@babel/runtime/helpers/createClass\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[7], \"@unimodules/core\");\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[8], \"./AudioAvailability\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[9], \"../AV\");\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[10], \"../ExponentAV\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var Sound = function () {\n    function Sound() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Sound);\n      this._loaded = false;\n      this._loading = false;\n      this._key = null;\n      this._lastStatusUpdate = null;\n      this._lastStatusUpdateTime = null;\n      this._subscriptions = [];\n      this._eventEmitter = new _core.EventEmitter(_ExponentAV.default);\n      this._coalesceStatusUpdatesInMillis = 100;\n      this._onPlaybackStatusUpdate = null;\n\n      this._internalStatusUpdateCallback = function (_ref) {\n        var key = _ref.key,\n            status = _ref.status;\n\n        if (_this._key === key) {\n          _this._callOnPlaybackStatusUpdateForNewStatus(status);\n        }\n      };\n\n      this._internalErrorCallback = function (_ref2) {\n        var key = _ref2.key,\n            error = _ref2.error;\n\n        if (_this._key === key) {\n          _this._errorCallback(error);\n        }\n      };\n\n      this._errorCallback = function (error) {\n        _this._clearSubscriptions();\n\n        _this._loaded = false;\n        _this._key = null;\n\n        _this._callOnPlaybackStatusUpdateForNewStatus((0, _AV.getUnloadedStatus)(error));\n      };\n\n      this.getStatusAsync = function _callee() {\n        var status;\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!_this._loaded) {\n                  _context.next = 2;\n                  break;\n                }\n\n                return _context.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.getStatusForSound(_this._key);\n                }));\n\n              case 2:\n                status = (0, _AV.getUnloadedStatus)();\n\n                _this._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                return _context.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      };\n    }\n\n    (0, _createClass2.default)(Sound, [{\n      key: \"_callOnPlaybackStatusUpdateForNewStatus\",\n      value: function _callOnPlaybackStatusUpdateForNewStatus(status) {\n        var shouldDismissBasedOnCoalescing = this._lastStatusUpdateTime && JSON.stringify(status) === this._lastStatusUpdate && Date.now() - this._lastStatusUpdateTime.getTime() < this._coalesceStatusUpdatesInMillis;\n\n        if (this._onPlaybackStatusUpdate != null && !shouldDismissBasedOnCoalescing) {\n          this._onPlaybackStatusUpdate(status);\n\n          this._lastStatusUpdateTime = new Date();\n          this._lastStatusUpdate = JSON.stringify(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var _status;\n\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._loaded) {\n                  _context2.next = 9;\n                  break;\n                }\n\n                _context2.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                _status = _context2.sent;\n\n                this._callOnPlaybackStatusUpdateForNewStatus(_status);\n\n                return _context2.abrupt(\"return\", _status);\n\n              case 9:\n                throw new Error('Cannot complete operation because sound is not loaded.');\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"_subscribeToNativeEvents\",\n      value: function _subscribeToNativeEvents() {\n        if (this._loaded) {\n          this._subscriptions.push(this._eventEmitter.addListener('didUpdatePlaybackStatus', this._internalStatusUpdateCallback));\n\n          this._subscriptions.push(this._eventEmitter.addListener('ExponentAV.onError', this._internalErrorCallback));\n        }\n      }\n    }, {\n      key: \"_clearSubscriptions\",\n      value: function _clearSubscriptions() {\n        this._subscriptions.forEach(function (e) {\n          return e.remove();\n        });\n\n        this._subscriptions = [];\n      }\n    }, {\n      key: \"setOnPlaybackStatusUpdate\",\n      value: function setOnPlaybackStatusUpdate(onPlaybackStatusUpdate) {\n        this._onPlaybackStatusUpdate = onPlaybackStatusUpdate;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"loadAsync\",\n      value: function loadAsync(source) {\n        var _this2 = this;\n\n        var initialStatus,\n            downloadFirst,\n            _ref3,\n            nativeSource,\n            fullInitialStatus,\n            _args3 = arguments;\n\n        return _regenerator.default.async(function loadAsync$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                initialStatus = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n                downloadFirst = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : true;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._loading) {\n                  _context3.next = 5;\n                  break;\n                }\n\n                throw new Error('The Sound is already loading.');\n\n              case 5:\n                if (this._loaded) {\n                  _context3.next = 15;\n                  break;\n                }\n\n                this._loading = true;\n                _context3.next = 9;\n                return _regenerator.default.awrap((0, _AV.getNativeSourceAndFullInitialStatusForLoadAsync)(source, initialStatus, downloadFirst));\n\n              case 9:\n                _ref3 = _context3.sent;\n                nativeSource = _ref3.nativeSource;\n                fullInitialStatus = _ref3.fullInitialStatus;\n                return _context3.abrupt(\"return\", new Promise(function (resolve, reject) {\n                  var loadSuccess = function loadSuccess(result) {\n                    var _result = (0, _slicedToArray2.default)(result, 2),\n                        key = _result[0],\n                        status = _result[1];\n\n                    _this2._key = key;\n                    _this2._loaded = true;\n                    _this2._loading = false;\n\n                    _this2._subscribeToNativeEvents();\n\n                    _this2._callOnPlaybackStatusUpdateForNewStatus(status);\n\n                    resolve(status);\n                  };\n\n                  var loadError = function loadError(error) {\n                    _this2._loading = false;\n                    reject(error);\n                  };\n\n                  _ExponentAV.default.loadForSound(nativeSource, fullInitialStatus).then(loadSuccess).catch(loadError);\n                }));\n\n              case 15:\n                throw new Error('The Sound is already loaded.');\n\n              case 16:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"unloadAsync\",\n      value: function unloadAsync() {\n        var key, _status2;\n\n        return _regenerator.default.async(function unloadAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                if (!this._loaded) {\n                  _context4.next = 12;\n                  break;\n                }\n\n                this._loaded = false;\n                key = this._key;\n                this._key = null;\n                _context4.next = 6;\n                return _regenerator.default.awrap(_ExponentAV.default.unloadForSound(key));\n\n              case 6:\n                _status2 = _context4.sent;\n\n                this._callOnPlaybackStatusUpdateForNewStatus(_status2);\n\n                this._clearSubscriptions();\n\n                return _context4.abrupt(\"return\", _status2);\n\n              case 12:\n                return _context4.abrupt(\"return\", this.getStatusAsync());\n\n              case 13:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setStatusAsync\",\n      value: function setStatusAsync(status) {\n        var _this3 = this;\n\n        return _regenerator.default.async(function setStatusAsync$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                (0, _AV.assertStatusValuesInBounds)(status);\n                return _context5.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.setStatusForSound(_this3._key, status);\n                }));\n\n              case 2:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"replayAsync\",\n      value: function replayAsync() {\n        var _this4 = this;\n\n        var status,\n            _args6 = arguments;\n        return _regenerator.default.async(function replayAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                status = _args6.length > 0 && _args6[0] !== undefined ? _args6[0] : {};\n\n                if (!(status.positionMillis && status.positionMillis !== 0)) {\n                  _context6.next = 3;\n                  break;\n                }\n\n                throw new Error('Requested position after replay has to be 0.');\n\n              case 3:\n                return _context6.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.replaySound(_this4._key, _objectSpread({}, status, {\n                    positionMillis: 0,\n                    shouldPlay: true\n                  }));\n                }));\n\n              case 4:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return Sound;\n  }();\n\n  exports.Sound = Sound;\n\n  Sound.create = function _callee2(source) {\n    var initialStatus,\n        onPlaybackStatusUpdate,\n        downloadFirst,\n        _args7 = arguments;\n    return _regenerator.default.async(function _callee2$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            initialStatus = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n            onPlaybackStatusUpdate = _args7.length > 2 && _args7[2] !== undefined ? _args7[2] : null;\n            downloadFirst = _args7.length > 3 && _args7[3] !== undefined ? _args7[3] : true;\n            console.warn(\"Sound.create is deprecated in favor of Sound.createAsync with the same API except for the new method name\");\n            return _context7.abrupt(\"return\", Sound.createAsync(source, initialStatus, onPlaybackStatusUpdate, downloadFirst));\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  };\n\n  Sound.createAsync = function _callee3(source) {\n    var initialStatus,\n        onPlaybackStatusUpdate,\n        downloadFirst,\n        sound,\n        status,\n        _args8 = arguments;\n    return _regenerator.default.async(function _callee3$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            initialStatus = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            onPlaybackStatusUpdate = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : null;\n            downloadFirst = _args8.length > 3 && _args8[3] !== undefined ? _args8[3] : true;\n            sound = new Sound();\n            sound.setOnPlaybackStatusUpdate(onPlaybackStatusUpdate);\n            _context8.next = 7;\n            return _regenerator.default.awrap(sound.loadAsync(source, initialStatus, downloadFirst));\n\n          case 7:\n            status = _context8.sent;\n            return _context8.abrupt(\"return\", {\n              sound: sound,\n              status: status\n            });\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  };\n\n  (0, _extends2.default)(Sound.prototype, _AV.PlaybackMixin);\n});","map":[[21,0,1,0],[23,0,2,0],[25,0,3,0],[27,0,4,0],[33,6,5,13,"Sound"],[33,11],[34,0,6,4],[34,21,6,18],[35,0,6,18],[37,0,6,18],[38,0,7,8],[38,11,7,13,"_loaded"],[38,18,7,8],[38,21,7,23],[38,26,7,8],[39,0,8,8],[39,11,8,13,"_loading"],[39,19,8,8],[39,22,8,24],[39,27,8,8],[40,0,9,8],[40,11,9,13,"_key"],[40,15,9,8],[40,18,9,20],[40,22,9,8],[41,0,10,8],[41,11,10,13,"_lastStatusUpdate"],[41,28,10,8],[41,31,10,33],[41,35,10,8],[42,0,11,8],[42,11,11,13,"_lastStatusUpdateTime"],[42,32,11,8],[42,35,11,37],[42,39,11,8],[43,0,12,8],[43,11,12,13,"_subscriptions"],[43,25,12,8],[43,28,12,30],[43,30,12,8],[44,0,13,8],[44,11,13,13,"_eventEmitter"],[44,24,13,8],[44,27,13,29],[44,31,13,33,"EventEmitter"],[44,49,13,29],[44,50,13,46,"ExponentAV"],[44,69,13,29],[44,70,13,8],[45,0,14,8],[45,11,14,13,"_coalesceStatusUpdatesInMillis"],[45,41,14,8],[45,44,14,46],[45,47,14,8],[46,0,15,8],[46,11,15,13,"_onPlaybackStatusUpdate"],[46,34,15,8],[46,37,15,39],[46,41,15,8],[48,0,16,8],[48,11,16,13,"_internalStatusUpdateCallback"],[48,40,16,8],[48,43,16,45],[48,59,16,67],[49,0,16,67],[49,12,16,48,"key"],[49,15,16,67],[49,23,16,48,"key"],[49,26,16,67],[50,0,16,67],[50,12,16,53,"status"],[50,18,16,67],[50,26,16,53,"status"],[50,32,16,67],[52,0,17,12],[52,12,17,16],[52,17,17,20],[52,18,17,21,"_key"],[52,22,17,16],[52,27,17,30,"key"],[52,30,17,12],[52,32,17,35],[53,0,18,16],[53,10,18,16],[53,15,18,20],[53,16,18,21,"_callOnPlaybackStatusUpdateForNewStatus"],[53,55,18,16],[53,56,18,61,"status"],[53,62,18,16],[54,0,19,13],[55,0,20,9],[55,7,16,8],[57,0,21,8],[57,11,21,13,"_internalErrorCallback"],[57,33,21,8],[57,36,21,38],[57,53,21,58],[58,0,21,58],[58,12,21,41,"key"],[58,15,21,58],[58,24,21,41,"key"],[58,27,21,58],[59,0,21,58],[59,12,21,46,"error"],[59,17,21,58],[59,26,21,46,"error"],[59,31,21,58],[61,0,22,12],[61,12,22,16],[61,17,22,20],[61,18,22,21,"_key"],[61,22,22,16],[61,27,22,30,"key"],[61,30,22,12],[61,32,22,35],[62,0,23,16],[62,10,23,16],[62,15,23,20],[62,16,23,21,"_errorCallback"],[62,30,23,16],[62,31,23,36,"error"],[62,36,23,16],[63,0,24,13],[64,0,25,9],[64,7,21,8],[66,0,26,8],[66,11,26,13,"_errorCallback"],[66,25,26,8],[66,28,26,30],[66,38,26,31,"error"],[66,43,26,30],[66,45,26,41],[67,0,27,12],[67,8,27,12],[67,13,27,16],[67,14,27,17,"_clearSubscriptions"],[67,33,27,12],[69,0,28,12],[69,8,28,12],[69,13,28,16],[69,14,28,17,"_loaded"],[69,21,28,12],[69,24,28,27],[69,29,28,12],[70,0,29,12],[70,8,29,12],[70,13,29,16],[70,14,29,17,"_key"],[70,18,29,12],[70,21,29,24],[70,25,29,12],[72,0,30,12],[72,8,30,12],[72,13,30,16],[72,14,30,17,"_callOnPlaybackStatusUpdateForNewStatus"],[72,53,30,12],[72,54,30,57],[72,81,30,75,"error"],[72,86,30,57],[72,87,30,12],[73,0,31,9],[73,7,26,8],[75,0,35,8],[75,11,35,13,"getStatusAsync"],[75,25,35,8],[75,28,35,30],[76,0,35,30],[77,0,35,30],[78,0,35,30],[79,0,35,30],[80,0,35,30],[81,0,35,30],[81,21,36,16],[81,26,36,20],[81,27,36,21,"_loaded"],[81,34,35,30],[82,0,35,30],[83,0,35,30],[84,0,35,30],[86,0,35,30],[86,49,37,23],[86,54,37,27],[86,55,37,28,"_performOperationAndHandleStatusAsync"],[86,92,37,23],[86,93,37,66],[87,0,37,66],[87,25,37,72,"ExponentAV"],[87,45,37,83,"getStatusForSound"],[87,62,37,72],[87,63,37,101],[87,68,37,105],[87,69,37,106,"_key"],[87,73,37,72],[87,74,37,66],[88,0,37,66],[88,17,37,23],[88,18,35,30],[90,0,35,30],[91,0,39,18,"status"],[91,16,39,18,"status"],[91,22,35,30],[91,25,39,27],[91,53,35,30],[93,0,40,12],[93,16,40,12],[93,21,40,16],[93,22,40,17,"_callOnPlaybackStatusUpdateForNewStatus"],[93,61,40,12],[93,62,40,57,"status"],[93,68,40,12],[95,0,35,30],[95,49,41,19,"status"],[95,55,35,30],[97,0,35,30],[98,0,35,30],[99,0,35,30],[100,0,35,30],[101,0,35,30],[102,0,35,30],[103,0,35,30],[103,7,35,8],[104,0,43,5],[108,62,45,44,"status"],[108,68],[108,70,45,52],[109,0,46,8],[109,12,46,14,"shouldDismissBasedOnCoalescing"],[109,42,46,44],[109,45,46,47],[109,50,46,52,"_lastStatusUpdateTime"],[109,71,46,47],[109,75,47,12,"JSON"],[109,79,47,16],[109,80,47,17,"stringify"],[109,89,47,12],[109,90,47,27,"status"],[109,96,47,12],[109,102,47,39],[109,107,47,44,"_lastStatusUpdate"],[109,124,46,47],[109,128,48,12,"Date"],[109,132,48,16],[109,133,48,17,"now"],[109,136,48,12],[109,141,48,25],[109,146,48,30,"_lastStatusUpdateTime"],[109,167,48,25],[109,168,48,52,"getTime"],[109,175,48,25],[109,177,48,12],[109,180,48,64],[109,185,48,69,"_coalesceStatusUpdatesInMillis"],[109,215,46,8],[111,0,49,8],[111,12,49,12],[111,17,49,17,"_onPlaybackStatusUpdate"],[111,40,49,12],[111,44,49,44],[111,48,49,12],[111,52,49,52],[111,53,49,53,"shouldDismissBasedOnCoalescing"],[111,83,49,8],[111,85,49,85],[112,0,50,12],[112,15,50,17,"_onPlaybackStatusUpdate"],[112,38,50,12],[112,39,50,41,"status"],[112,45,50,12],[114,0,51,12],[114,15,51,17,"_lastStatusUpdateTime"],[114,36,51,12],[114,39,51,41],[114,43,51,45,"Date"],[114,47,51,41],[114,49,51,12],[115,0,52,12],[115,15,52,17,"_lastStatusUpdate"],[115,32,52,12],[115,35,52,37,"JSON"],[115,39,52,41],[115,40,52,42,"stringify"],[115,49,52,37],[115,50,52,52,"status"],[115,56,52,37],[115,57,52,12],[116,0,53,9],[117,0,54,5],[120,60,55,48,"operation"],[120,69],[127,0,56,8],[129,21,57,12],[129,26,57,17,"_loaded"],[129,33],[135,50,58,33,"operation"],[135,59,58,42],[135,61],[138,0,58,18,"status"],[138,16,58,18,"status"],[138,23],[140,0,59,12],[140,21,59,17,"_callOnPlaybackStatusUpdateForNewStatus"],[140,60,59,12],[140,61,59,57,"status"],[140,68,59,12],[142,50,60,19,"status"],[142,57],[145,22,63,18],[145,26,63,22,"Error"],[145,31,63,18],[145,32,63,28],[145,88,63,18],[145,89],[156,49,67,31],[157,0,68,8],[157,12,68,12],[157,17,68,17,"_loaded"],[157,24,68,8],[157,26,68,26],[158,0,69,12],[158,15,69,17,"_subscriptions"],[158,29,69,12],[158,30,69,32,"push"],[158,34,69,12],[158,35,69,37],[158,40,69,42,"_eventEmitter"],[158,53,69,37],[158,54,69,56,"addListener"],[158,65,69,37],[158,66,69,68],[158,91,69,37],[158,93,69,95],[158,98,69,100,"_internalStatusUpdateCallback"],[158,127,69,37],[158,128,69,12],[160,0,70,12],[160,15,70,17,"_subscriptions"],[160,29,70,12],[160,30,70,32,"push"],[160,34,70,12],[160,35,70,37],[160,40,70,42,"_eventEmitter"],[160,53,70,37],[160,54,70,56,"addListener"],[160,65,70,37],[160,66,70,68],[160,86,70,37],[160,88,70,90],[160,93,70,95,"_internalErrorCallback"],[160,115,70,37],[160,116,70,12],[161,0,71,9],[162,0,72,5],[165,44,73,26],[166,0,74,8],[166,13,74,13,"_subscriptions"],[166,27,74,8],[166,28,74,28,"forEach"],[166,35,74,8],[166,36,74,36],[166,46,74,36,"e"],[166,47,74,37],[167,0,74,37],[167,17,74,41,"e"],[167,18,74,42],[167,19,74,43,"remove"],[167,25,74,41],[167,27,74,37],[168,0,74,37],[168,9,74,8],[170,0,75,8],[170,13,75,13,"_subscriptions"],[170,27,75,8],[170,30,75,30],[170,32,75,8],[171,0,76,5],[174,48,77,30,"onPlaybackStatusUpdate"],[174,70],[174,72,77,54],[175,0,78,8],[175,13,78,13,"_onPlaybackStatusUpdate"],[175,36,78,8],[175,39,78,39,"onPlaybackStatusUpdate"],[175,61,78,8],[176,0,79,8],[176,13,79,13,"getStatusAsync"],[176,27,79,8],[177,0,80,5],[180,32,82,20,"source"],[180,38],[194,0,82,28,"initialStatus"],[194,16,82,28,"initialStatus"],[194,29],[194,91,82,44],[194,93],[195,0,82,48,"downloadFirst"],[195,16,82,48,"downloadFirst"],[195,29],[195,91,82,64],[195,95],[196,0,83,8],[198,21,84,12],[198,26,84,17,"_loading"],[198,34],[203,22,85,18],[203,26,85,22,"Error"],[203,31,85,18],[203,32,85,28],[203,63,85,18],[203,64],[206,20,87,13],[206,25,87,18,"_loaded"],[206,32],[211,0,88,12],[211,21,88,17,"_loading"],[211,29,88,12],[211,32,88,28],[211,36,88,12],[213,50,89,63],[213,107,89,111,"source"],[213,113,89,63],[213,115,89,119,"initialStatus"],[213,128,89,63],[213,130,89,134,"downloadFirst"],[213,143,89,63],[213,144],[217,0,89,20,"nativeSource"],[217,16,89,20,"nativeSource"],[217,28],[217,37,89,20,"nativeSource"],[217,49],[218,0,89,34,"fullInitialStatus"],[218,16,89,34,"fullInitialStatus"],[218,33],[218,42,89,34,"fullInitialStatus"],[218,59],[219,50,91,19],[219,54,91,23,"Promise"],[219,61,91,19],[219,62,91,31],[219,72,91,32,"resolve"],[219,79,91,31],[219,81,91,41,"reject"],[219,87,91,31],[219,89,91,52],[220,0,92,16],[220,22,92,22,"loadSuccess"],[220,33,92,33],[220,36,92,36],[220,45,92,22,"loadSuccess"],[220,56,92,36],[220,57,92,37,"result"],[220,63,92,36],[220,65,92,48],[221,0,92,48],[221,63,93,42,"result"],[221,69,92,48],[222,0,92,48],[222,24,93,27,"key"],[222,27,92,48],[223,0,92,48],[223,24,93,32,"status"],[223,30,92,48],[225,0,94,20],[225,20,94,20],[225,26,94,24],[225,27,94,25,"_key"],[225,31,94,20],[225,34,94,32,"key"],[225,37,94,20],[226,0,95,20],[226,20,95,20],[226,26,95,24],[226,27,95,25,"_loaded"],[226,34,95,20],[226,37,95,35],[226,41,95,20],[227,0,96,20],[227,20,96,20],[227,26,96,24],[227,27,96,25,"_loading"],[227,35,96,20],[227,38,96,36],[227,43,96,20],[229,0,97,20],[229,20,97,20],[229,26,97,24],[229,27,97,25,"_subscribeToNativeEvents"],[229,51,97,20],[231,0,98,20],[231,20,98,20],[231,26,98,24],[231,27,98,25,"_callOnPlaybackStatusUpdateForNewStatus"],[231,66,98,20],[231,67,98,65,"status"],[231,73,98,20],[233,0,99,20,"resolve"],[233,20,99,20,"resolve"],[233,27,99,27],[233,28,99,28,"status"],[233,34,99,27],[233,35,99,20],[234,0,100,17],[234,19,92,16],[236,0,101,16],[236,22,101,22,"loadError"],[236,31,101,31],[236,34,101,34],[236,43,101,22,"loadError"],[236,52,101,34],[236,53,101,35,"error"],[236,58,101,34],[236,60,101,45],[237,0,102,20],[237,20,102,20],[237,26,102,24],[237,27,102,25,"_loading"],[237,35,102,20],[237,38,102,36],[237,43,102,20],[238,0,103,20,"reject"],[238,20,103,20,"reject"],[238,26,103,26],[238,27,103,27,"error"],[238,32,103,26],[238,33,103,20],[239,0,104,17],[239,19,101,16],[241,0,105,16,"ExponentAV"],[241,38,105,27,"loadForSound"],[241,50,105,16],[241,51,105,40,"nativeSource"],[241,63,105,16],[241,65,105,54,"fullInitialStatus"],[241,82,105,16],[241,84,106,21,"then"],[241,88,105,16],[241,89,106,26,"loadSuccess"],[241,100,105,16],[241,102,107,21,"catch"],[241,107,105,16],[241,108,107,27,"loadError"],[241,117,105,16],[242,0,108,13],[242,17,91,19],[242,18],[245,22,111,18],[245,26,111,22,"Error"],[245,31,111,18],[245,32,111,28],[245,62,111,18],[245,63],[263,21,115,12],[263,26,115,17,"_loaded"],[263,33],[268,0,116,12],[268,21,116,17,"_loaded"],[268,28,116,12],[268,31,116,27],[268,36,116,12],[269,0,117,18,"key"],[269,16,117,18,"key"],[269,19],[269,22,117,24],[269,27,117,29,"_key"],[269,31],[270,0,118,12],[270,21,118,17,"_key"],[270,25,118,12],[270,28,118,24],[270,32,118,12],[272,50,119,33,"ExponentAV"],[272,70,119,44,"unloadForSound"],[272,84,119,33],[272,85,119,59,"key"],[272,88,119,33],[272,89],[275,0,119,18,"status"],[275,16,119,18,"status"],[275,24],[277,0,120,12],[277,21,120,17,"_callOnPlaybackStatusUpdateForNewStatus"],[277,60,120,12],[277,61,120,57,"status"],[277,69,120,12],[279,0,121,12],[279,21,121,17,"_clearSubscriptions"],[279,40,121,12],[281,50,122,19,"status"],[281,58],[284,50,125,19],[284,55,125,24,"getStatusAsync"],[284,69,125,19],[284,71],[295,37,129,25,"status"],[295,43],[302,0,130,8],[302,52,130,35,"status"],[302,58,130,8],[303,50,131,15],[303,55,131,20,"_performOperationAndHandleStatusAsync"],[303,92,131,15],[303,93,131,58],[304,0,131,58],[304,25,131,64,"ExponentAV"],[304,45,131,75,"setStatusForSound"],[304,62,131,64],[304,63,131,93],[304,69,131,97],[304,70,131,98,"_key"],[304,74,131,64],[304,76,131,104,"status"],[304,82,131,64],[304,83,131,58],[305,0,131,58],[305,17,131,15],[305,18],[325,0,133,22,"status"],[325,16,133,22,"status"],[325,22],[325,84,133,31],[325,86],[327,22,134,12,"status"],[327,28,134,18],[327,29,134,19,"positionMillis"],[327,43,134,12],[327,47,134,37,"status"],[327,53,134,43],[327,54,134,44,"positionMillis"],[327,68,134,37],[327,73,134,63],[327,74],[332,22,135,18],[332,26,135,22,"Error"],[332,31,135,18],[332,32,135,28],[332,78,135,18],[332,79],[335,50,137,15],[335,55,137,20,"_performOperationAndHandleStatusAsync"],[335,92,137,15],[335,93,137,58],[336,0,137,58],[336,25,137,64,"ExponentAV"],[336,45,137,75,"replaySound"],[336,56,137,64],[336,57,137,87],[336,63,137,91],[336,64,137,92,"_key"],[336,68,137,64],[336,88,138,15,"status"],[336,94,137,64],[337,0,139,12,"positionMillis"],[337,20,139,12,"positionMillis"],[337,34,139,26],[337,36,139,28],[337,37,137,64],[338,0,140,12,"shouldPlay"],[338,20,140,12,"shouldPlay"],[338,30,140,22],[338,32,140,24],[339,0,137,64],[339,21,137,58],[340,0,137,58],[340,17,137,15],[340,18],[355,0,144,0,"Sound"],[355,2,144,0,"Sound"],[355,7,144,5],[355,8,144,6,"create"],[355,14,144,0],[355,17,144,15],[355,35,144,22,"source"],[355,41,144,15],[356,0,144,15],[357,0,144,15],[358,0,144,15],[359,0,144,15],[360,0,144,15],[361,0,144,15],[362,0,144,15],[363,0,144,15],[364,0,144,30,"initialStatus"],[364,12,144,30,"initialStatus"],[364,25,144,15],[364,87,144,46],[364,89,144,15],[365,0,144,50,"onPlaybackStatusUpdate"],[365,12,144,50,"onPlaybackStatusUpdate"],[365,34,144,15],[365,96,144,75],[365,100,144,15],[366,0,144,81,"downloadFirst"],[366,12,144,81,"downloadFirst"],[366,25,144,15],[366,87,144,97],[366,91,144,15],[367,0,145,4,"console"],[367,12,145,4,"console"],[367,19,145,11],[367,20,145,12,"warn"],[367,24,145,4],[368,0,144,15],[368,46,146,11,"Sound"],[368,51,146,16],[368,52,146,17,"createAsync"],[368,63,146,11],[368,64,146,29,"source"],[368,70,146,11],[368,72,146,37,"initialStatus"],[368,85,146,11],[368,87,146,52,"onPlaybackStatusUpdate"],[368,109,146,11],[368,111,146,76,"downloadFirst"],[368,124,146,11],[368,125,144,15],[370,0,144,15],[371,0,144,15],[372,0,144,15],[373,0,144,15],[374,0,144,15],[375,0,144,15],[376,0,144,15],[376,3,144,0],[378,0,148,0,"Sound"],[378,2,148,0,"Sound"],[378,7,148,5],[378,8,148,6,"createAsync"],[378,19,148,0],[378,22,148,20],[378,40,148,27,"source"],[378,46,148,20],[379,0,148,20],[380,0,148,20],[381,0,148,20],[382,0,148,20],[383,0,148,20],[384,0,148,20],[385,0,148,20],[386,0,148,20],[387,0,148,20],[388,0,148,20],[389,0,148,35,"initialStatus"],[389,12,148,35,"initialStatus"],[389,25,148,20],[389,87,148,51],[389,89,148,20],[390,0,148,55,"onPlaybackStatusUpdate"],[390,12,148,55,"onPlaybackStatusUpdate"],[390,34,148,20],[390,96,148,80],[390,100,148,20],[391,0,148,86,"downloadFirst"],[391,12,148,86,"downloadFirst"],[391,25,148,20],[391,87,148,102],[391,91,148,20],[392,0,149,10,"sound"],[392,12,149,10,"sound"],[392,17,148,20],[392,20,149,18],[392,24,149,22,"Sound"],[392,29,149,18],[392,31,148,20],[393,0,150,4,"sound"],[393,12,150,4,"sound"],[393,17,150,9],[393,18,150,10,"setOnPlaybackStatusUpdate"],[393,43,150,4],[393,44,150,36,"onPlaybackStatusUpdate"],[393,66,150,4],[394,0,148,20],[395,0,148,20],[395,46,151,25,"sound"],[395,51,151,30],[395,52,151,31,"loadAsync"],[395,61,151,25],[395,62,151,41,"source"],[395,68,151,25],[395,70,151,49,"initialStatus"],[395,83,151,25],[395,85,151,64,"downloadFirst"],[395,98,151,25],[395,99,148,20],[397,0,148,20],[398,0,151,10,"status"],[398,12,151,10,"status"],[398,18,148,20],[399,0,148,20],[399,46,152,11],[400,0,152,13,"sound"],[400,14,152,13,"sound"],[400,19,152,18],[400,21,152,13,"sound"],[400,26,152,11],[401,0,152,20,"status"],[401,14,152,20,"status"],[401,20,152,26],[401,22,152,20,"status"],[402,0,152,11],[402,13,148,20],[404,0,148,20],[405,0,148,20],[406,0,148,20],[407,0,148,20],[408,0,148,20],[409,0,148,20],[410,0,148,20],[410,3,148,0],[412,0,154,0],[412,25,154,14,"Sound"],[412,30,154,19],[412,31,154,20,"prototype"],[412,40,154,0],[412,42,154,31,"PlaybackMixin"],[412,59,154,0]]},"type":"js/module"}]}