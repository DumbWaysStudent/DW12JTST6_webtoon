{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/classCallCheck","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/createClass","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"../AV","data":{"isAsync":false}},{"name":"../ExponentAV","data":{"isAsync":false}},{"name":"./AudioAvailability","data":{"isAsync":false}},{"name":"./Sound","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.Recording = exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _classCallCheck2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[3], \"@babel/runtime/helpers/classCallCheck\"));\n\n  var _createClass2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"@babel/runtime/helpers/createClass\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[5], \"@unimodules/core\");\n\n  var _AV = _$$_REQUIRE(_dependencyMap[6], \"../AV\");\n\n  var _ExponentAV = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[7], \"../ExponentAV\"));\n\n  var _AudioAvailability = _$$_REQUIRE(_dependencyMap[8], \"./AudioAvailability\");\n\n  var _Sound = _$$_REQUIRE(_dependencyMap[9], \"./Sound\");\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = 1;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = 2;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4 = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = 3;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = 4;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = 5;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = 6;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = 7;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = 8;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS;\n  var RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = 9;\n  exports.RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM = RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = 0;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = 1;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = 2;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = 3;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = 4;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC;\n  var RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = 5;\n  exports.RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD = RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = 'lpcm';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = 'ac-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = 'cac3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = 'ima4';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = 'aac ';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = 'celp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = 'hvxc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = 'twvq';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = 'MAC3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = 'MAC6';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = 'ulaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = 'alaw';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = 'QDMC';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = 'QDM2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = 'Qclp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = '.mp1';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = '.mp2';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = '.mp3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = 'alac';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS = RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = 'aach';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = 'aacl';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = 'aace';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = 'aacf';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = 'aacg';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = 'aacp';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = 'aacs';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = 'samr';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = 'sawb';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = 'AUDB';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = 'ilbc';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = 0x6d730011;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA = RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = 0x6d730031;\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM = RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = 'aes3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3;\n  var RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = 'ec-3';\n  exports.RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3 = RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = 0;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN = RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = 0x20;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW = RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = 0x40;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM = RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = 0x60;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH = RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH;\n  var RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = 0x7f;\n  exports.RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX = RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = 0;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = 1;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = 2;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED;\n  var RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = 3;\n  exports.RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE = RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE;\n  var RECORDING_OPTIONS_PRESET_HIGH_QUALITY = {\n    android: {\n      extension: '.m4a',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_HIGH_QUALITY = RECORDING_OPTIONS_PRESET_HIGH_QUALITY;\n  var RECORDING_OPTIONS_PRESET_LOW_QUALITY = {\n    android: {\n      extension: '.3gp',\n      outputFormat: RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP,\n      audioEncoder: RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000\n    },\n    ios: {\n      extension: '.caf',\n      audioQuality: RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN,\n      sampleRate: 44100,\n      numberOfChannels: 2,\n      bitRate: 128000,\n      linearPCMBitDepth: 16,\n      linearPCMIsBigEndian: false,\n      linearPCMIsFloat: false\n    }\n  };\n  exports.RECORDING_OPTIONS_PRESET_LOW_QUALITY = RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n  var _recorderExists = false;\n  var eventEmitter = _core.Platform.OS === 'android' ? new _core.EventEmitter(_ExponentAV.default) : null;\n\n  var Recording = function () {\n    function Recording() {\n      var _this = this;\n\n      (0, _classCallCheck2.default)(this, Recording);\n      this._subscription = null;\n      this._canRecord = false;\n      this._isDoneRecording = false;\n      this._finalDurationMillis = 0;\n      this._uri = null;\n      this._onRecordingStatusUpdate = null;\n      this._progressUpdateTimeoutVariable = null;\n      this._progressUpdateIntervalMillis = _AV._DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS;\n      this._options = null;\n\n      this._cleanupForUnloadedRecorder = function _callee(finalStatus) {\n        return _regenerator.default.async(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _this._canRecord = false;\n                _this._isDoneRecording = true;\n                _this._finalDurationMillis = finalStatus.durationMillis;\n                _recorderExists = false;\n\n                if (_this._subscription) {\n                  _this._subscription.remove();\n\n                  _this._subscription = null;\n                }\n\n                _this._disablePolling();\n\n                _context.next = 8;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 8:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        });\n      };\n\n      this._pollingLoop = function _callee2() {\n        return _regenerator.default.async(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!((0, _AudioAvailability.isAudioEnabled)() && _this._canRecord && _this._onRecordingStatusUpdate != null)) {\n                  _context2.next = 10;\n                  break;\n                }\n\n                _this._progressUpdateTimeoutVariable = setTimeout(_this._pollingLoop, _this._progressUpdateIntervalMillis);\n                _context2.prev = 2;\n                _context2.next = 5;\n                return _regenerator.default.awrap(_this.getStatusAsync());\n\n              case 5:\n                _context2.next = 10;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n\n                _this._disablePolling();\n\n              case 10:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, null, null, [[2, 7]]);\n      };\n\n      this.getStatusAsync = function _callee3() {\n        var status;\n        return _regenerator.default.async(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!_this._canRecord) {\n                  _context3.next = 2;\n                  break;\n                }\n\n                return _context3.abrupt(\"return\", _this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.getAudioRecordingStatus();\n                }));\n\n              case 2:\n                status = {\n                  canRecord: false,\n                  isRecording: false,\n                  isDoneRecording: _this._isDoneRecording,\n                  durationMillis: _this._finalDurationMillis\n                };\n\n                _this._callOnRecordingStatusUpdateForNewStatus(status);\n\n                return _context3.abrupt(\"return\", status);\n\n              case 5:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        });\n      };\n    }\n\n    (0, _createClass2.default)(Recording, [{\n      key: \"_disablePolling\",\n      value: function _disablePolling() {\n        if (this._progressUpdateTimeoutVariable != null) {\n          clearTimeout(this._progressUpdateTimeoutVariable);\n          this._progressUpdateTimeoutVariable = null;\n        }\n      }\n    }, {\n      key: \"_enablePollingIfNecessaryAndPossible\",\n      value: function _enablePollingIfNecessaryAndPossible() {\n        if ((0, _AudioAvailability.isAudioEnabled)() && this._canRecord && this._onRecordingStatusUpdate != null) {\n          this._disablePolling();\n\n          this._pollingLoop();\n        }\n      }\n    }, {\n      key: \"_callOnRecordingStatusUpdateForNewStatus\",\n      value: function _callOnRecordingStatusUpdateForNewStatus(status) {\n        if (this._onRecordingStatusUpdate != null) {\n          this._onRecordingStatusUpdate(status);\n        }\n      }\n    }, {\n      key: \"_performOperationAndHandleStatusAsync\",\n      value: function _performOperationAndHandleStatusAsync(operation) {\n        var _status;\n\n        return _regenerator.default.async(function _performOperationAndHandleStatusAsync$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!this._canRecord) {\n                  _context4.next = 9;\n                  break;\n                }\n\n                _context4.next = 4;\n                return _regenerator.default.awrap(operation());\n\n              case 4:\n                _status = _context4.sent;\n\n                this._callOnRecordingStatusUpdateForNewStatus(_status);\n\n                return _context4.abrupt(\"return\", _status);\n\n              case 9:\n                throw new Error('Cannot complete operation because this recorder is not ready to record.');\n\n              case 10:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"setOnRecordingStatusUpdate\",\n      value: function setOnRecordingStatusUpdate(onRecordingStatusUpdate) {\n        this._onRecordingStatusUpdate = onRecordingStatusUpdate;\n\n        if (onRecordingStatusUpdate == null) {\n          this._disablePolling();\n        } else {\n          this._enablePollingIfNecessaryAndPossible();\n        }\n\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"setProgressUpdateInterval\",\n      value: function setProgressUpdateInterval(progressUpdateIntervalMillis) {\n        this._progressUpdateIntervalMillis = progressUpdateIntervalMillis;\n        this.getStatusAsync();\n      }\n    }, {\n      key: \"prepareToRecordAsync\",\n      value: function prepareToRecordAsync() {\n        var options,\n            extensionRegex,\n            _ref,\n            uri,\n            _status2,\n            currentStatus,\n            _args5 = arguments;\n\n        return _regenerator.default.async(function prepareToRecordAsync$(_context5) {\n          while (1) {\n            switch (_context5.prev = _context5.next) {\n              case 0:\n                options = _args5.length > 0 && _args5[0] !== undefined ? _args5[0] : RECORDING_OPTIONS_PRESET_LOW_QUALITY;\n                (0, _AudioAvailability.throwIfAudioIsDisabled)();\n\n                if (!_recorderExists) {\n                  _context5.next = 4;\n                  break;\n                }\n\n                throw new Error('Only one Recording object can be prepared at a given time.');\n\n              case 4:\n                if (!this._isDoneRecording) {\n                  _context5.next = 6;\n                  break;\n                }\n\n                throw new Error('This Recording object is done recording; you must make a new one.');\n\n              case 6:\n                if (!(!options || !options.android || !options.ios)) {\n                  _context5.next = 8;\n                  break;\n                }\n\n                throw new Error('You must provide recording options for android and ios in order to prepare to record.');\n\n              case 8:\n                extensionRegex = /^\\.\\w+$/;\n\n                if (!(!options.android.extension || !options.ios.extension || !extensionRegex.test(options.android.extension) || !extensionRegex.test(options.ios.extension))) {\n                  _context5.next = 11;\n                  break;\n                }\n\n                throw new Error(\"Your file extensions must match \" + extensionRegex.toString() + \".\");\n\n              case 11:\n                if (this._canRecord) {\n                  _context5.next = 28;\n                  break;\n                }\n\n                if (eventEmitter) {\n                  this._subscription = eventEmitter.addListener('Expo.Recording.recorderUnloaded', this._cleanupForUnloadedRecorder);\n                }\n\n                _context5.next = 15;\n                return _regenerator.default.awrap(_ExponentAV.default.prepareAudioRecorder(options));\n\n              case 15:\n                _ref = _context5.sent;\n                uri = _ref.uri;\n                _status2 = _ref.status;\n                _recorderExists = true;\n                this._uri = uri;\n                this._options = options;\n                this._canRecord = true;\n                currentStatus = _objectSpread({}, _status2, {\n                  canRecord: true\n                });\n\n                this._callOnRecordingStatusUpdateForNewStatus(currentStatus);\n\n                this._enablePollingIfNecessaryAndPossible();\n\n                return _context5.abrupt(\"return\", currentStatus);\n\n              case 28:\n                throw new Error('This Recording object is already prepared to record.');\n\n              case 29:\n              case \"end\":\n                return _context5.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"startAsync\",\n      value: function startAsync() {\n        return _regenerator.default.async(function startAsync$(_context6) {\n          while (1) {\n            switch (_context6.prev = _context6.next) {\n              case 0:\n                return _context6.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.startAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context6.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"pauseAsync\",\n      value: function pauseAsync() {\n        return _regenerator.default.async(function pauseAsync$(_context7) {\n          while (1) {\n            switch (_context7.prev = _context7.next) {\n              case 0:\n                return _context7.abrupt(\"return\", this._performOperationAndHandleStatusAsync(function () {\n                  return _ExponentAV.default.pauseAudioRecording();\n                }));\n\n              case 1:\n              case \"end\":\n                return _context7.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"stopAndUnloadAsync\",\n      value: function stopAndUnloadAsync() {\n        var finalStatus;\n        return _regenerator.default.async(function stopAndUnloadAsync$(_context8) {\n          while (1) {\n            switch (_context8.prev = _context8.next) {\n              case 0:\n                if (this._canRecord) {\n                  _context8.next = 6;\n                  break;\n                }\n\n                if (!this._isDoneRecording) {\n                  _context8.next = 5;\n                  break;\n                }\n\n                throw new Error('Cannot unload a Recording that has already been unloaded.');\n\n              case 5:\n                throw new Error('Cannot unload a Recording that has not been prepared.');\n\n              case 6:\n                _context8.next = 8;\n                return _regenerator.default.awrap(_ExponentAV.default.stopAudioRecording());\n\n              case 8:\n                finalStatus = _context8.sent;\n                _context8.next = 11;\n                return _regenerator.default.awrap(_ExponentAV.default.unloadAudioRecorder());\n\n              case 11:\n                return _context8.abrupt(\"return\", this._cleanupForUnloadedRecorder(finalStatus));\n\n              case 12:\n              case \"end\":\n                return _context8.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"getURI\",\n      value: function getURI() {\n        return this._uri;\n      }\n    }, {\n      key: \"createNewLoadedSound\",\n      value: function createNewLoadedSound() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args9 = arguments;\n        return _regenerator.default.async(function createNewLoadedSound$(_context9) {\n          while (1) {\n            switch (_context9.prev = _context9.next) {\n              case 0:\n                initialStatus = _args9.length > 0 && _args9[0] !== undefined ? _args9[0] : {};\n                onPlaybackStatusUpdate = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : null;\n                console.warn(\"createNewLoadedSound is deprecated in favor of createNewLoadedSoundAsync, which has the same API aside from the method name\");\n                return _context9.abrupt(\"return\", this.createNewLoadedSoundAsync(initialStatus, onPlaybackStatusUpdate));\n\n              case 4:\n              case \"end\":\n                return _context9.stop();\n            }\n          }\n        }, null, this);\n      }\n    }, {\n      key: \"createNewLoadedSoundAsync\",\n      value: function createNewLoadedSoundAsync() {\n        var initialStatus,\n            onPlaybackStatusUpdate,\n            _args10 = arguments;\n        return _regenerator.default.async(function createNewLoadedSoundAsync$(_context10) {\n          while (1) {\n            switch (_context10.prev = _context10.next) {\n              case 0:\n                initialStatus = _args10.length > 0 && _args10[0] !== undefined ? _args10[0] : {};\n                onPlaybackStatusUpdate = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : null;\n\n                if (!(this._uri == null || !this._isDoneRecording)) {\n                  _context10.next = 4;\n                  break;\n                }\n\n                throw new Error('Cannot create sound when the Recording has not finished!');\n\n              case 4:\n                return _context10.abrupt(\"return\", _Sound.Sound.createAsync({\n                  uri: this._uri\n                }, initialStatus, onPlaybackStatusUpdate, false));\n\n              case 5:\n              case \"end\":\n                return _context10.stop();\n            }\n          }\n        }, null, this);\n      }\n    }]);\n    return Recording;\n  }();\n\n  exports.Recording = Recording;\n});","map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[23,0,4,0],[25,0,5,0],[31,0,7,7],[31,6,7,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_DEFAULT"],[31,52,7,59],[31,55,7,62],[31,56,7,7],[33,0,8,7],[33,6,8,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[33,54,8,61],[33,57,8,64],[33,58,8,7],[35,0,9,7],[35,6,9,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[35,51,9,58],[35,54,9,61],[35,55,9,7],[37,0,10,7],[37,6,10,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_NB"],[37,51,10,58],[37,54,10,61],[37,55,10,7],[39,0,11,7],[39,6,11,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AMR_WB"],[39,51,11,58],[39,54,11,61],[39,55,11,7],[41,0,12,7],[41,6,12,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADIF"],[41,53,12,60],[41,56,12,63],[41,57,12,7],[43,0,13,7],[43,6,13,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_AAC_ADTS"],[43,53,13,60],[43,56,13,63],[43,57,13,7],[45,0,14,7],[45,6,14,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_RTP_AVP"],[45,52,14,59],[45,55,14,62],[45,56,14,7],[47,0,15,7],[47,6,15,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG2TS"],[47,52,15,59],[47,55,15,62],[47,56,15,7],[49,0,16,7],[49,6,16,13,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_WEBM"],[49,49,16,56],[49,52,16,59],[49,53,16,7],[51,0,17,7],[51,6,17,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_DEFAULT"],[51,52,17,59],[51,55,17,62],[51,56,17,7],[53,0,18,7],[53,6,18,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[53,51,18,58],[53,54,18,61],[53,55,18,7],[55,0,19,7],[55,6,19,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_WB"],[55,51,19,58],[55,54,19,61],[55,55,19,7],[57,0,20,7],[57,6,20,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[57,48,20,55],[57,51,20,58],[57,52,20,7],[59,0,21,7],[59,6,21,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_HE_AAC"],[59,51,21,58],[59,54,21,61],[59,55,21,7],[61,0,22,7],[61,6,22,13,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC_ELD"],[61,52,22,59],[61,55,22,62],[61,56,22,7],[63,0,23,7],[63,6,23,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_LINEARPCM"],[63,50,23,57],[63,53,23,60],[63,59,23,7],[65,0,24,7],[65,6,24,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AC3"],[65,44,24,51],[65,47,24,54],[65,53,24,7],[67,0,25,7],[67,6,25,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_60958AC3"],[67,49,25,56],[67,52,25,59],[67,58,25,7],[69,0,26,7],[69,6,26,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLEIMA4"],[69,50,26,57],[69,53,26,60],[69,59,26,7],[71,0,27,7],[71,6,27,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC"],[71,49,27,56],[71,52,27,59],[71,58,27,7],[73,0,28,7],[73,6,28,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4CELP"],[73,50,28,57],[73,53,28,60],[73,59,28,7],[75,0,29,7],[75,6,29,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4HVXC"],[75,50,29,57],[75,53,29,60],[75,59,29,7],[77,0,30,7],[77,6,30,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4TWINVQ"],[77,52,30,59],[77,55,30,62],[77,61,30,7],[79,0,31,7],[79,6,31,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE3"],[79,46,31,53],[79,49,31,56],[79,55,31,7],[81,0,32,7],[81,6,32,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MACE6"],[81,46,32,53],[81,49,32,56],[81,55,32,7],[83,0,33,7],[83,6,33,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ULAW"],[83,45,33,52],[83,48,33,55],[83,54,33,7],[85,0,34,7],[85,6,34,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ALAW"],[85,45,34,52],[85,48,34,55],[85,54,34,7],[87,0,35,7],[87,6,35,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN"],[87,48,35,55],[87,51,35,58],[87,57,35,7],[89,0,36,7],[89,6,36,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QDESIGN2"],[89,49,36,56],[89,52,36,59],[89,58,36,7],[91,0,37,7],[91,6,37,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_QUALCOMM"],[91,49,37,56],[91,52,37,59],[91,58,37,7],[93,0,38,7],[93,6,38,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER1"],[93,51,38,58],[93,54,38,61],[93,60,38,7],[95,0,39,7],[95,6,39,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER2"],[95,51,39,58],[95,54,39,61],[95,60,39,7],[97,0,40,7],[97,6,40,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEGLAYER3"],[97,51,40,58],[97,54,40,61],[97,60,40,7],[99,0,41,7],[99,6,41,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_APPLELOSSLESS"],[99,54,41,61],[99,57,41,64],[99,63,41,7],[101,0,42,7],[101,6,42,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE"],[101,52,42,59],[101,55,42,62],[101,61,42,7],[103,0,43,7],[103,6,43,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_LD"],[103,52,43,59],[103,55,43,62],[103,61,43,7],[105,0,44,7],[105,6,44,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD"],[105,53,44,60],[105,56,44,63],[105,62,44,7],[107,0,45,7],[107,6,45,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_SBR"],[107,57,45,64],[107,60,45,67],[107,66,45,7],[109,0,46,7],[109,6,46,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_ELD_V2"],[109,56,46,63],[109,59,46,66],[109,65,46,7],[111,0,47,7],[111,6,47,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_HE_V2"],[111,55,47,62],[111,58,47,65],[111,64,47,7],[113,0,48,7],[113,6,48,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MPEG4AAC_SPATIAL"],[113,57,48,64],[113,60,48,67],[113,66,48,7],[115,0,49,7],[115,6,49,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR"],[115,44,49,51],[115,47,49,54],[115,53,49,7],[117,0,50,7],[117,6,50,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AMR_WB"],[117,47,50,54],[117,50,50,57],[117,56,50,7],[119,0,51,7],[119,6,51,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AUDIBLE"],[119,48,51,55],[119,51,51,58],[119,57,51,7],[121,0,52,7],[121,6,52,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ILBC"],[121,45,52,52],[121,48,52,55],[121,54,52,7],[123,0,53,7],[123,6,53,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_DVIINTELIMA"],[123,52,53,59],[123,55,53,62],[123,65,53,7],[125,0,54,7],[125,6,54,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_MICROSOFTGSM"],[125,53,54,60],[125,56,54,63],[125,66,54,7],[127,0,55,7],[127,6,55,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_AES3"],[127,45,55,52],[127,48,55,55],[127,54,55,7],[129,0,56,7],[129,6,56,13,"RECORDING_OPTION_IOS_OUTPUT_FORMAT_ENHANCEDAC3"],[129,52,56,59],[129,55,56,62],[129,61,56,7],[131,0,57,7],[131,6,57,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[131,44,57,51],[131,47,57,54],[131,48,57,7],[133,0,58,7],[133,6,58,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_LOW"],[133,44,58,51],[133,47,58,54],[133,51,58,7],[135,0,59,7],[135,6,59,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MEDIUM"],[135,47,59,54],[135,50,59,57],[135,54,59,7],[137,0,60,7],[137,6,60,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_HIGH"],[137,45,60,52],[137,48,60,55],[137,52,60,7],[139,0,61,7],[139,6,61,13,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[139,44,61,51],[139,47,61,54],[139,51,61,7],[141,0,62,7],[141,6,62,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_CONSTANT"],[141,53,62,60],[141,56,62,63],[141,57,62,7],[143,0,63,7],[143,6,63,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_LONG_TERM_AVERAGE"],[143,62,63,69],[143,65,63,72],[143,66,63,7],[145,0,64,7],[145,6,64,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE_CONSTRAINED"],[145,65,64,72],[145,68,64,75],[145,69,64,7],[147,0,65,7],[147,6,65,13,"RECORDING_OPTION_IOS_BIT_RATE_STRATEGY_VARIABLE"],[147,53,65,60],[147,56,65,63],[147,57,65,7],[149,0,67,7],[149,6,67,13,"RECORDING_OPTIONS_PRESET_HIGH_QUALITY"],[149,43,67,50],[149,46,67,53],[150,0,68,4,"android"],[150,4,68,4,"android"],[150,11,68,11],[150,13,68,13],[151,0,69,8,"extension"],[151,6,69,8,"extension"],[151,15,69,17],[151,17,69,19],[151,23,68,13],[152,0,70,8,"outputFormat"],[152,6,70,8,"outputFormat"],[152,18,70,20],[152,20,70,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_MPEG_4"],[152,65,68,13],[153,0,71,8,"audioEncoder"],[153,6,71,8,"audioEncoder"],[153,18,71,20],[153,20,71,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AAC"],[153,62,68,13],[154,0,72,8,"sampleRate"],[154,6,72,8,"sampleRate"],[154,16,72,18],[154,18,72,20],[154,23,68,13],[155,0,73,8,"numberOfChannels"],[155,6,73,8,"numberOfChannels"],[155,22,73,24],[155,24,73,26],[155,25,68,13],[156,0,74,8,"bitRate"],[156,6,74,8,"bitRate"],[156,13,74,15],[156,15,74,17],[157,0,68,13],[157,5,67,53],[158,0,76,4,"ios"],[158,4,76,4,"ios"],[158,7,76,7],[158,9,76,9],[159,0,77,8,"extension"],[159,6,77,8,"extension"],[159,15,77,17],[159,17,77,19],[159,23,76,9],[160,0,78,8,"audioQuality"],[160,6,78,8,"audioQuality"],[160,18,78,20],[160,20,78,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MAX"],[160,58,76,9],[161,0,79,8,"sampleRate"],[161,6,79,8,"sampleRate"],[161,16,79,18],[161,18,79,20],[161,23,76,9],[162,0,80,8,"numberOfChannels"],[162,6,80,8,"numberOfChannels"],[162,22,80,24],[162,24,80,26],[162,25,76,9],[163,0,81,8,"bitRate"],[163,6,81,8,"bitRate"],[163,13,81,15],[163,15,81,17],[163,21,76,9],[164,0,82,8,"linearPCMBitDepth"],[164,6,82,8,"linearPCMBitDepth"],[164,23,82,25],[164,25,82,27],[164,27,76,9],[165,0,83,8,"linearPCMIsBigEndian"],[165,6,83,8,"linearPCMIsBigEndian"],[165,26,83,28],[165,28,83,30],[165,33,76,9],[166,0,84,8,"linearPCMIsFloat"],[166,6,84,8,"linearPCMIsFloat"],[166,22,84,24],[166,24,84,26],[167,0,76,9],[168,0,67,53],[168,3,67,7],[170,0,87,7],[170,6,87,13,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[170,42,87,49],[170,45,87,52],[171,0,88,4,"android"],[171,4,88,4,"android"],[171,11,88,11],[171,13,88,13],[172,0,89,8,"extension"],[172,6,89,8,"extension"],[172,15,89,17],[172,17,89,19],[172,23,88,13],[173,0,90,8,"outputFormat"],[173,6,90,8,"outputFormat"],[173,18,90,20],[173,20,90,22,"RECORDING_OPTION_ANDROID_OUTPUT_FORMAT_THREE_GPP"],[173,68,88,13],[174,0,91,8,"audioEncoder"],[174,6,91,8,"audioEncoder"],[174,18,91,20],[174,20,91,22,"RECORDING_OPTION_ANDROID_AUDIO_ENCODER_AMR_NB"],[174,65,88,13],[175,0,92,8,"sampleRate"],[175,6,92,8,"sampleRate"],[175,16,92,18],[175,18,92,20],[175,23,88,13],[176,0,93,8,"numberOfChannels"],[176,6,93,8,"numberOfChannels"],[176,22,93,24],[176,24,93,26],[176,25,88,13],[177,0,94,8,"bitRate"],[177,6,94,8,"bitRate"],[177,13,94,15],[177,15,94,17],[178,0,88,13],[178,5,87,52],[179,0,96,4,"ios"],[179,4,96,4,"ios"],[179,7,96,7],[179,9,96,9],[180,0,97,8,"extension"],[180,6,97,8,"extension"],[180,15,97,17],[180,17,97,19],[180,23,96,9],[181,0,98,8,"audioQuality"],[181,6,98,8,"audioQuality"],[181,18,98,20],[181,20,98,22,"RECORDING_OPTION_IOS_AUDIO_QUALITY_MIN"],[181,58,96,9],[182,0,99,8,"sampleRate"],[182,6,99,8,"sampleRate"],[182,16,99,18],[182,18,99,20],[182,23,96,9],[183,0,100,8,"numberOfChannels"],[183,6,100,8,"numberOfChannels"],[183,22,100,24],[183,24,100,26],[183,25,96,9],[184,0,101,8,"bitRate"],[184,6,101,8,"bitRate"],[184,13,101,15],[184,15,101,17],[184,21,96,9],[185,0,102,8,"linearPCMBitDepth"],[185,6,102,8,"linearPCMBitDepth"],[185,23,102,25],[185,25,102,27],[185,27,96,9],[186,0,103,8,"linearPCMIsBigEndian"],[186,6,103,8,"linearPCMIsBigEndian"],[186,26,103,28],[186,28,103,30],[186,33,96,9],[187,0,104,8,"linearPCMIsFloat"],[187,6,104,8,"linearPCMIsFloat"],[187,22,104,24],[187,24,104,26],[188,0,96,9],[189,0,87,52],[189,3,87,7],[191,0,107,0],[191,6,107,4,"_recorderExists"],[191,21,107,19],[191,24,107,22],[191,29,107,0],[192,0,108,0],[192,6,108,6,"eventEmitter"],[192,18,108,18],[192,21,108,21,"Platform"],[192,36,108,30,"OS"],[192,38,108,21],[192,43,108,37],[192,52,108,21],[192,55,108,49],[192,59,108,53,"EventEmitter"],[192,77,108,49],[192,78,108,66,"ExponentAV"],[192,97,108,49],[192,98,108,21],[192,101,108,80],[192,105,108,0],[194,6,109,13,"Recording"],[194,15],[195,0,110,4],[195,25,110,18],[196,0,110,18],[198,0,110,18],[199,0,111,8],[199,11,111,13,"_subscription"],[199,24,111,8],[199,27,111,29],[199,31,111,8],[200,0,112,8],[200,11,112,13,"_canRecord"],[200,21,112,8],[200,24,112,26],[200,29,112,8],[201,0,113,8],[201,11,113,13,"_isDoneRecording"],[201,27,113,8],[201,30,113,32],[201,35,113,8],[202,0,114,8],[202,11,114,13,"_finalDurationMillis"],[202,31,114,8],[202,34,114,36],[202,35,114,8],[203,0,115,8],[203,11,115,13,"_uri"],[203,15,115,8],[203,18,115,20],[203,22,115,8],[204,0,116,8],[204,11,116,13,"_onRecordingStatusUpdate"],[204,35,116,8],[204,38,116,40],[204,42,116,8],[205,0,117,8],[205,11,117,13,"_progressUpdateTimeoutVariable"],[205,41,117,8],[205,44,117,46],[205,48,117,8],[206,0,118,8],[206,11,118,13,"_progressUpdateIntervalMillis"],[206,40,118,8],[206,43,118,45,"_DEFAULT_PROGRESS_UPDATE_INTERVAL_MILLIS"],[206,87,118,8],[207,0,119,8],[207,11,119,13,"_options"],[207,19,119,8],[207,22,119,24],[207,26,119,8],[209,0,121,8],[209,11,121,13,"_cleanupForUnloadedRecorder"],[209,38,121,8],[209,41,121,43],[209,58,121,50,"finalStatus"],[209,69,121,43],[210,0,121,43],[211,0,121,43],[212,0,121,43],[213,0,121,43],[214,0,122,12],[214,16,122,12],[214,21,122,16],[214,22,122,17,"_canRecord"],[214,32,122,12],[214,35,122,30],[214,40,122,12],[215,0,123,12],[215,16,123,12],[215,21,123,16],[215,22,123,17,"_isDoneRecording"],[215,38,123,12],[215,41,123,36],[215,45,123,12],[216,0,125,12],[216,16,125,12],[216,21,125,16],[216,22,125,17,"_finalDurationMillis"],[216,42,125,12],[216,45,125,40,"finalStatus"],[216,56,125,51],[216,57,125,52,"durationMillis"],[216,71,125,12],[217,0,126,12,"_recorderExists"],[217,16,126,12,"_recorderExists"],[217,31,126,27],[217,34,126,30],[217,39,126,12],[219,0,127,12],[219,20,127,16],[219,25,127,20],[219,26,127,21,"_subscription"],[219,39,127,12],[219,41,127,36],[220,0,128,16],[220,18,128,16],[220,23,128,20],[220,24,128,21,"_subscription"],[220,37,128,16],[220,38,128,35,"remove"],[220,44,128,16],[222,0,129,16],[222,18,129,16],[222,23,129,20],[222,24,129,21,"_subscription"],[222,37,129,16],[222,40,129,37],[222,44,129,16],[223,0,130,13],[225,0,131,12],[225,16,131,12],[225,21,131,16],[225,22,131,17,"_disablePolling"],[225,37,131,12],[227,0,121,43],[228,0,121,43],[228,50,132,25],[228,55,132,29],[228,56,132,30,"getStatusAsync"],[228,70,132,25],[228,72,121,43],[230,0,121,43],[231,0,121,43],[233,0,121,43],[234,0,121,43],[235,0,121,43],[236,0,121,43],[237,0,121,43],[238,0,121,43],[239,0,121,43],[239,7,121,8],[241,0,134,8],[241,11,134,13,"_pollingLoop"],[241,23,134,8],[241,26,134,28],[242,0,134,28],[243,0,134,28],[244,0,134,28],[245,0,134,28],[246,0,134,28],[246,22,135,16],[246,66,135,36],[246,71,135,40],[246,72,135,41,"_canRecord"],[246,82,135,16],[246,86,135,55],[246,91,135,59],[246,92,135,60,"_onRecordingStatusUpdate"],[246,116,135,55],[246,120,135,88],[246,124,134,28],[247,0,134,28],[248,0,134,28],[249,0,134,28],[251,0,136,16],[251,16,136,16],[251,21,136,20],[251,22,136,21,"_progressUpdateTimeoutVariable"],[251,52,136,16],[251,55,136,54,"setTimeout"],[251,65,136,64],[251,66,136,65],[251,71,136,69],[251,72,136,70,"_pollingLoop"],[251,84,136,64],[251,86,136,84],[251,91,136,88],[251,92,136,89,"_progressUpdateIntervalMillis"],[251,121,136,64],[251,122,136,16],[252,0,134,28],[253,0,134,28],[254,0,134,28],[254,50,138,26],[254,55,138,30],[254,56,138,31,"getStatusAsync"],[254,70,138,26],[254,72,134,28],[256,0,134,28],[257,0,134,28],[258,0,134,28],[260,0,134,28],[261,0,134,28],[262,0,134,28],[264,0,141,20],[264,16,141,20],[264,21,141,24],[264,22,141,25,"_disablePolling"],[264,37,141,20],[266,0,134,28],[267,0,134,28],[268,0,134,28],[269,0,134,28],[270,0,134,28],[271,0,134,28],[272,0,134,28],[272,7,134,8],[274,0,147,8],[274,11,147,13,"getStatusAsync"],[274,25,147,8],[274,28,147,30],[275,0,147,30],[276,0,147,30],[277,0,147,30],[278,0,147,30],[279,0,147,30],[280,0,147,30],[280,21,149,16],[280,26,149,20],[280,27,149,21,"_canRecord"],[280,37,147,30],[281,0,147,30],[282,0,147,30],[283,0,147,30],[285,0,147,30],[285,50,150,23],[285,55,150,27],[285,56,150,28,"_performOperationAndHandleStatusAsync"],[285,93,150,23],[285,94,150,66],[286,0,150,66],[286,25,150,72,"ExponentAV"],[286,45,150,83,"getAudioRecordingStatus"],[286,68,150,72],[286,70,150,66],[287,0,150,66],[287,17,150,23],[287,18,147,30],[289,0,147,30],[290,0,152,18,"status"],[290,16,152,18,"status"],[290,22,147,30],[290,25,152,27],[291,0,153,16,"canRecord"],[291,18,153,16,"canRecord"],[291,27,153,25],[291,29,153,27],[291,34,152,27],[292,0,154,16,"isRecording"],[292,18,154,16,"isRecording"],[292,29,154,27],[292,31,154,29],[292,36,152,27],[293,0,155,16,"isDoneRecording"],[293,18,155,16,"isDoneRecording"],[293,33,155,31],[293,35,155,33],[293,40,155,37],[293,41,155,38,"_isDoneRecording"],[293,57,152,27],[294,0,156,16,"durationMillis"],[294,18,156,16,"durationMillis"],[294,32,156,30],[294,34,156,32],[294,39,156,36],[294,40,156,37,"_finalDurationMillis"],[295,0,152,27],[295,17,147,30],[297,0,158,12],[297,16,158,12],[297,21,158,16],[297,22,158,17,"_callOnRecordingStatusUpdateForNewStatus"],[297,62,158,12],[297,63,158,58,"status"],[297,69,158,12],[299,0,147,30],[299,50,159,19,"status"],[299,56,147,30],[301,0,147,30],[302,0,147,30],[303,0,147,30],[304,0,147,30],[305,0,147,30],[306,0,147,30],[307,0,147,30],[307,7,147,8],[308,0,161,5],[312,40,162,22],[313,0,163,8],[313,12,163,12],[313,17,163,17,"_progressUpdateTimeoutVariable"],[313,47,163,12],[313,51,163,51],[313,55,163,8],[313,57,163,57],[314,0,164,12,"clearTimeout"],[314,10,164,12,"clearTimeout"],[314,22,164,24],[314,23,164,25],[314,28,164,30,"_progressUpdateTimeoutVariable"],[314,58,164,24],[314,59,164,12],[315,0,165,12],[315,15,165,17,"_progressUpdateTimeoutVariable"],[315,45,165,12],[315,48,165,50],[315,52,165,12],[316,0,166,9],[317,0,167,5],[320,61,168,43],[321,0,169,8],[321,12,169,12],[321,56,169,32],[321,61,169,37,"_canRecord"],[321,71,169,12],[321,75,169,51],[321,80,169,56,"_onRecordingStatusUpdate"],[321,104,169,51],[321,108,169,84],[321,112,169,8],[321,114,169,90],[322,0,170,12],[322,15,170,17,"_disablePolling"],[322,30,170,12],[324,0,171,12],[324,15,171,17,"_pollingLoop"],[324,27,171,12],[325,0,172,9],[326,0,173,5],[329,63,174,45,"status"],[329,69],[329,71,174,53],[330,0,175,8],[330,12,175,12],[330,17,175,17,"_onRecordingStatusUpdate"],[330,41,175,12],[330,45,175,45],[330,49,175,8],[330,51,175,51],[331,0,176,12],[331,15,176,17,"_onRecordingStatusUpdate"],[331,39,176,12],[331,40,176,42,"status"],[331,46,176,12],[332,0,177,9],[333,0,178,5],[336,60,179,48,"operation"],[336,69],[343,0,180,8],[345,21,181,12],[345,26,181,17,"_canRecord"],[345,36],[351,50,182,33,"operation"],[351,59,182,42],[351,61],[354,0,182,18,"status"],[354,16,182,18,"status"],[354,23],[356,0,183,12],[356,21,183,17,"_callOnRecordingStatusUpdateForNewStatus"],[356,61,183,12],[356,62,183,58,"status"],[356,69,183,12],[358,50,184,19,"status"],[358,57],[361,22,187,18],[361,26,187,22,"Error"],[361,31,187,18],[361,32,187,28],[361,105,187,18],[361,106],[372,49,190,31,"onRecordingStatusUpdate"],[372,72],[372,74,190,56],[373,0,191,8],[373,13,191,13,"_onRecordingStatusUpdate"],[373,37,191,8],[373,40,191,40,"onRecordingStatusUpdate"],[373,63,191,8],[375,0,192,8],[375,12,192,12,"onRecordingStatusUpdate"],[375,35,192,35],[375,39,192,39],[375,43,192,8],[375,45,192,45],[376,0,193,12],[376,15,193,17,"_disablePolling"],[376,30,193,12],[377,0,194,9],[377,9,192,8],[377,15,195,13],[378,0,196,12],[378,15,196,17,"_enablePollingIfNecessaryAndPossible"],[378,51,196,12],[379,0,197,9],[381,0,198,8],[381,13,198,13,"getStatusAsync"],[381,27,198,8],[382,0,199,5],[385,48,200,30,"progressUpdateIntervalMillis"],[385,76],[385,78,200,60],[386,0,201,8],[386,13,201,13,"_progressUpdateIntervalMillis"],[386,42,201,8],[386,45,201,45,"progressUpdateIntervalMillis"],[386,73,201,8],[387,0,202,8],[387,13,202,13,"getStatusAsync"],[387,27,202,8],[388,0,203,5],[404,0,205,31,"options"],[404,16,205,31,"options"],[404,23],[404,85,205,41,"RECORDING_OPTIONS_PRESET_LOW_QUALITY"],[404,121],[405,0,206,8],[407,21,207,12,"_recorderExists"],[407,36],[412,22,208,18],[412,26,208,22,"Error"],[412,31,208,18],[412,32,208,28],[412,92,208,18],[412,93],[415,21,210,12],[415,26,210,17,"_isDoneRecording"],[415,42],[420,22,211,18],[420,26,211,22,"Error"],[420,31,211,18],[420,32,211,28],[420,99,211,18],[420,100],[423,22,213,12],[423,23,213,13,"options"],[423,30,213,12],[423,34,213,24],[423,35,213,25,"options"],[423,42,213,32],[423,43,213,33,"android"],[423,50,213,12],[423,54,213,44],[423,55,213,45,"options"],[423,62,213,52],[423,63,213,53,"ios"],[423,66],[428,22,214,18],[428,26,214,22,"Error"],[428,31,214,18],[428,32,214,28],[428,119,214,18],[428,120],[431,0,216,14,"extensionRegex"],[431,16,216,14,"extensionRegex"],[431,30],[431,33,216,31],[431,42],[433,22,217,12],[433,23,217,13,"options"],[433,30,217,20],[433,31,217,21,"android"],[433,38,217,13],[433,39,217,29,"extension"],[433,48,217,12],[433,52,218,12],[433,53,218,13,"options"],[433,60,218,20],[433,61,218,21,"ios"],[433,64,218,13],[433,65,218,25,"extension"],[433,74,217,12],[433,78,219,12],[433,79,219,13,"extensionRegex"],[433,93,219,27],[433,94,219,28,"test"],[433,98,219,13],[433,99,219,33,"options"],[433,106,219,40],[433,107,219,41,"android"],[433,114,219,33],[433,115,219,49,"extension"],[433,124,219,13],[433,125,217,12],[433,129,220,12],[433,130,220,13,"extensionRegex"],[433,144,220,27],[433,145,220,28,"test"],[433,149,220,13],[433,150,220,33,"options"],[433,157,220,40],[433,158,220,41,"ios"],[433,161,220,33],[433,162,220,45,"extension"],[433,171,220,13],[433,172],[438,22,221,18],[438,26,221,22,"Error"],[438,31,221,18],[438,69,221,63,"extensionRegex"],[438,83,221,77],[438,84,221,78,"toString"],[438,92,221,63],[438,94,221,18],[438,101],[441,20,223,13],[441,25,223,18,"_canRecord"],[441,35],[446,0,224,12],[446,20,224,16,"eventEmitter"],[446,32,224,12],[446,34,224,30],[447,0,225,16],[447,23,225,21,"_subscription"],[447,36,225,16],[447,39,225,37,"eventEmitter"],[447,51,225,49],[447,52,225,50,"addListener"],[447,63,225,37],[447,64,225,62],[447,97,225,37],[447,99,225,97],[447,104,225,102,"_cleanupForUnloadedRecorder"],[447,131,225,37],[447,132,225,16],[448,0,226,13],[451,50,227,43,"ExponentAV"],[451,70,227,54,"prepareAudioRecorder"],[451,90,227,43],[451,91,227,75,"options"],[451,98,227,43],[451,99],[455,0,227,20,"uri"],[455,16,227,20,"uri"],[455,19],[455,27,227,20,"uri"],[455,30],[456,0,227,25,"status"],[456,16,227,25,"status"],[456,24],[456,32,227,25,"status"],[456,38],[457,0,228,12,"_recorderExists"],[457,16,228,12,"_recorderExists"],[457,31,228,27],[457,34,228,30],[457,38,228,12],[458,0,229,12],[458,21,229,17,"_uri"],[458,25,229,12],[458,28,229,24,"uri"],[458,31,229,12],[459,0,230,12],[459,21,230,17,"_options"],[459,29,230,12],[459,32,230,28,"options"],[459,39,230,12],[460,0,231,12],[460,21,231,17,"_canRecord"],[460,31,231,12],[460,34,231,30],[460,38,231,12],[461,0,232,18,"currentStatus"],[461,16,232,18,"currentStatus"],[461,29],[461,50,232,39,"status"],[461,58],[462,0,232,47,"canRecord"],[462,18,232,47,"canRecord"],[462,27,232,56],[462,29,232,58],[465,0,233,12],[465,21,233,17,"_callOnRecordingStatusUpdateForNewStatus"],[465,61,233,12],[465,62,233,58,"currentStatus"],[465,75,233,12],[467,0,234,12],[467,21,234,17,"_enablePollingIfNecessaryAndPossible"],[467,57,234,12],[469,50,235,19,"currentStatus"],[469,63],[472,22,238,18],[472,26,238,22,"Error"],[472,31,238,18],[472,32,238,28],[472,86,238,18],[472,87],[488,50,242,15],[488,55,242,20,"_performOperationAndHandleStatusAsync"],[488,92,242,15],[488,93,242,58],[489,0,242,58],[489,25,242,64,"ExponentAV"],[489,45,242,75,"startAudioRecording"],[489,64,242,64],[489,66,242,58],[490,0,242,58],[490,17,242,15],[490,18],[506,50,245,15],[506,55,245,20,"_performOperationAndHandleStatusAsync"],[506,92,245,15],[506,93,245,58],[507,0,245,58],[507,25,245,64,"ExponentAV"],[507,45,245,75,"pauseAudioRecording"],[507,64,245,64],[507,66,245,58],[508,0,245,58],[508,17,245,15],[508,18],[525,20,248,13],[525,25,248,18,"_canRecord"],[525,35],[530,21,249,16],[530,26,249,21,"_isDoneRecording"],[530,42],[535,22,250,22],[535,26,250,26,"Error"],[535,31,250,22],[535,32,250,32],[535,91,250,22],[535,92],[538,22,253,22],[538,26,253,26,"Error"],[538,31,253,22],[538,32,253,32],[538,87,253,22],[538,88],[542,50,258,34,"ExponentAV"],[542,70,258,45,"stopAudioRecording"],[542,88,258,34],[542,90],[545,0,258,14,"finalStatus"],[545,16,258,14,"finalStatus"],[545,27],[547,50,259,14,"ExponentAV"],[547,70,259,25,"unloadAudioRecorder"],[547,89,259,14],[547,91],[550,50,260,15],[550,55,260,20,"_cleanupForUnloadedRecorder"],[550,82,260,15],[550,83,260,48,"finalStatus"],[550,94,260,15],[550,95],[561,31,263,13],[562,0,264,8],[562,15,264,15],[562,20,264,20,"_uri"],[562,24,264,8],[563,0,265,5],[574,0,266,31,"initialStatus"],[574,16,266,31,"initialStatus"],[574,29],[574,91,266,47],[574,93],[575,0,266,51,"onPlaybackStatusUpdate"],[575,16,266,51,"onPlaybackStatusUpdate"],[575,38],[575,100,266,76],[575,104],[576,0,267,8,"console"],[576,16,267,8,"console"],[576,23,267,15],[576,24,267,16,"warn"],[576,28,267,8],[577,50,268,15],[577,55,268,20,"createNewLoadedSoundAsync"],[577,80,268,15],[577,81,268,46,"initialStatus"],[577,94,268,15],[577,96,268,61,"onPlaybackStatusUpdate"],[577,118,268,15],[577,119],[596,0,270,36,"initialStatus"],[596,16,270,36,"initialStatus"],[596,29],[596,94,270,52],[596,96],[597,0,270,56,"onPlaybackStatusUpdate"],[597,16,270,56,"onPlaybackStatusUpdate"],[597,38],[597,103,270,81],[597,107],[599,22,271,12],[599,27,271,17,"_uri"],[599,31,271,12],[599,35,271,25],[599,39,271,12],[599,43,271,33],[599,44,271,34],[599,49,271,39,"_isDoneRecording"],[599,65],[604,22,272,18],[604,26,272,22,"Error"],[604,31,272,18],[604,32,272,28],[604,90,272,18],[604,91],[607,51,274,15,"Sound"],[607,64,274,21,"createAsync"],[607,75,274,15],[607,76,276,8],[608,0,276,10,"uri"],[608,18,276,10,"uri"],[608,21,276,13],[608,23,276,15],[608,28,276,20,"_uri"],[609,0,276,8],[609,17,274,15],[609,19,276,28,"initialStatus"],[609,32,274,15],[609,34,276,43,"onPlaybackStatusUpdate"],[609,56,274,15],[609,58,276,67],[609,63,274,15],[609,64]]},"type":"js/module"}]}