{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"react-native","data":{"isAsync":false}},{"name":"./ExpoCalendar","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getCalendarsAsync = getCalendarsAsync;\n  exports.createCalendarAsync = createCalendarAsync;\n  exports.updateCalendarAsync = updateCalendarAsync;\n  exports.deleteCalendarAsync = deleteCalendarAsync;\n  exports.getEventsAsync = getEventsAsync;\n  exports.getEventAsync = getEventAsync;\n  exports.createEventAsync = createEventAsync;\n  exports.updateEventAsync = updateEventAsync;\n  exports.deleteEventAsync = deleteEventAsync;\n  exports.getAttendeesForEventAsync = getAttendeesForEventAsync;\n  exports.createAttendeeAsync = createAttendeeAsync;\n  exports.updateAttendeeAsync = updateAttendeeAsync;\n  exports.deleteAttendeeAsync = deleteAttendeeAsync;\n  exports.getRemindersAsync = getRemindersAsync;\n  exports.getReminderAsync = getReminderAsync;\n  exports.createReminderAsync = createReminderAsync;\n  exports.updateReminderAsync = updateReminderAsync;\n  exports.deleteReminderAsync = deleteReminderAsync;\n  exports.getSourcesAsync = getSourcesAsync;\n  exports.getSourceAsync = getSourceAsync;\n  exports.openEventInCalendar = openEventInCalendar;\n  exports.requestPermissionsAsync = requestPermissionsAsync;\n  exports.requestRemindersPermissionsAsync = requestRemindersPermissionsAsync;\n  exports.DEFAULT = exports.ReminderStatus = exports.CalendarAccessLevel = exports.EventAccessLevel = exports.AlarmMethod = exports.AttendeeType = exports.AttendeeStatus = exports.AttendeeRole = exports.SourceType = exports.EventStatus = exports.CalendarType = exports.Availability = exports.Frequency = exports.EntityTypes = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@unimodules/core\");\n\n  var _reactNative = _$$_REQUIRE(_dependencyMap[4], \"react-native\");\n\n  var _ExpoCalendar = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoCalendar\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  ;\n\n  function getCalendarsAsync(entityType) {\n    return _regenerator.default.async(function getCalendarsAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (_ExpoCalendar.default.getCalendarsAsync) {\n              _context.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getCalendarsAsync');\n\n          case 2:\n            if (entityType) {\n              _context.next = 4;\n              break;\n            }\n\n            return _context.abrupt(\"return\", _ExpoCalendar.default.getCalendarsAsync(null));\n\n          case 4:\n            return _context.abrupt(\"return\", _ExpoCalendar.default.getCalendarsAsync(entityType));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function createCalendarAsync() {\n    var details,\n        color,\n        newDetails,\n        _args2 = arguments;\n    return _regenerator.default.async(function createCalendarAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            details = _args2.length > 0 && _args2[0] !== undefined ? _args2[0] : {};\n\n            if (_ExpoCalendar.default.saveCalendarAsync) {\n              _context2.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createCalendarAsync');\n\n          case 3:\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n            newDetails = _objectSpread({}, details, {\n              id: undefined,\n              color: color\n            });\n            return _context2.abrupt(\"return\", _ExpoCalendar.default.saveCalendarAsync(newDetails));\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function updateCalendarAsync(id) {\n    var details,\n        color,\n        newDetails,\n        _args3 = arguments;\n    return _regenerator.default.async(function updateCalendarAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            details = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : {};\n\n            if (_ExpoCalendar.default.saveCalendarAsync) {\n              _context3.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateCalendarAsync');\n\n          case 3:\n            if (id) {\n              _context3.next = 5;\n              break;\n            }\n\n            throw new Error('updateCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            color = details.color ? (0, _reactNative.processColor)(details.color) : undefined;\n\n            if (_reactNative.Platform.OS === 'android') {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('color') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities') || details.hasOwnProperty('isPrimary') || details.hasOwnProperty('ownerAccount') || details.hasOwnProperty('timeZone') || details.hasOwnProperty('allowedReminders') || details.hasOwnProperty('allowedAttendeeTypes') || details.hasOwnProperty('accessLevel')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            } else {\n              if (details.hasOwnProperty('source') || details.hasOwnProperty('type') || details.hasOwnProperty('entityType') || details.hasOwnProperty('allowsModifications') || details.hasOwnProperty('allowedAvailabilities')) {\n                console.warn('updateCalendarAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = _objectSpread({}, details, {\n              id: id,\n              color: color\n            });\n            return _context3.abrupt(\"return\", _ExpoCalendar.default.saveCalendarAsync(newDetails));\n\n          case 9:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function deleteCalendarAsync(id) {\n    return _regenerator.default.async(function deleteCalendarAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            if (_ExpoCalendar.default.deleteCalendarAsync) {\n              _context4.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteCalendarAsync');\n\n          case 2:\n            if (id) {\n              _context4.next = 4;\n              break;\n            }\n\n            throw new Error('deleteCalendarAsync must be called with an id (string) of the target calendar');\n\n          case 4:\n            return _context4.abrupt(\"return\", _ExpoCalendar.default.deleteCalendarAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    });\n  }\n\n  function getEventsAsync(calendarIds, startDate, endDate) {\n    return _regenerator.default.async(function getEventsAsync$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            if (_ExpoCalendar.default.getEventsAsync) {\n              _context5.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getEventsAsync');\n\n          case 2:\n            if (startDate) {\n              _context5.next = 4;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a startDate (date) to search for events');\n\n          case 4:\n            if (endDate) {\n              _context5.next = 6;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with an endDate (date) to search for events');\n\n          case 6:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context5.next = 8;\n              break;\n            }\n\n            throw new Error('getEventsAsync must be called with a non-empty array of calendarIds to search');\n\n          case 8:\n            return _context5.abrupt(\"return\", _ExpoCalendar.default.getEventsAsync(stringifyIfDate(startDate), stringifyIfDate(endDate), calendarIds));\n\n          case 9:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function getEventAsync(id) {\n    var _ref,\n        _ref$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args6 = arguments;\n\n    return _regenerator.default.async(function getEventAsync$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            _ref = _args6.length > 1 && _args6[1] !== undefined ? _args6[1] : {}, _ref$futureEvents = _ref.futureEvents, futureEvents = _ref$futureEvents === void 0 ? false : _ref$futureEvents, instanceStartDate = _ref.instanceStartDate;\n\n            if (_ExpoCalendar.default.getEventByIdAsync) {\n              _context6.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getEventAsync');\n\n          case 3:\n            if (id) {\n              _context6.next = 5;\n              break;\n            }\n\n            throw new Error('getEventAsync must be called with an id (string) of the target event');\n\n          case 5:\n            if (!(_reactNative.Platform.OS === 'ios')) {\n              _context6.next = 9;\n              break;\n            }\n\n            return _context6.abrupt(\"return\", _ExpoCalendar.default.getEventByIdAsync(id, instanceStartDate));\n\n          case 9:\n            return _context6.abrupt(\"return\", _ExpoCalendar.default.getEventByIdAsync(id));\n\n          case 10:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    });\n  }\n\n  function createEventAsync(calendarId) {\n    var details,\n        newDetails,\n        _args7 = arguments;\n    return _regenerator.default.async(function createEventAsync$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            details = _args7.length > 1 && _args7[1] !== undefined ? _args7[1] : {};\n\n            if (_ExpoCalendar.default.saveEventAsync) {\n              _context7.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createEventAsync');\n\n          case 3:\n            if (calendarId) {\n              _context7.next = 5;\n              break;\n            }\n\n            throw new Error('createEventAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            if (!(_reactNative.Platform.OS === 'android')) {\n              _context7.next = 10;\n              break;\n            }\n\n            if (details.startDate) {\n              _context7.next = 8;\n              break;\n            }\n\n            throw new Error('createEventAsync requires a startDate (Date)');\n\n          case 8:\n            if (details.endDate) {\n              _context7.next = 10;\n              break;\n            }\n\n            throw new Error('createEventAsync requires an endDate (Date)');\n\n          case 10:\n            newDetails = _objectSpread({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context7.abrupt(\"return\", _ExpoCalendar.default.saveEventAsync(stringifyDateValues(newDetails), {}));\n\n          case 12:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    });\n  }\n\n  function updateEventAsync(id) {\n    var details,\n        _ref2,\n        _ref2$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        newDetails,\n        _args8 = arguments;\n\n    return _regenerator.default.async(function updateEventAsync$(_context8) {\n      while (1) {\n        switch (_context8.prev = _context8.next) {\n          case 0:\n            details = _args8.length > 1 && _args8[1] !== undefined ? _args8[1] : {};\n            _ref2 = _args8.length > 2 && _args8[2] !== undefined ? _args8[2] : {}, _ref2$futureEvents = _ref2.futureEvents, futureEvents = _ref2$futureEvents === void 0 ? false : _ref2$futureEvents, instanceStartDate = _ref2.instanceStartDate;\n\n            if (_ExpoCalendar.default.saveEventAsync) {\n              _context8.next = 4;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateEventAsync');\n\n          case 4:\n            if (id) {\n              _context8.next = 6;\n              break;\n            }\n\n            throw new Error('updateEventAsync must be called with an id (string) of the target event');\n\n          case 6:\n            if (_reactNative.Platform.OS === 'ios') {\n              if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate') || details.hasOwnProperty('originalStartDate') || details.hasOwnProperty('isDetached') || details.hasOwnProperty('status') || details.hasOwnProperty('organizer')) {\n                console.warn('updateEventAsync was called with one or more read-only properties, which will not be updated');\n              }\n            }\n\n            newDetails = _objectSpread({}, details, {\n              id: id,\n              instanceStartDate: instanceStartDate\n            });\n            return _context8.abrupt(\"return\", _ExpoCalendar.default.saveEventAsync(stringifyDateValues(newDetails), {\n              futureEvents: futureEvents\n            }));\n\n          case 9:\n          case \"end\":\n            return _context8.stop();\n        }\n      }\n    });\n  }\n\n  function deleteEventAsync(id) {\n    var _ref3,\n        _ref3$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        _args9 = arguments;\n\n    return _regenerator.default.async(function deleteEventAsync$(_context9) {\n      while (1) {\n        switch (_context9.prev = _context9.next) {\n          case 0:\n            _ref3 = _args9.length > 1 && _args9[1] !== undefined ? _args9[1] : {}, _ref3$futureEvents = _ref3.futureEvents, futureEvents = _ref3$futureEvents === void 0 ? false : _ref3$futureEvents, instanceStartDate = _ref3.instanceStartDate;\n\n            if (_ExpoCalendar.default.deleteEventAsync) {\n              _context9.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteEventAsync');\n\n          case 3:\n            if (id) {\n              _context9.next = 5;\n              break;\n            }\n\n            throw new Error('deleteEventAsync must be called with an id (string) of the target event');\n\n          case 5:\n            return _context9.abrupt(\"return\", _ExpoCalendar.default.deleteEventAsync({\n              id: id,\n              instanceStartDate: instanceStartDate\n            }, {\n              futureEvents: futureEvents\n            }));\n\n          case 6:\n          case \"end\":\n            return _context9.stop();\n        }\n      }\n    });\n  }\n\n  function getAttendeesForEventAsync(id) {\n    var _ref4,\n        _ref4$futureEvents,\n        futureEvents,\n        instanceStartDate,\n        params,\n        _args10 = arguments;\n\n    return _regenerator.default.async(function getAttendeesForEventAsync$(_context10) {\n      while (1) {\n        switch (_context10.prev = _context10.next) {\n          case 0:\n            _ref4 = _args10.length > 1 && _args10[1] !== undefined ? _args10[1] : {}, _ref4$futureEvents = _ref4.futureEvents, futureEvents = _ref4$futureEvents === void 0 ? false : _ref4$futureEvents, instanceStartDate = _ref4.instanceStartDate;\n\n            if (_ExpoCalendar.default.getAttendeesForEventAsync) {\n              _context10.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getAttendeesForEventAsync');\n\n          case 3:\n            if (id) {\n              _context10.next = 5;\n              break;\n            }\n\n            throw new Error('getAttendeesForEventAsync must be called with an id (string) of the target event');\n\n          case 5:\n            params = _reactNative.Platform.OS === 'ios' ? {\n              id: id,\n              instanceStartDate: instanceStartDate\n            } : id;\n            return _context10.abrupt(\"return\", _ExpoCalendar.default.getAttendeesForEventAsync(params));\n\n          case 7:\n          case \"end\":\n            return _context10.stop();\n        }\n      }\n    });\n  }\n\n  function createAttendeeAsync(eventId) {\n    var details,\n        newDetails,\n        _args11 = arguments;\n    return _regenerator.default.async(function createAttendeeAsync$(_context11) {\n      while (1) {\n        switch (_context11.prev = _context11.next) {\n          case 0:\n            details = _args11.length > 1 && _args11[1] !== undefined ? _args11[1] : {};\n\n            if (_ExpoCalendar.default.saveAttendeeForEventAsync) {\n              _context11.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createAttendeeAsync');\n\n          case 3:\n            if (eventId) {\n              _context11.next = 5;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            if (details.email) {\n              _context11.next = 7;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires an email (string)');\n\n          case 7:\n            if (details.role) {\n              _context11.next = 9;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a role (string)');\n\n          case 9:\n            if (details.type) {\n              _context11.next = 11;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a type (string)');\n\n          case 11:\n            if (details.status) {\n              _context11.next = 13;\n              break;\n            }\n\n            throw new Error('createAttendeeAsync requires a status (string)');\n\n          case 13:\n            newDetails = _objectSpread({}, details, {\n              id: undefined\n            });\n            return _context11.abrupt(\"return\", _ExpoCalendar.default.saveAttendeeForEventAsync(newDetails, eventId));\n\n          case 15:\n          case \"end\":\n            return _context11.stop();\n        }\n      }\n    });\n  }\n\n  function updateAttendeeAsync(id) {\n    var details,\n        newDetails,\n        _args12 = arguments;\n    return _regenerator.default.async(function updateAttendeeAsync$(_context12) {\n      while (1) {\n        switch (_context12.prev = _context12.next) {\n          case 0:\n            details = _args12.length > 1 && _args12[1] !== undefined ? _args12[1] : {};\n\n            if (_ExpoCalendar.default.saveAttendeeForEventAsync) {\n              _context12.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateAttendeeAsync');\n\n          case 3:\n            if (id) {\n              _context12.next = 5;\n              break;\n            }\n\n            throw new Error('updateAttendeeAsync must be called with an id (string) of the target event');\n\n          case 5:\n            newDetails = _objectSpread({}, details, {\n              id: id\n            });\n            return _context12.abrupt(\"return\", _ExpoCalendar.default.saveAttendeeForEventAsync(newDetails, null));\n\n          case 7:\n          case \"end\":\n            return _context12.stop();\n        }\n      }\n    });\n  }\n\n  function deleteAttendeeAsync(id) {\n    return _regenerator.default.async(function deleteAttendeeAsync$(_context13) {\n      while (1) {\n        switch (_context13.prev = _context13.next) {\n          case 0:\n            if (_ExpoCalendar.default.deleteAttendeeAsync) {\n              _context13.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteAttendeeAsync');\n\n          case 2:\n            if (id) {\n              _context13.next = 4;\n              break;\n            }\n\n            throw new Error('deleteAttendeeAsync must be called with an id (string) of the target event');\n\n          case 4:\n            return _context13.abrupt(\"return\", _ExpoCalendar.default.deleteAttendeeAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context13.stop();\n        }\n      }\n    });\n  }\n\n  function getRemindersAsync(calendarIds, status, startDate, endDate) {\n    return _regenerator.default.async(function getRemindersAsync$(_context14) {\n      while (1) {\n        switch (_context14.prev = _context14.next) {\n          case 0:\n            if (_ExpoCalendar.default.getRemindersAsync) {\n              _context14.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getRemindersAsync');\n\n          case 2:\n            if (!(status && !startDate)) {\n              _context14.next = 4;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a startDate (date) to search for reminders');\n\n          case 4:\n            if (!(status && !endDate)) {\n              _context14.next = 6;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with an endDate (date) to search for reminders');\n\n          case 6:\n            if (!(!calendarIds || !calendarIds.length)) {\n              _context14.next = 8;\n              break;\n            }\n\n            throw new Error('getRemindersAsync must be called with a non-empty array of calendarIds to search');\n\n          case 8:\n            return _context14.abrupt(\"return\", _ExpoCalendar.default.getRemindersAsync(stringifyIfDate(startDate) || null, stringifyIfDate(endDate) || null, calendarIds, status || null));\n\n          case 9:\n          case \"end\":\n            return _context14.stop();\n        }\n      }\n    });\n  }\n\n  function getReminderAsync(id) {\n    return _regenerator.default.async(function getReminderAsync$(_context15) {\n      while (1) {\n        switch (_context15.prev = _context15.next) {\n          case 0:\n            if (_ExpoCalendar.default.getReminderByIdAsync) {\n              _context15.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getReminderAsync');\n\n          case 2:\n            if (id) {\n              _context15.next = 4;\n              break;\n            }\n\n            throw new Error('getReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context15.abrupt(\"return\", _ExpoCalendar.default.getReminderByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context15.stop();\n        }\n      }\n    });\n  }\n\n  function createReminderAsync(calendarId) {\n    var details,\n        newDetails,\n        _args16 = arguments;\n    return _regenerator.default.async(function createReminderAsync$(_context16) {\n      while (1) {\n        switch (_context16.prev = _context16.next) {\n          case 0:\n            details = _args16.length > 1 && _args16[1] !== undefined ? _args16[1] : {};\n\n            if (_ExpoCalendar.default.saveReminderAsync) {\n              _context16.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'createReminderAsync');\n\n          case 3:\n            if (calendarId) {\n              _context16.next = 5;\n              break;\n            }\n\n            throw new Error('createReminderAsync must be called with an id (string) of the target calendar');\n\n          case 5:\n            newDetails = _objectSpread({}, details, {\n              id: undefined,\n              calendarId: calendarId === DEFAULT ? undefined : calendarId\n            });\n            return _context16.abrupt(\"return\", _ExpoCalendar.default.saveReminderAsync(stringifyDateValues(newDetails)));\n\n          case 7:\n          case \"end\":\n            return _context16.stop();\n        }\n      }\n    });\n  }\n\n  function updateReminderAsync(id) {\n    var details,\n        newDetails,\n        _args17 = arguments;\n    return _regenerator.default.async(function updateReminderAsync$(_context17) {\n      while (1) {\n        switch (_context17.prev = _context17.next) {\n          case 0:\n            details = _args17.length > 1 && _args17[1] !== undefined ? _args17[1] : {};\n\n            if (_ExpoCalendar.default.saveReminderAsync) {\n              _context17.next = 3;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'updateReminderAsync');\n\n          case 3:\n            if (id) {\n              _context17.next = 5;\n              break;\n            }\n\n            throw new Error('updateReminderAsync must be called with an id (string) of the target reminder');\n\n          case 5:\n            if (details.hasOwnProperty('creationDate') || details.hasOwnProperty('lastModifiedDate')) {\n              console.warn('updateReminderAsync was called with one or more read-only properties, which will not be updated');\n            }\n\n            newDetails = _objectSpread({}, details, {\n              id: id\n            });\n            return _context17.abrupt(\"return\", _ExpoCalendar.default.saveReminderAsync(stringifyDateValues(newDetails)));\n\n          case 8:\n          case \"end\":\n            return _context17.stop();\n        }\n      }\n    });\n  }\n\n  function deleteReminderAsync(id) {\n    return _regenerator.default.async(function deleteReminderAsync$(_context18) {\n      while (1) {\n        switch (_context18.prev = _context18.next) {\n          case 0:\n            if (_ExpoCalendar.default.deleteReminderAsync) {\n              _context18.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'deleteReminderAsync');\n\n          case 2:\n            if (id) {\n              _context18.next = 4;\n              break;\n            }\n\n            throw new Error('deleteReminderAsync must be called with an id (string) of the target reminder');\n\n          case 4:\n            return _context18.abrupt(\"return\", _ExpoCalendar.default.deleteReminderAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context18.stop();\n        }\n      }\n    });\n  }\n\n  function getSourcesAsync() {\n    return _regenerator.default.async(function getSourcesAsync$(_context19) {\n      while (1) {\n        switch (_context19.prev = _context19.next) {\n          case 0:\n            if (_ExpoCalendar.default.getSourcesAsync) {\n              _context19.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getSourcesAsync');\n\n          case 2:\n            return _context19.abrupt(\"return\", _ExpoCalendar.default.getSourcesAsync());\n\n          case 3:\n          case \"end\":\n            return _context19.stop();\n        }\n      }\n    });\n  }\n\n  function getSourceAsync(id) {\n    return _regenerator.default.async(function getSourceAsync$(_context20) {\n      while (1) {\n        switch (_context20.prev = _context20.next) {\n          case 0:\n            if (_ExpoCalendar.default.getSourceByIdAsync) {\n              _context20.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'getSourceAsync');\n\n          case 2:\n            if (id) {\n              _context20.next = 4;\n              break;\n            }\n\n            throw new Error('getSourceAsync must be called with an id (string) of the target source');\n\n          case 4:\n            return _context20.abrupt(\"return\", _ExpoCalendar.default.getSourceByIdAsync(id));\n\n          case 5:\n          case \"end\":\n            return _context20.stop();\n        }\n      }\n    });\n  }\n\n  function openEventInCalendar(id) {\n    if (!_ExpoCalendar.default.openEventInCalendar) {\n      console.warn(\"openEventInCalendar is not available on platform: \" + _reactNative.Platform.OS);\n      return;\n    }\n\n    if (!id) {\n      throw new Error('openEventInCalendar must be called with an id (string) of the target event');\n    }\n\n    return _ExpoCalendar.default.openEventInCalendar(parseInt(id, 10));\n  }\n\n  function requestPermissionsAsync() {\n    return _regenerator.default.async(function requestPermissionsAsync$(_context21) {\n      while (1) {\n        switch (_context21.prev = _context21.next) {\n          case 0:\n            if (_ExpoCalendar.default.requestPermissionsAsync) {\n              _context21.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'requestPermissionsAsync');\n\n          case 2:\n            _context21.next = 4;\n            return _regenerator.default.awrap(_ExpoCalendar.default.requestPermissionsAsync());\n\n          case 4:\n            return _context21.abrupt(\"return\", _context21.sent);\n\n          case 5:\n          case \"end\":\n            return _context21.stop();\n        }\n      }\n    });\n  }\n\n  function requestRemindersPermissionsAsync() {\n    return _regenerator.default.async(function requestRemindersPermissionsAsync$(_context22) {\n      while (1) {\n        switch (_context22.prev = _context22.next) {\n          case 0:\n            if (_ExpoCalendar.default.requestRemindersPermissionsAsync) {\n              _context22.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('Calendar', 'requestRemindersPermissionsAsync');\n\n          case 2:\n            _context22.next = 4;\n            return _regenerator.default.awrap(_ExpoCalendar.default.requestRemindersPermissionsAsync());\n\n          case 4:\n            return _context22.abrupt(\"return\", _context22.sent);\n\n          case 5:\n          case \"end\":\n            return _context22.stop();\n        }\n      }\n    });\n  }\n\n  var EntityTypes = {\n    EVENT: 'event',\n    REMINDER: 'reminder'\n  };\n  exports.EntityTypes = EntityTypes;\n  var Frequency = {\n    DAILY: 'daily',\n    WEEKLY: 'weekly',\n    MONTHLY: 'monthly',\n    YEARLY: 'yearly'\n  };\n  exports.Frequency = Frequency;\n  var Availability = {\n    NOT_SUPPORTED: 'notSupported',\n    BUSY: 'busy',\n    FREE: 'free',\n    TENTATIVE: 'tentative',\n    UNAVAILABLE: 'unavailable'\n  };\n  exports.Availability = Availability;\n  var CalendarType = {\n    LOCAL: 'local',\n    CALDAV: 'caldav',\n    EXCHANGE: 'exchange',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.CalendarType = CalendarType;\n  var EventStatus = {\n    NONE: 'none',\n    CONFIRMED: 'confirmed',\n    TENTATIVE: 'tentative',\n    CANCELED: 'canceled'\n  };\n  exports.EventStatus = EventStatus;\n  var SourceType = {\n    LOCAL: 'local',\n    EXCHANGE: 'exchange',\n    CALDAV: 'caldav',\n    MOBILEME: 'mobileme',\n    SUBSCRIBED: 'subscribed',\n    BIRTHDAYS: 'birthdays'\n  };\n  exports.SourceType = SourceType;\n  var AttendeeRole = {\n    UNKNOWN: 'unknown',\n    REQUIRED: 'required',\n    OPTIONAL: 'optional',\n    CHAIR: 'chair',\n    NON_PARTICIPANT: 'nonParticipant',\n    ATTENDEE: 'attendee',\n    ORGANIZER: 'organizer',\n    PERFORMER: 'performer',\n    SPEAKER: 'speaker',\n    NONE: 'none'\n  };\n  exports.AttendeeRole = AttendeeRole;\n  var AttendeeStatus = {\n    UNKNOWN: 'unknown',\n    PENDING: 'pending',\n    ACCEPTED: 'accepted',\n    DECLINED: 'declined',\n    TENTATIVE: 'tentative',\n    DELEGATED: 'delegated',\n    COMPLETED: 'completed',\n    IN_PROCESS: 'inProcess',\n    INVITED: 'invited',\n    NONE: 'none'\n  };\n  exports.AttendeeStatus = AttendeeStatus;\n  var AttendeeType = {\n    UNKNOWN: 'unknown',\n    PERSON: 'person',\n    ROOM: 'room',\n    GROUP: 'group',\n    RESOURCE: 'resource',\n    OPTIONAL: 'optional',\n    REQUIRED: 'required',\n    NONE: 'none'\n  };\n  exports.AttendeeType = AttendeeType;\n  var AlarmMethod = {\n    ALARM: 'alarm',\n    ALERT: 'alert',\n    EMAIL: 'email',\n    SMS: 'sms',\n    DEFAULT: 'default'\n  };\n  exports.AlarmMethod = AlarmMethod;\n  var EventAccessLevel = {\n    CONFIDENTIAL: 'confidential',\n    PRIVATE: 'private',\n    PUBLIC: 'public',\n    DEFAULT: 'default'\n  };\n  exports.EventAccessLevel = EventAccessLevel;\n  var CalendarAccessLevel = {\n    CONTRIBUTOR: 'contributor',\n    EDITOR: 'editor',\n    FREEBUSY: 'freebusy',\n    OVERRIDE: 'override',\n    OWNER: 'owner',\n    READ: 'read',\n    RESPOND: 'respond',\n    ROOT: 'root',\n    NONE: 'none'\n  };\n  exports.CalendarAccessLevel = CalendarAccessLevel;\n  var ReminderStatus = {\n    COMPLETED: 'completed',\n    INCOMPLETE: 'incomplete'\n  };\n  exports.ReminderStatus = ReminderStatus;\n  var DEFAULT = 'default';\n  exports.DEFAULT = DEFAULT;\n\n  function stringifyIfDate(date) {\n    return date instanceof Date ? date.toISOString() : date;\n  }\n\n  function stringifyDateValues(obj) {\n    return Object.keys(obj).reduce(function (acc, key) {\n      acc[key] = stringifyIfDate(obj[key]);\n      return acc;\n    }, {});\n  }\n});","map":[[36,0,1,0],[38,0,2,0],[40,0,3,0],[46,0,4,0],[48,0,5,7],[48,11,5,22,"getCalendarsAsync"],[48,28,5,7],[48,29,5,40,"entityType"],[48,39,5,7],[49,0,5,7],[50,0,5,7],[51,0,5,7],[52,0,5,7],[53,0,5,7],[53,16,6,9,"ExpoCalendar"],[53,38,6,22,"getCalendarsAsync"],[53,55,5,7],[54,0,5,7],[55,0,5,7],[56,0,5,7],[58,0,5,7],[58,18,7,14],[58,22,7,18,"UnavailabilityError"],[58,47,7,14],[58,48,7,38],[58,58,7,14],[58,60,7,50],[58,79,7,14],[58,80,5,7],[60,0,5,7],[61,0,5,7],[61,16,9,9,"entityType"],[61,26,5,7],[62,0,5,7],[63,0,5,7],[64,0,5,7],[66,0,5,7],[66,45,10,15,"ExpoCalendar"],[66,67,10,28,"getCalendarsAsync"],[66,84,10,15],[66,85,10,46],[66,89,10,15],[66,90,5,7],[68,0,5,7],[69,0,5,7],[69,45,12,11,"ExpoCalendar"],[69,67,12,24,"getCalendarsAsync"],[69,84,12,11],[69,85,12,42,"entityType"],[69,95,12,11],[69,96,5,7],[71,0,5,7],[72,0,5,7],[73,0,5,7],[74,0,5,7],[75,0,5,7],[76,0,5,7],[77,0,5,7],[79,0,14,7],[79,11,14,22,"createCalendarAsync"],[79,30,14,7],[80,0,14,7],[81,0,14,7],[82,0,14,7],[83,0,14,7],[84,0,14,7],[85,0,14,7],[86,0,14,7],[87,0,14,7],[88,0,14,42,"details"],[88,12,14,42,"details"],[88,19,14,7],[88,81,14,52],[88,83,14,7],[90,0,14,7],[90,16,15,9,"ExpoCalendar"],[90,38,15,22,"saveCalendarAsync"],[90,55,14,7],[91,0,14,7],[92,0,14,7],[93,0,14,7],[95,0,14,7],[95,18,16,14],[95,22,16,18,"UnavailabilityError"],[95,47,16,14],[95,48,16,38],[95,58,16,14],[95,60,16,50],[95,81,16,14],[95,82,14,7],[97,0,14,7],[98,0,18,8,"color"],[98,12,18,8,"color"],[98,17,14,7],[98,20,18,16,"details"],[98,27,18,23],[98,28,18,24,"color"],[98,33,18,16],[98,36,18,32],[98,67,18,45,"details"],[98,74,18,52],[98,75,18,53,"color"],[98,80,18,32],[98,81,18,16],[98,84,18,62,"undefined"],[98,93,14,7],[99,0,19,10,"newDetails"],[99,12,19,10,"newDetails"],[99,22,14,7],[99,43,19,28,"details"],[99,50,14,7],[100,0,19,37,"id"],[100,14,19,37,"id"],[100,16,19,39],[100,18,19,41,"undefined"],[100,27,14,7],[101,0,19,52,"color"],[101,14,19,52,"color"],[101,19,19,57],[101,21,19,52,"color"],[102,0,14,7],[103,0,14,7],[103,46,20,11,"ExpoCalendar"],[103,68,20,24,"saveCalendarAsync"],[103,85,20,11],[103,86,20,42,"newDetails"],[103,96,20,11],[103,97,14,7],[105,0,14,7],[106,0,14,7],[107,0,14,7],[108,0,14,7],[109,0,14,7],[110,0,14,7],[111,0,14,7],[113,0,22,7],[113,11,22,22,"updateCalendarAsync"],[113,30,22,7],[113,31,22,42,"id"],[113,33,22,7],[114,0,22,7],[115,0,22,7],[116,0,22,7],[117,0,22,7],[118,0,22,7],[119,0,22,7],[120,0,22,7],[121,0,22,7],[122,0,22,46,"details"],[122,12,22,46,"details"],[122,19,22,7],[122,81,22,56],[122,83,22,7],[124,0,22,7],[124,16,23,9,"ExpoCalendar"],[124,38,23,22,"saveCalendarAsync"],[124,55,22,7],[125,0,22,7],[126,0,22,7],[127,0,22,7],[129,0,22,7],[129,18,24,14],[129,22,24,18,"UnavailabilityError"],[129,47,24,14],[129,48,24,38],[129,58,24,14],[129,60,24,50],[129,81,24,14],[129,82,22,7],[131,0,22,7],[132,0,22,7],[132,16,26,9,"id"],[132,18,22,7],[133,0,22,7],[134,0,22,7],[135,0,22,7],[137,0,22,7],[137,18,27,14],[137,22,27,18,"Error"],[137,27,27,14],[137,28,27,24],[137,107,27,14],[137,108,22,7],[139,0,22,7],[140,0,29,8,"color"],[140,12,29,8,"color"],[140,17,22,7],[140,20,29,16,"details"],[140,27,29,23],[140,28,29,24,"color"],[140,33,29,16],[140,36,29,32],[140,67,29,45,"details"],[140,74,29,52],[140,75,29,53,"color"],[140,80,29,32],[140,81,29,16],[140,84,29,62,"undefined"],[140,93,22,7],[142,0,30,4],[142,16,30,8,"Platform"],[142,38,30,17,"OS"],[142,40,30,8],[142,45,30,24],[142,54,30,4],[142,56,30,35],[143,0,31,8],[143,18,31,12,"details"],[143,25,31,19],[143,26,31,20,"hasOwnProperty"],[143,40,31,12],[143,41,31,35],[143,49,31,12],[143,54,32,12,"details"],[143,61,32,19],[143,62,32,20,"hasOwnProperty"],[143,76,32,12],[143,77,32,35],[143,84,32,12],[143,85,31,12],[143,89,33,12,"details"],[143,96,33,19],[143,97,33,20,"hasOwnProperty"],[143,111,33,12],[143,112,33,35],[143,133,33,12],[143,134,31,12],[143,138,34,12,"details"],[143,145,34,19],[143,146,34,20,"hasOwnProperty"],[143,160,34,12],[143,161,34,35],[143,184,34,12],[143,185,31,12],[143,189,35,12,"details"],[143,196,35,19],[143,197,35,20,"hasOwnProperty"],[143,211,35,12],[143,212,35,35],[143,223,35,12],[143,224,31,12],[143,228,36,12,"details"],[143,235,36,19],[143,236,36,20,"hasOwnProperty"],[143,250,36,12],[143,251,36,35],[143,265,36,12],[143,266,31,12],[143,270,37,12,"details"],[143,277,37,19],[143,278,37,20,"hasOwnProperty"],[143,292,37,12],[143,293,37,35],[143,303,37,12],[143,304,31,12],[143,308,38,12,"details"],[143,315,38,19],[143,316,38,20,"hasOwnProperty"],[143,330,38,12],[143,331,38,35],[143,349,38,12],[143,350,31,12],[143,354,39,12,"details"],[143,361,39,19],[143,362,39,20,"hasOwnProperty"],[143,376,39,12],[143,377,39,35],[143,399,39,12],[143,400,31,12],[143,404,40,12,"details"],[143,411,40,19],[143,412,40,20,"hasOwnProperty"],[143,426,40,12],[143,427,40,35],[143,440,40,12],[143,441,31,8],[143,443,40,51],[144,0,41,12,"console"],[144,16,41,12,"console"],[144,23,41,19],[144,24,41,20,"warn"],[144,28,41,12],[144,29,41,25],[144,126,41,12],[145,0,42,9],[146,0,43,5],[146,13,30,4],[146,19,44,9],[147,0,45,8],[147,18,45,12,"details"],[147,25,45,19],[147,26,45,20,"hasOwnProperty"],[147,40,45,12],[147,41,45,35],[147,49,45,12],[147,54,46,12,"details"],[147,61,46,19],[147,62,46,20,"hasOwnProperty"],[147,76,46,12],[147,77,46,35],[147,83,46,12],[147,84,45,12],[147,88,47,12,"details"],[147,95,47,19],[147,96,47,20,"hasOwnProperty"],[147,110,47,12],[147,111,47,35],[147,123,47,12],[147,124,45,12],[147,128,48,12,"details"],[147,135,48,19],[147,136,48,20,"hasOwnProperty"],[147,150,48,12],[147,151,48,35],[147,172,48,12],[147,173,45,12],[147,177,49,12,"details"],[147,184,49,19],[147,185,49,20,"hasOwnProperty"],[147,199,49,12],[147,200,49,35],[147,223,49,12],[147,224,45,8],[147,226,49,61],[148,0,50,12,"console"],[148,16,50,12,"console"],[148,23,50,19],[148,24,50,20,"warn"],[148,28,50,12],[148,29,50,25],[148,126,50,12],[149,0,51,9],[150,0,52,5],[152,0,53,10,"newDetails"],[152,12,53,10,"newDetails"],[152,22,22,7],[152,43,53,28,"details"],[152,50,22,7],[153,0,53,37,"id"],[153,14,53,37,"id"],[153,16,53,39],[153,18,53,37,"id"],[153,20,22,7],[154,0,53,41,"color"],[154,14,53,41,"color"],[154,19,53,46],[154,21,53,41,"color"],[155,0,22,7],[156,0,22,7],[156,46,54,11,"ExpoCalendar"],[156,68,54,24,"saveCalendarAsync"],[156,85,54,11],[156,86,54,42,"newDetails"],[156,96,54,11],[156,97,22,7],[158,0,22,7],[159,0,22,7],[160,0,22,7],[161,0,22,7],[162,0,22,7],[163,0,22,7],[164,0,22,7],[166,0,56,7],[166,11,56,22,"deleteCalendarAsync"],[166,30,56,7],[166,31,56,42,"id"],[166,33,56,7],[167,0,56,7],[168,0,56,7],[169,0,56,7],[170,0,56,7],[171,0,56,7],[171,16,57,9,"ExpoCalendar"],[171,38,57,22,"deleteCalendarAsync"],[171,57,56,7],[172,0,56,7],[173,0,56,7],[174,0,56,7],[176,0,56,7],[176,18,58,14],[176,22,58,18,"UnavailabilityError"],[176,47,58,14],[176,48,58,38],[176,58,58,14],[176,60,58,50],[176,81,58,14],[176,82,56,7],[178,0,56,7],[179,0,56,7],[179,16,60,9,"id"],[179,18,56,7],[180,0,56,7],[181,0,56,7],[182,0,56,7],[184,0,56,7],[184,18,61,14],[184,22,61,18,"Error"],[184,27,61,14],[184,28,61,24],[184,107,61,14],[184,108,56,7],[186,0,56,7],[187,0,56,7],[187,46,63,11,"ExpoCalendar"],[187,68,63,24,"deleteCalendarAsync"],[187,87,63,11],[187,88,63,44,"id"],[187,90,63,11],[187,91,56,7],[189,0,56,7],[190,0,56,7],[191,0,56,7],[192,0,56,7],[193,0,56,7],[194,0,56,7],[195,0,56,7],[197,0,65,7],[197,11,65,22,"getEventsAsync"],[197,25,65,7],[197,26,65,37,"calendarIds"],[197,37,65,7],[197,39,65,50,"startDate"],[197,48,65,7],[197,50,65,61,"endDate"],[197,57,65,7],[198,0,65,7],[199,0,65,7],[200,0,65,7],[201,0,65,7],[202,0,65,7],[202,16,66,9,"ExpoCalendar"],[202,38,66,22,"getEventsAsync"],[202,52,65,7],[203,0,65,7],[204,0,65,7],[205,0,65,7],[207,0,65,7],[207,18,67,14],[207,22,67,18,"UnavailabilityError"],[207,47,67,14],[207,48,67,38],[207,58,67,14],[207,60,67,50],[207,76,67,14],[207,77,65,7],[209,0,65,7],[210,0,65,7],[210,16,69,9,"startDate"],[210,25,65,7],[211,0,65,7],[212,0,65,7],[213,0,65,7],[215,0,65,7],[215,18,70,14],[215,22,70,18,"Error"],[215,27,70,14],[215,28,70,24],[215,104,70,14],[215,105,65,7],[217,0,65,7],[218,0,65,7],[218,16,72,9,"endDate"],[218,23,65,7],[219,0,65,7],[220,0,65,7],[221,0,65,7],[223,0,65,7],[223,18,73,14],[223,22,73,18,"Error"],[223,27,73,14],[223,28,73,24],[223,103,73,14],[223,104,65,7],[225,0,65,7],[226,0,65,7],[226,18,75,8],[226,19,75,9,"calendarIds"],[226,30,75,8],[226,34,75,24],[226,35,75,25,"calendarIds"],[226,46,75,36],[226,47,75,37,"length"],[226,53,65,7],[227,0,65,7],[228,0,65,7],[229,0,65,7],[231,0,65,7],[231,18,76,14],[231,22,76,18,"Error"],[231,27,76,14],[231,28,76,24],[231,107,76,14],[231,108,65,7],[233,0,65,7],[234,0,65,7],[234,46,78,11,"ExpoCalendar"],[234,68,78,24,"getEventsAsync"],[234,82,78,11],[234,83,78,39,"stringifyIfDate"],[234,98,78,54],[234,99,78,55,"startDate"],[234,108,78,54],[234,109,78,11],[234,111,78,67,"stringifyIfDate"],[234,126,78,82],[234,127,78,83,"endDate"],[234,134,78,82],[234,135,78,11],[234,137,78,93,"calendarIds"],[234,148,78,11],[234,149,65,7],[236,0,65,7],[237,0,65,7],[238,0,65,7],[239,0,65,7],[240,0,65,7],[241,0,65,7],[242,0,65,7],[244,0,80,7],[244,11,80,22,"getEventAsync"],[244,24,80,7],[244,25,80,36,"id"],[244,27,80,7],[245,0,80,7],[246,0,80,7],[247,0,80,7],[248,0,80,7],[249,0,80,7],[251,0,80,7],[252,0,80,7],[253,0,80,7],[254,0,80,7],[255,0,80,7],[255,78,80,86],[255,80,80,7],[255,107,80,42,"futureEvents"],[255,119,80,7],[255,121,80,42,"futureEvents"],[255,133,80,7],[255,167,80,57],[255,172,80,7],[255,194,80,64,"instanceStartDate"],[255,211,80,7],[255,219,80,64,"instanceStartDate"],[255,236,80,7],[257,0,80,7],[257,16,81,9,"ExpoCalendar"],[257,38,81,22,"getEventByIdAsync"],[257,55,80,7],[258,0,80,7],[259,0,80,7],[260,0,80,7],[262,0,80,7],[262,18,82,14],[262,22,82,18,"UnavailabilityError"],[262,47,82,14],[262,48,82,38],[262,58,82,14],[262,60,82,50],[262,75,82,14],[262,76,80,7],[264,0,80,7],[265,0,80,7],[265,16,84,9,"id"],[265,18,80,7],[266,0,80,7],[267,0,80,7],[268,0,80,7],[270,0,80,7],[270,18,85,14],[270,22,85,18,"Error"],[270,27,85,14],[270,28,85,24],[270,98,85,14],[270,99,80,7],[272,0,80,7],[273,0,80,7],[273,18,87,8,"Platform"],[273,40,87,17,"OS"],[273,42,87,8],[273,47,87,24],[273,52,80,7],[274,0,80,7],[275,0,80,7],[276,0,80,7],[278,0,80,7],[278,46,88,15,"ExpoCalendar"],[278,68,88,28,"getEventByIdAsync"],[278,85,88,15],[278,86,88,46,"id"],[278,88,88,15],[278,90,88,50,"instanceStartDate"],[278,107,88,15],[278,108,80,7],[280,0,80,7],[281,0,80,7],[281,46,91,15,"ExpoCalendar"],[281,68,91,28,"getEventByIdAsync"],[281,85,91,15],[281,86,91,46,"id"],[281,88,91,15],[281,89,80,7],[283,0,80,7],[284,0,80,7],[285,0,80,7],[286,0,80,7],[287,0,80,7],[288,0,80,7],[289,0,80,7],[291,0,94,7],[291,11,94,22,"createEventAsync"],[291,27,94,7],[291,28,94,39,"calendarId"],[291,38,94,7],[292,0,94,7],[293,0,94,7],[294,0,94,7],[295,0,94,7],[296,0,94,7],[297,0,94,7],[298,0,94,7],[299,0,94,51,"details"],[299,12,94,51,"details"],[299,19,94,7],[299,81,94,61],[299,83,94,7],[301,0,94,7],[301,16,95,9,"ExpoCalendar"],[301,38,95,22,"saveEventAsync"],[301,52,94,7],[302,0,94,7],[303,0,94,7],[304,0,94,7],[306,0,94,7],[306,18,96,14],[306,22,96,18,"UnavailabilityError"],[306,47,96,14],[306,48,96,38],[306,58,96,14],[306,60,96,50],[306,78,96,14],[306,79,94,7],[308,0,94,7],[309,0,94,7],[309,16,98,9,"calendarId"],[309,26,94,7],[310,0,94,7],[311,0,94,7],[312,0,94,7],[314,0,94,7],[314,18,99,14],[314,22,99,18,"Error"],[314,27,99,14],[314,28,99,24],[314,104,99,14],[314,105,94,7],[316,0,94,7],[317,0,94,7],[317,18,101,8,"Platform"],[317,40,101,17,"OS"],[317,42,101,8],[317,47,101,24],[317,56,94,7],[318,0,94,7],[319,0,94,7],[320,0,94,7],[322,0,94,7],[322,16,102,13,"details"],[322,23,102,20],[322,24,102,21,"startDate"],[322,33,94,7],[323,0,94,7],[324,0,94,7],[325,0,94,7],[327,0,94,7],[327,18,103,18],[327,22,103,22,"Error"],[327,27,103,18],[327,28,103,28],[327,74,103,18],[327,75,94,7],[329,0,94,7],[330,0,94,7],[330,16,105,13,"details"],[330,23,105,20],[330,24,105,21,"endDate"],[330,31,94,7],[331,0,94,7],[332,0,94,7],[333,0,94,7],[335,0,94,7],[335,18,106,18],[335,22,106,22,"Error"],[335,27,106,18],[335,28,106,28],[335,73,106,18],[335,74,94,7],[337,0,94,7],[338,0,109,10,"newDetails"],[338,12,109,10,"newDetails"],[338,22,94,7],[338,43,110,11,"details"],[338,50,94,7],[339,0,111,8,"id"],[339,14,111,8,"id"],[339,16,111,10],[339,18,111,12,"undefined"],[339,27,94,7],[340,0,112,8,"calendarId"],[340,14,112,8,"calendarId"],[340,24,112,18],[340,26,112,20,"calendarId"],[340,36,112,30],[340,41,112,35,"DEFAULT"],[340,48,112,20],[340,51,112,45,"undefined"],[340,60,112,20],[340,63,112,57,"calendarId"],[341,0,94,7],[342,0,94,7],[342,46,114,11,"ExpoCalendar"],[342,68,114,24,"saveEventAsync"],[342,82,114,11],[342,83,114,39,"stringifyDateValues"],[342,102,114,58],[342,103,114,59,"newDetails"],[342,113,114,58],[342,114,114,11],[342,116,114,72],[342,118,114,11],[342,119,94,7],[344,0,94,7],[345,0,94,7],[346,0,94,7],[347,0,94,7],[348,0,94,7],[349,0,94,7],[350,0,94,7],[352,0,116,7],[352,11,116,22,"updateEventAsync"],[352,27,116,7],[352,28,116,39,"id"],[352,30,116,7],[353,0,116,7],[354,0,116,7],[355,0,116,7],[356,0,116,7],[357,0,116,7],[358,0,116,7],[359,0,116,7],[361,0,116,7],[362,0,116,7],[363,0,116,7],[364,0,116,7],[365,0,116,43,"details"],[365,12,116,43,"details"],[365,19,116,7],[365,81,116,53],[365,83,116,7],[366,0,116,7],[366,79,116,103],[366,81,116,7],[366,110,116,59,"futureEvents"],[366,122,116,7],[366,124,116,59,"futureEvents"],[366,136,116,7],[366,171,116,74],[366,176,116,7],[366,199,116,81,"instanceStartDate"],[366,216,116,7],[366,225,116,81,"instanceStartDate"],[366,242,116,7],[368,0,116,7],[368,16,117,9,"ExpoCalendar"],[368,38,117,22,"saveEventAsync"],[368,52,116,7],[369,0,116,7],[370,0,116,7],[371,0,116,7],[373,0,116,7],[373,18,118,14],[373,22,118,18,"UnavailabilityError"],[373,47,118,14],[373,48,118,38],[373,58,118,14],[373,60,118,50],[373,78,118,14],[373,79,116,7],[375,0,116,7],[376,0,116,7],[376,16,120,9,"id"],[376,18,116,7],[377,0,116,7],[378,0,116,7],[379,0,116,7],[381,0,116,7],[381,18,121,14],[381,22,121,18,"Error"],[381,27,121,14],[381,28,121,24],[381,101,121,14],[381,102,116,7],[383,0,116,7],[384,0,123,4],[384,16,123,8,"Platform"],[384,38,123,17,"OS"],[384,40,123,8],[384,45,123,24],[384,50,123,4],[384,52,123,31],[385,0,124,8],[385,18,124,12,"details"],[385,25,124,19],[385,26,124,20,"hasOwnProperty"],[385,40,124,12],[385,41,124,35],[385,55,124,12],[385,60,125,12,"details"],[385,67,125,19],[385,68,125,20,"hasOwnProperty"],[385,82,125,12],[385,83,125,35],[385,101,125,12],[385,102,124,12],[385,106,126,12,"details"],[385,113,126,19],[385,114,126,20,"hasOwnProperty"],[385,128,126,12],[385,129,126,35],[385,148,126,12],[385,149,124,12],[385,153,127,12,"details"],[385,160,127,19],[385,161,127,20,"hasOwnProperty"],[385,175,127,12],[385,176,127,35],[385,188,127,12],[385,189,124,12],[385,193,128,12,"details"],[385,200,128,19],[385,201,128,20,"hasOwnProperty"],[385,215,128,12],[385,216,128,35],[385,224,128,12],[385,225,124,12],[385,229,129,12,"details"],[385,236,129,19],[385,237,129,20,"hasOwnProperty"],[385,251,129,12],[385,252,129,35],[385,263,129,12],[385,264,124,8],[385,266,129,49],[386,0,130,12,"console"],[386,16,130,12,"console"],[386,23,130,19],[386,24,130,20,"warn"],[386,28,130,12],[386,29,130,25],[386,123,130,12],[387,0,131,9],[388,0,132,5],[390,0,133,10,"newDetails"],[390,12,133,10,"newDetails"],[390,22,116,7],[390,43,133,28,"details"],[390,50,116,7],[391,0,133,37,"id"],[391,14,133,37,"id"],[391,16,133,39],[391,18,133,37,"id"],[391,20,116,7],[392,0,133,41,"instanceStartDate"],[392,14,133,41,"instanceStartDate"],[392,31,133,58],[392,33,133,41,"instanceStartDate"],[393,0,116,7],[394,0,116,7],[394,46,134,11,"ExpoCalendar"],[394,68,134,24,"saveEventAsync"],[394,82,134,11],[394,83,134,39,"stringifyDateValues"],[394,102,134,58],[394,103,134,59,"newDetails"],[394,113,134,58],[394,114,134,11],[394,116,134,72],[395,0,134,74,"futureEvents"],[395,14,134,74,"futureEvents"],[395,26,134,86],[395,28,134,74,"futureEvents"],[396,0,134,72],[396,13,134,11],[396,14,116,7],[398,0,116,7],[399,0,116,7],[400,0,116,7],[401,0,116,7],[402,0,116,7],[403,0,116,7],[404,0,116,7],[406,0,136,7],[406,11,136,22,"deleteEventAsync"],[406,27,136,7],[406,28,136,39,"id"],[406,30,136,7],[407,0,136,7],[408,0,136,7],[409,0,136,7],[410,0,136,7],[411,0,136,7],[413,0,136,7],[414,0,136,7],[415,0,136,7],[416,0,136,7],[417,0,136,7],[417,79,136,89],[417,81,136,7],[417,110,136,45,"futureEvents"],[417,122,136,7],[417,124,136,45,"futureEvents"],[417,136,136,7],[417,171,136,60],[417,176,136,7],[417,199,136,67,"instanceStartDate"],[417,216,136,7],[417,225,136,67,"instanceStartDate"],[417,242,136,7],[419,0,136,7],[419,16,137,9,"ExpoCalendar"],[419,38,137,22,"deleteEventAsync"],[419,54,136,7],[420,0,136,7],[421,0,136,7],[422,0,136,7],[424,0,136,7],[424,18,138,14],[424,22,138,18,"UnavailabilityError"],[424,47,138,14],[424,48,138,38],[424,58,138,14],[424,60,138,50],[424,78,138,14],[424,79,136,7],[426,0,136,7],[427,0,136,7],[427,16,140,9,"id"],[427,18,136,7],[428,0,136,7],[429,0,136,7],[430,0,136,7],[432,0,136,7],[432,18,141,14],[432,22,141,18,"Error"],[432,27,141,14],[432,28,141,24],[432,101,141,14],[432,102,136,7],[434,0,136,7],[435,0,136,7],[435,46,143,11,"ExpoCalendar"],[435,68,143,24,"deleteEventAsync"],[435,84,143,11],[435,85,143,41],[436,0,143,43,"id"],[436,14,143,43,"id"],[436,16,143,45],[436,18,143,43,"id"],[436,20,143,41],[437,0,143,47,"instanceStartDate"],[437,14,143,47,"instanceStartDate"],[437,31,143,64],[437,33,143,47,"instanceStartDate"],[438,0,143,41],[438,13,143,11],[438,15,143,68],[439,0,143,70,"futureEvents"],[439,14,143,70,"futureEvents"],[439,26,143,82],[439,28,143,70,"futureEvents"],[440,0,143,68],[440,13,143,11],[440,14,136,7],[442,0,136,7],[443,0,136,7],[444,0,136,7],[445,0,136,7],[446,0,136,7],[447,0,136,7],[448,0,136,7],[450,0,145,7],[450,11,145,22,"getAttendeesForEventAsync"],[450,36,145,7],[450,37,145,48,"id"],[450,39,145,7],[451,0,145,7],[452,0,145,7],[453,0,145,7],[454,0,145,7],[455,0,145,7],[456,0,145,7],[458,0,145,7],[459,0,145,7],[460,0,145,7],[461,0,145,7],[462,0,145,7],[462,82,145,98],[462,84,145,7],[462,113,145,54,"futureEvents"],[462,125,145,7],[462,127,145,54,"futureEvents"],[462,139,145,7],[462,174,145,69],[462,179,145,7],[462,202,145,76,"instanceStartDate"],[462,219,145,7],[462,228,145,76,"instanceStartDate"],[462,245,145,7],[464,0,145,7],[464,16,146,9,"ExpoCalendar"],[464,38,146,22,"getAttendeesForEventAsync"],[464,63,145,7],[465,0,145,7],[466,0,145,7],[467,0,145,7],[469,0,145,7],[469,18,147,14],[469,22,147,18,"UnavailabilityError"],[469,47,147,14],[469,48,147,38],[469,58,147,14],[469,60,147,50],[469,87,147,14],[469,88,145,7],[471,0,145,7],[472,0,145,7],[472,16,149,9,"id"],[472,18,145,7],[473,0,145,7],[474,0,145,7],[475,0,145,7],[477,0,145,7],[477,18,150,14],[477,22,150,18,"Error"],[477,27,150,14],[477,28,150,24],[477,110,150,14],[477,111,145,7],[479,0,145,7],[480,0,153,10,"params"],[480,12,153,10,"params"],[480,18,145,7],[480,21,153,19,"Platform"],[480,43,153,28,"OS"],[480,45,153,19],[480,50,153,35],[480,55,153,19],[480,58,153,43],[481,0,153,45,"id"],[481,14,153,45,"id"],[481,16,153,47],[481,18,153,45,"id"],[481,20,153,43],[482,0,153,49,"instanceStartDate"],[482,14,153,49,"instanceStartDate"],[482,31,153,66],[482,33,153,49,"instanceStartDate"],[483,0,153,43],[483,13,153,19],[483,16,153,71,"id"],[483,18,145,7],[484,0,145,7],[484,47,154,11,"ExpoCalendar"],[484,69,154,24,"getAttendeesForEventAsync"],[484,94,154,11],[484,95,154,50,"params"],[484,101,154,11],[484,102,145,7],[486,0,145,7],[487,0,145,7],[488,0,145,7],[489,0,145,7],[490,0,145,7],[491,0,145,7],[492,0,145,7],[494,0,156,7],[494,11,156,22,"createAttendeeAsync"],[494,30,156,7],[494,31,156,42,"eventId"],[494,38,156,7],[495,0,156,7],[496,0,156,7],[497,0,156,7],[498,0,156,7],[499,0,156,7],[500,0,156,7],[501,0,156,7],[502,0,156,51,"details"],[502,12,156,51,"details"],[502,19,156,7],[502,84,156,61],[502,86,156,7],[504,0,156,7],[504,16,157,9,"ExpoCalendar"],[504,38,157,22,"saveAttendeeForEventAsync"],[504,63,156,7],[505,0,156,7],[506,0,156,7],[507,0,156,7],[509,0,156,7],[509,18,158,14],[509,22,158,18,"UnavailabilityError"],[509,47,158,14],[509,48,158,38],[509,58,158,14],[509,60,158,50],[509,81,158,14],[509,82,156,7],[511,0,156,7],[512,0,156,7],[512,16,160,9,"eventId"],[512,23,156,7],[513,0,156,7],[514,0,156,7],[515,0,156,7],[517,0,156,7],[517,18,161,14],[517,22,161,18,"Error"],[517,27,161,14],[517,28,161,24],[517,104,161,14],[517,105,156,7],[519,0,156,7],[520,0,156,7],[520,16,163,9,"details"],[520,23,163,16],[520,24,163,17,"email"],[520,29,156,7],[521,0,156,7],[522,0,156,7],[523,0,156,7],[525,0,156,7],[525,18,164,14],[525,22,164,18,"Error"],[525,27,164,14],[525,28,164,24],[525,76,164,14],[525,77,156,7],[527,0,156,7],[528,0,156,7],[528,16,166,9,"details"],[528,23,166,16],[528,24,166,17,"role"],[528,28,156,7],[529,0,156,7],[530,0,156,7],[531,0,156,7],[533,0,156,7],[533,18,167,14],[533,22,167,18,"Error"],[533,27,167,14],[533,28,167,24],[533,74,167,14],[533,75,156,7],[535,0,156,7],[536,0,156,7],[536,16,169,9,"details"],[536,23,169,16],[536,24,169,17,"type"],[536,28,156,7],[537,0,156,7],[538,0,156,7],[539,0,156,7],[541,0,156,7],[541,18,170,14],[541,22,170,18,"Error"],[541,27,170,14],[541,28,170,24],[541,74,170,14],[541,75,156,7],[543,0,156,7],[544,0,156,7],[544,16,172,9,"details"],[544,23,172,16],[544,24,172,17,"status"],[544,30,156,7],[545,0,156,7],[546,0,156,7],[547,0,156,7],[549,0,156,7],[549,18,173,14],[549,22,173,18,"Error"],[549,27,173,14],[549,28,173,24],[549,76,173,14],[549,77,156,7],[551,0,156,7],[552,0,175,10,"newDetails"],[552,12,175,10,"newDetails"],[552,22,156,7],[552,43,175,28,"details"],[552,50,156,7],[553,0,175,37,"id"],[553,14,175,37,"id"],[553,16,175,39],[553,18,175,41,"undefined"],[554,0,156,7],[555,0,156,7],[555,47,176,11,"ExpoCalendar"],[555,69,176,24,"saveAttendeeForEventAsync"],[555,94,176,11],[555,95,176,50,"newDetails"],[555,105,176,11],[555,107,176,62,"eventId"],[555,114,176,11],[555,115,156,7],[557,0,156,7],[558,0,156,7],[559,0,156,7],[560,0,156,7],[561,0,156,7],[562,0,156,7],[563,0,156,7],[565,0,178,7],[565,11,178,22,"updateAttendeeAsync"],[565,30,178,7],[565,31,178,42,"id"],[565,33,178,7],[566,0,178,7],[567,0,178,7],[568,0,178,7],[569,0,178,7],[570,0,178,7],[571,0,178,7],[572,0,178,7],[573,0,178,46,"details"],[573,12,178,46,"details"],[573,19,178,7],[573,84,178,56],[573,86,178,7],[575,0,178,7],[575,16,179,9,"ExpoCalendar"],[575,38,179,22,"saveAttendeeForEventAsync"],[575,63,178,7],[576,0,178,7],[577,0,178,7],[578,0,178,7],[580,0,178,7],[580,18,180,14],[580,22,180,18,"UnavailabilityError"],[580,47,180,14],[580,48,180,38],[580,58,180,14],[580,60,180,50],[580,81,180,14],[580,82,178,7],[582,0,178,7],[583,0,178,7],[583,16,182,9,"id"],[583,18,178,7],[584,0,178,7],[585,0,178,7],[586,0,178,7],[588,0,178,7],[588,18,183,14],[588,22,183,18,"Error"],[588,27,183,14],[588,28,183,24],[588,104,183,14],[588,105,178,7],[590,0,178,7],[591,0,185,10,"newDetails"],[591,12,185,10,"newDetails"],[591,22,178,7],[591,43,185,28,"details"],[591,50,178,7],[592,0,185,37,"id"],[592,14,185,37,"id"],[592,16,185,39],[592,18,185,37,"id"],[593,0,178,7],[594,0,178,7],[594,47,186,11,"ExpoCalendar"],[594,69,186,24,"saveAttendeeForEventAsync"],[594,94,186,11],[594,95,186,50,"newDetails"],[594,105,186,11],[594,107,186,62],[594,111,186,11],[594,112,178,7],[596,0,178,7],[597,0,178,7],[598,0,178,7],[599,0,178,7],[600,0,178,7],[601,0,178,7],[602,0,178,7],[604,0,188,7],[604,11,188,22,"deleteAttendeeAsync"],[604,30,188,7],[604,31,188,42,"id"],[604,33,188,7],[605,0,188,7],[606,0,188,7],[607,0,188,7],[608,0,188,7],[609,0,188,7],[609,16,189,9,"ExpoCalendar"],[609,38,189,22,"deleteAttendeeAsync"],[609,57,188,7],[610,0,188,7],[611,0,188,7],[612,0,188,7],[614,0,188,7],[614,18,190,14],[614,22,190,18,"UnavailabilityError"],[614,47,190,14],[614,48,190,38],[614,58,190,14],[614,60,190,50],[614,81,190,14],[614,82,188,7],[616,0,188,7],[617,0,188,7],[617,16,192,9,"id"],[617,18,188,7],[618,0,188,7],[619,0,188,7],[620,0,188,7],[622,0,188,7],[622,18,193,14],[622,22,193,18,"Error"],[622,27,193,14],[622,28,193,24],[622,104,193,14],[622,105,188,7],[624,0,188,7],[625,0,188,7],[625,47,195,11,"ExpoCalendar"],[625,69,195,24,"deleteAttendeeAsync"],[625,88,195,11],[625,89,195,44,"id"],[625,91,195,11],[625,92,188,7],[627,0,188,7],[628,0,188,7],[629,0,188,7],[630,0,188,7],[631,0,188,7],[632,0,188,7],[633,0,188,7],[635,0,197,7],[635,11,197,22,"getRemindersAsync"],[635,28,197,7],[635,29,197,40,"calendarIds"],[635,40,197,7],[635,42,197,53,"status"],[635,48,197,7],[635,50,197,61,"startDate"],[635,59,197,7],[635,61,197,72,"endDate"],[635,68,197,7],[636,0,197,7],[637,0,197,7],[638,0,197,7],[639,0,197,7],[640,0,197,7],[640,16,198,9,"ExpoCalendar"],[640,38,198,22,"getRemindersAsync"],[640,55,197,7],[641,0,197,7],[642,0,197,7],[643,0,197,7],[645,0,197,7],[645,18,199,14],[645,22,199,18,"UnavailabilityError"],[645,47,199,14],[645,48,199,38],[645,58,199,14],[645,60,199,50],[645,79,199,14],[645,80,197,7],[647,0,197,7],[648,0,197,7],[648,18,201,8,"status"],[648,24,201,14],[648,28,201,18],[648,29,201,19,"startDate"],[648,38,197,7],[649,0,197,7],[650,0,197,7],[651,0,197,7],[653,0,197,7],[653,18,202,14],[653,22,202,18,"Error"],[653,27,202,14],[653,28,202,24],[653,110,202,14],[653,111,197,7],[655,0,197,7],[656,0,197,7],[656,18,204,8,"status"],[656,24,204,14],[656,28,204,18],[656,29,204,19,"endDate"],[656,36,197,7],[657,0,197,7],[658,0,197,7],[659,0,197,7],[661,0,197,7],[661,18,205,14],[661,22,205,18,"Error"],[661,27,205,14],[661,28,205,24],[661,109,205,14],[661,110,197,7],[663,0,197,7],[664,0,197,7],[664,18,207,8],[664,19,207,9,"calendarIds"],[664,30,207,8],[664,34,207,24],[664,35,207,25,"calendarIds"],[664,46,207,36],[664,47,207,37,"length"],[664,53,197,7],[665,0,197,7],[666,0,197,7],[667,0,197,7],[669,0,197,7],[669,18,208,14],[669,22,208,18,"Error"],[669,27,208,14],[669,28,208,24],[669,110,208,14],[669,111,197,7],[671,0,197,7],[672,0,197,7],[672,47,210,11,"ExpoCalendar"],[672,69,210,24,"getRemindersAsync"],[672,86,210,11],[672,87,210,42,"stringifyIfDate"],[672,102,210,57],[672,103,210,58,"startDate"],[672,112,210,57],[672,113,210,42],[672,117,210,72],[672,121,210,11],[672,123,210,78,"stringifyIfDate"],[672,138,210,93],[672,139,210,94,"endDate"],[672,146,210,93],[672,147,210,78],[672,151,210,106],[672,155,210,11],[672,157,210,112,"calendarIds"],[672,168,210,11],[672,170,210,125,"status"],[672,176,210,131],[672,180,210,135],[672,184,210,11],[672,185,197,7],[674,0,197,7],[675,0,197,7],[676,0,197,7],[677,0,197,7],[678,0,197,7],[679,0,197,7],[680,0,197,7],[682,0,212,7],[682,11,212,22,"getReminderAsync"],[682,27,212,7],[682,28,212,39,"id"],[682,30,212,7],[683,0,212,7],[684,0,212,7],[685,0,212,7],[686,0,212,7],[687,0,212,7],[687,16,213,9,"ExpoCalendar"],[687,38,213,22,"getReminderByIdAsync"],[687,58,212,7],[688,0,212,7],[689,0,212,7],[690,0,212,7],[692,0,212,7],[692,18,214,14],[692,22,214,18,"UnavailabilityError"],[692,47,214,14],[692,48,214,38],[692,58,214,14],[692,60,214,50],[692,78,214,14],[692,79,212,7],[694,0,212,7],[695,0,212,7],[695,16,216,9,"id"],[695,18,212,7],[696,0,212,7],[697,0,212,7],[698,0,212,7],[700,0,212,7],[700,18,217,14],[700,22,217,18,"Error"],[700,27,217,14],[700,28,217,24],[700,104,217,14],[700,105,212,7],[702,0,212,7],[703,0,212,7],[703,47,219,11,"ExpoCalendar"],[703,69,219,24,"getReminderByIdAsync"],[703,89,219,11],[703,90,219,45,"id"],[703,92,219,11],[703,93,212,7],[705,0,212,7],[706,0,212,7],[707,0,212,7],[708,0,212,7],[709,0,212,7],[710,0,212,7],[711,0,212,7],[713,0,221,7],[713,11,221,22,"createReminderAsync"],[713,30,221,7],[713,31,221,42,"calendarId"],[713,41,221,7],[714,0,221,7],[715,0,221,7],[716,0,221,7],[717,0,221,7],[718,0,221,7],[719,0,221,7],[720,0,221,7],[721,0,221,54,"details"],[721,12,221,54,"details"],[721,19,221,7],[721,84,221,64],[721,86,221,7],[723,0,221,7],[723,16,222,9,"ExpoCalendar"],[723,38,222,22,"saveReminderAsync"],[723,55,221,7],[724,0,221,7],[725,0,221,7],[726,0,221,7],[728,0,221,7],[728,18,223,14],[728,22,223,18,"UnavailabilityError"],[728,47,223,14],[728,48,223,38],[728,58,223,14],[728,60,223,50],[728,81,223,14],[728,82,221,7],[730,0,221,7],[731,0,221,7],[731,16,225,9,"calendarId"],[731,26,221,7],[732,0,221,7],[733,0,221,7],[734,0,221,7],[736,0,221,7],[736,18,226,14],[736,22,226,18,"Error"],[736,27,226,14],[736,28,226,24],[736,107,226,14],[736,108,221,7],[738,0,221,7],[739,0,228,10,"newDetails"],[739,12,228,10,"newDetails"],[739,22,221,7],[739,43,229,11,"details"],[739,50,221,7],[740,0,230,8,"id"],[740,14,230,8,"id"],[740,16,230,10],[740,18,230,12,"undefined"],[740,27,221,7],[741,0,231,8,"calendarId"],[741,14,231,8,"calendarId"],[741,24,231,18],[741,26,231,20,"calendarId"],[741,36,231,30],[741,41,231,35,"DEFAULT"],[741,48,231,20],[741,51,231,45,"undefined"],[741,60,231,20],[741,63,231,57,"calendarId"],[742,0,221,7],[743,0,221,7],[743,47,233,11,"ExpoCalendar"],[743,69,233,24,"saveReminderAsync"],[743,86,233,11],[743,87,233,42,"stringifyDateValues"],[743,106,233,61],[743,107,233,62,"newDetails"],[743,117,233,61],[743,118,233,11],[743,119,221,7],[745,0,221,7],[746,0,221,7],[747,0,221,7],[748,0,221,7],[749,0,221,7],[750,0,221,7],[751,0,221,7],[753,0,235,7],[753,11,235,22,"updateReminderAsync"],[753,30,235,7],[753,31,235,42,"id"],[753,33,235,7],[754,0,235,7],[755,0,235,7],[756,0,235,7],[757,0,235,7],[758,0,235,7],[759,0,235,7],[760,0,235,7],[761,0,235,46,"details"],[761,12,235,46,"details"],[761,19,235,7],[761,84,235,56],[761,86,235,7],[763,0,235,7],[763,16,236,9,"ExpoCalendar"],[763,38,236,22,"saveReminderAsync"],[763,55,235,7],[764,0,235,7],[765,0,235,7],[766,0,235,7],[768,0,235,7],[768,18,237,14],[768,22,237,18,"UnavailabilityError"],[768,47,237,14],[768,48,237,38],[768,58,237,14],[768,60,237,50],[768,81,237,14],[768,82,235,7],[770,0,235,7],[771,0,235,7],[771,16,239,9,"id"],[771,18,235,7],[772,0,235,7],[773,0,235,7],[774,0,235,7],[776,0,235,7],[776,18,240,14],[776,22,240,18,"Error"],[776,27,240,14],[776,28,240,24],[776,107,240,14],[776,108,235,7],[778,0,235,7],[779,0,242,4],[779,16,242,8,"details"],[779,23,242,15],[779,24,242,16,"hasOwnProperty"],[779,38,242,8],[779,39,242,31],[779,53,242,8],[779,58,242,50,"details"],[779,65,242,57],[779,66,242,58,"hasOwnProperty"],[779,80,242,50],[779,81,242,73],[779,99,242,50],[779,100,242,4],[779,102,242,94],[780,0,243,8,"console"],[780,14,243,8,"console"],[780,21,243,15],[780,22,243,16,"warn"],[780,26,243,8],[780,27,243,21],[780,124,243,8],[781,0,244,5],[783,0,245,10,"newDetails"],[783,12,245,10,"newDetails"],[783,22,235,7],[783,43,245,28,"details"],[783,50,235,7],[784,0,245,37,"id"],[784,14,245,37,"id"],[784,16,245,39],[784,18,245,37,"id"],[785,0,235,7],[786,0,235,7],[786,47,246,11,"ExpoCalendar"],[786,69,246,24,"saveReminderAsync"],[786,86,246,11],[786,87,246,42,"stringifyDateValues"],[786,106,246,61],[786,107,246,62,"newDetails"],[786,117,246,61],[786,118,246,11],[786,119,235,7],[788,0,235,7],[789,0,235,7],[790,0,235,7],[791,0,235,7],[792,0,235,7],[793,0,235,7],[794,0,235,7],[796,0,248,7],[796,11,248,22,"deleteReminderAsync"],[796,30,248,7],[796,31,248,42,"id"],[796,33,248,7],[797,0,248,7],[798,0,248,7],[799,0,248,7],[800,0,248,7],[801,0,248,7],[801,16,249,9,"ExpoCalendar"],[801,38,249,22,"deleteReminderAsync"],[801,57,248,7],[802,0,248,7],[803,0,248,7],[804,0,248,7],[806,0,248,7],[806,18,250,14],[806,22,250,18,"UnavailabilityError"],[806,47,250,14],[806,48,250,38],[806,58,250,14],[806,60,250,50],[806,81,250,14],[806,82,248,7],[808,0,248,7],[809,0,248,7],[809,16,252,9,"id"],[809,18,248,7],[810,0,248,7],[811,0,248,7],[812,0,248,7],[814,0,248,7],[814,18,253,14],[814,22,253,18,"Error"],[814,27,253,14],[814,28,253,24],[814,107,253,14],[814,108,248,7],[816,0,248,7],[817,0,248,7],[817,47,255,11,"ExpoCalendar"],[817,69,255,24,"deleteReminderAsync"],[817,88,255,11],[817,89,255,44,"id"],[817,91,255,11],[817,92,248,7],[819,0,248,7],[820,0,248,7],[821,0,248,7],[822,0,248,7],[823,0,248,7],[824,0,248,7],[825,0,248,7],[827,0,257,7],[827,11,257,22,"getSourcesAsync"],[827,26,257,7],[828,0,257,7],[829,0,257,7],[830,0,257,7],[831,0,257,7],[832,0,257,7],[832,16,258,9,"ExpoCalendar"],[832,38,258,22,"getSourcesAsync"],[832,53,257,7],[833,0,257,7],[834,0,257,7],[835,0,257,7],[837,0,257,7],[837,18,259,14],[837,22,259,18,"UnavailabilityError"],[837,47,259,14],[837,48,259,38],[837,58,259,14],[837,60,259,50],[837,77,259,14],[837,78,257,7],[839,0,257,7],[840,0,257,7],[840,47,261,11,"ExpoCalendar"],[840,69,261,24,"getSourcesAsync"],[840,84,261,11],[840,86,257,7],[842,0,257,7],[843,0,257,7],[844,0,257,7],[845,0,257,7],[846,0,257,7],[847,0,257,7],[848,0,257,7],[850,0,263,7],[850,11,263,22,"getSourceAsync"],[850,25,263,7],[850,26,263,37,"id"],[850,28,263,7],[851,0,263,7],[852,0,263,7],[853,0,263,7],[854,0,263,7],[855,0,263,7],[855,16,264,9,"ExpoCalendar"],[855,38,264,22,"getSourceByIdAsync"],[855,56,263,7],[856,0,263,7],[857,0,263,7],[858,0,263,7],[860,0,263,7],[860,18,265,14],[860,22,265,18,"UnavailabilityError"],[860,47,265,14],[860,48,265,38],[860,58,265,14],[860,60,265,50],[860,76,265,14],[860,77,263,7],[862,0,263,7],[863,0,263,7],[863,16,267,9,"id"],[863,18,263,7],[864,0,263,7],[865,0,263,7],[866,0,263,7],[868,0,263,7],[868,18,268,14],[868,22,268,18,"Error"],[868,27,268,14],[868,28,268,24],[868,100,268,14],[868,101,263,7],[870,0,263,7],[871,0,263,7],[871,47,270,11,"ExpoCalendar"],[871,69,270,24,"getSourceByIdAsync"],[871,87,270,11],[871,88,270,43,"id"],[871,90,270,11],[871,91,263,7],[873,0,263,7],[874,0,263,7],[875,0,263,7],[876,0,263,7],[877,0,263,7],[878,0,263,7],[879,0,263,7],[881,0,272,7],[881,11,272,16,"openEventInCalendar"],[881,30,272,7],[881,31,272,36,"id"],[881,33,272,7],[881,35,272,40],[882,0,273,4],[882,8,273,8],[882,9,273,9,"ExpoCalendar"],[882,31,273,22,"openEventInCalendar"],[882,50,273,4],[882,52,273,43],[883,0,274,8,"console"],[883,6,274,8,"console"],[883,13,274,15],[883,14,274,16,"warn"],[883,18,274,8],[883,74,274,74,"Platform"],[883,96,274,83,"OS"],[883,98,274,8],[884,0,275,8],[885,0,276,5],[887,0,277,4],[887,8,277,8],[887,9,277,9,"id"],[887,11,277,4],[887,13,277,13],[888,0,278,8],[888,12,278,14],[888,16,278,18,"Error"],[888,21,278,14],[888,22,278,24],[888,98,278,14],[888,99,278,8],[889,0,279,5],[891,0,280,4],[891,11,280,11,"ExpoCalendar"],[891,33,280,24,"openEventInCalendar"],[891,52,280,11],[891,53,280,44,"parseInt"],[891,61,280,52],[891,62,280,53,"id"],[891,64,280,52],[891,66,280,57],[891,68,280,52],[891,69,280,11],[891,70,280,4],[892,0,281,1],[894,0,282,7],[894,11,282,22,"requestPermissionsAsync"],[894,34,282,7],[895,0,282,7],[896,0,282,7],[897,0,282,7],[898,0,282,7],[899,0,282,7],[899,16,283,9,"ExpoCalendar"],[899,38,283,22,"requestPermissionsAsync"],[899,61,282,7],[900,0,282,7],[901,0,282,7],[902,0,282,7],[904,0,282,7],[904,18,284,14],[904,22,284,18,"UnavailabilityError"],[904,47,284,14],[904,48,284,38],[904,58,284,14],[904,60,284,50],[904,85,284,14],[904,86,282,7],[906,0,282,7],[907,0,282,7],[908,0,282,7],[908,46,286,17,"ExpoCalendar"],[908,68,286,30,"requestPermissionsAsync"],[908,91,286,17],[908,93,282,7],[910,0,282,7],[911,0,282,7],[913,0,282,7],[914,0,282,7],[915,0,282,7],[916,0,282,7],[917,0,282,7],[918,0,282,7],[919,0,282,7],[921,0,288,7],[921,11,288,22,"requestRemindersPermissionsAsync"],[921,43,288,7],[922,0,288,7],[923,0,288,7],[924,0,288,7],[925,0,288,7],[926,0,288,7],[926,16,289,9,"ExpoCalendar"],[926,38,289,22,"requestRemindersPermissionsAsync"],[926,70,288,7],[927,0,288,7],[928,0,288,7],[929,0,288,7],[931,0,288,7],[931,18,290,14],[931,22,290,18,"UnavailabilityError"],[931,47,290,14],[931,48,290,38],[931,58,290,14],[931,60,290,50],[931,94,290,14],[931,95,288,7],[933,0,288,7],[934,0,288,7],[935,0,288,7],[935,46,292,17,"ExpoCalendar"],[935,68,292,30,"requestRemindersPermissionsAsync"],[935,100,292,17],[935,102,288,7],[937,0,288,7],[938,0,288,7],[940,0,288,7],[941,0,288,7],[942,0,288,7],[943,0,288,7],[944,0,288,7],[945,0,288,7],[946,0,288,7],[948,0,294,7],[948,6,294,13,"EntityTypes"],[948,17,294,24],[948,20,294,27],[949,0,295,4,"EVENT"],[949,4,295,4,"EVENT"],[949,9,295,9],[949,11,295,11],[949,18,294,27],[950,0,296,4,"REMINDER"],[950,4,296,4,"REMINDER"],[950,12,296,12],[950,14,296,14],[951,0,294,27],[951,3,294,7],[953,0,298,7],[953,6,298,13,"Frequency"],[953,15,298,22],[953,18,298,25],[954,0,299,4,"DAILY"],[954,4,299,4,"DAILY"],[954,9,299,9],[954,11,299,11],[954,18,298,25],[955,0,300,4,"WEEKLY"],[955,4,300,4,"WEEKLY"],[955,10,300,10],[955,12,300,12],[955,20,298,25],[956,0,301,4,"MONTHLY"],[956,4,301,4,"MONTHLY"],[956,11,301,11],[956,13,301,13],[956,22,298,25],[957,0,302,4,"YEARLY"],[957,4,302,4,"YEARLY"],[957,10,302,10],[957,12,302,12],[958,0,298,25],[958,3,298,7],[960,0,304,7],[960,6,304,13,"Availability"],[960,18,304,25],[960,21,304,28],[961,0,305,4,"NOT_SUPPORTED"],[961,4,305,4,"NOT_SUPPORTED"],[961,17,305,17],[961,19,305,19],[961,33,304,28],[962,0,306,4,"BUSY"],[962,4,306,4,"BUSY"],[962,8,306,8],[962,10,306,10],[962,16,304,28],[963,0,307,4,"FREE"],[963,4,307,4,"FREE"],[963,8,307,8],[963,10,307,10],[963,16,304,28],[964,0,308,4,"TENTATIVE"],[964,4,308,4,"TENTATIVE"],[964,13,308,13],[964,15,308,15],[964,26,304,28],[965,0,309,4,"UNAVAILABLE"],[965,4,309,4,"UNAVAILABLE"],[965,15,309,15],[965,17,309,17],[966,0,304,28],[966,3,304,7],[968,0,311,7],[968,6,311,13,"CalendarType"],[968,18,311,25],[968,21,311,28],[969,0,312,4,"LOCAL"],[969,4,312,4,"LOCAL"],[969,9,312,9],[969,11,312,11],[969,18,311,28],[970,0,313,4,"CALDAV"],[970,4,313,4,"CALDAV"],[970,10,313,10],[970,12,313,12],[970,20,311,28],[971,0,314,4,"EXCHANGE"],[971,4,314,4,"EXCHANGE"],[971,12,314,12],[971,14,314,14],[971,24,311,28],[972,0,315,4,"SUBSCRIBED"],[972,4,315,4,"SUBSCRIBED"],[972,14,315,14],[972,16,315,16],[972,28,311,28],[973,0,316,4,"BIRTHDAYS"],[973,4,316,4,"BIRTHDAYS"],[973,13,316,13],[973,15,316,15],[974,0,311,28],[974,3,311,7],[976,0,318,7],[976,6,318,13,"EventStatus"],[976,17,318,24],[976,20,318,27],[977,0,319,4,"NONE"],[977,4,319,4,"NONE"],[977,8,319,8],[977,10,319,10],[977,16,318,27],[978,0,320,4,"CONFIRMED"],[978,4,320,4,"CONFIRMED"],[978,13,320,13],[978,15,320,15],[978,26,318,27],[979,0,321,4,"TENTATIVE"],[979,4,321,4,"TENTATIVE"],[979,13,321,13],[979,15,321,15],[979,26,318,27],[980,0,322,4,"CANCELED"],[980,4,322,4,"CANCELED"],[980,12,322,12],[980,14,322,14],[981,0,318,27],[981,3,318,7],[983,0,324,7],[983,6,324,13,"SourceType"],[983,16,324,23],[983,19,324,26],[984,0,325,4,"LOCAL"],[984,4,325,4,"LOCAL"],[984,9,325,9],[984,11,325,11],[984,18,324,26],[985,0,326,4,"EXCHANGE"],[985,4,326,4,"EXCHANGE"],[985,12,326,12],[985,14,326,14],[985,24,324,26],[986,0,327,4,"CALDAV"],[986,4,327,4,"CALDAV"],[986,10,327,10],[986,12,327,12],[986,20,324,26],[987,0,328,4,"MOBILEME"],[987,4,328,4,"MOBILEME"],[987,12,328,12],[987,14,328,14],[987,24,324,26],[988,0,329,4,"SUBSCRIBED"],[988,4,329,4,"SUBSCRIBED"],[988,14,329,14],[988,16,329,16],[988,28,324,26],[989,0,330,4,"BIRTHDAYS"],[989,4,330,4,"BIRTHDAYS"],[989,13,330,13],[989,15,330,15],[990,0,324,26],[990,3,324,7],[992,0,332,7],[992,6,332,13,"AttendeeRole"],[992,18,332,25],[992,21,332,28],[993,0,333,4,"UNKNOWN"],[993,4,333,4,"UNKNOWN"],[993,11,333,11],[993,13,333,13],[993,22,332,28],[994,0,334,4,"REQUIRED"],[994,4,334,4,"REQUIRED"],[994,12,334,12],[994,14,334,14],[994,24,332,28],[995,0,335,4,"OPTIONAL"],[995,4,335,4,"OPTIONAL"],[995,12,335,12],[995,14,335,14],[995,24,332,28],[996,0,336,4,"CHAIR"],[996,4,336,4,"CHAIR"],[996,9,336,9],[996,11,336,11],[996,18,332,28],[997,0,337,4,"NON_PARTICIPANT"],[997,4,337,4,"NON_PARTICIPANT"],[997,19,337,19],[997,21,337,21],[997,37,332,28],[998,0,338,4,"ATTENDEE"],[998,4,338,4,"ATTENDEE"],[998,12,338,12],[998,14,338,14],[998,24,332,28],[999,0,339,4,"ORGANIZER"],[999,4,339,4,"ORGANIZER"],[999,13,339,13],[999,15,339,15],[999,26,332,28],[1000,0,340,4,"PERFORMER"],[1000,4,340,4,"PERFORMER"],[1000,13,340,13],[1000,15,340,15],[1000,26,332,28],[1001,0,341,4,"SPEAKER"],[1001,4,341,4,"SPEAKER"],[1001,11,341,11],[1001,13,341,13],[1001,22,332,28],[1002,0,342,4,"NONE"],[1002,4,342,4,"NONE"],[1002,8,342,8],[1002,10,342,10],[1003,0,332,28],[1003,3,332,7],[1005,0,344,7],[1005,6,344,13,"AttendeeStatus"],[1005,20,344,27],[1005,23,344,30],[1006,0,345,4,"UNKNOWN"],[1006,4,345,4,"UNKNOWN"],[1006,11,345,11],[1006,13,345,13],[1006,22,344,30],[1007,0,346,4,"PENDING"],[1007,4,346,4,"PENDING"],[1007,11,346,11],[1007,13,346,13],[1007,22,344,30],[1008,0,347,4,"ACCEPTED"],[1008,4,347,4,"ACCEPTED"],[1008,12,347,12],[1008,14,347,14],[1008,24,344,30],[1009,0,348,4,"DECLINED"],[1009,4,348,4,"DECLINED"],[1009,12,348,12],[1009,14,348,14],[1009,24,344,30],[1010,0,349,4,"TENTATIVE"],[1010,4,349,4,"TENTATIVE"],[1010,13,349,13],[1010,15,349,15],[1010,26,344,30],[1011,0,350,4,"DELEGATED"],[1011,4,350,4,"DELEGATED"],[1011,13,350,13],[1011,15,350,15],[1011,26,344,30],[1012,0,351,4,"COMPLETED"],[1012,4,351,4,"COMPLETED"],[1012,13,351,13],[1012,15,351,15],[1012,26,344,30],[1013,0,352,4,"IN_PROCESS"],[1013,4,352,4,"IN_PROCESS"],[1013,14,352,14],[1013,16,352,16],[1013,27,344,30],[1014,0,353,4,"INVITED"],[1014,4,353,4,"INVITED"],[1014,11,353,11],[1014,13,353,13],[1014,22,344,30],[1015,0,354,4,"NONE"],[1015,4,354,4,"NONE"],[1015,8,354,8],[1015,10,354,10],[1016,0,344,30],[1016,3,344,7],[1018,0,356,7],[1018,6,356,13,"AttendeeType"],[1018,18,356,25],[1018,21,356,28],[1019,0,357,4,"UNKNOWN"],[1019,4,357,4,"UNKNOWN"],[1019,11,357,11],[1019,13,357,13],[1019,22,356,28],[1020,0,358,4,"PERSON"],[1020,4,358,4,"PERSON"],[1020,10,358,10],[1020,12,358,12],[1020,20,356,28],[1021,0,359,4,"ROOM"],[1021,4,359,4,"ROOM"],[1021,8,359,8],[1021,10,359,10],[1021,16,356,28],[1022,0,360,4,"GROUP"],[1022,4,360,4,"GROUP"],[1022,9,360,9],[1022,11,360,11],[1022,18,356,28],[1023,0,361,4,"RESOURCE"],[1023,4,361,4,"RESOURCE"],[1023,12,361,12],[1023,14,361,14],[1023,24,356,28],[1024,0,362,4,"OPTIONAL"],[1024,4,362,4,"OPTIONAL"],[1024,12,362,12],[1024,14,362,14],[1024,24,356,28],[1025,0,363,4,"REQUIRED"],[1025,4,363,4,"REQUIRED"],[1025,12,363,12],[1025,14,363,14],[1025,24,356,28],[1026,0,364,4,"NONE"],[1026,4,364,4,"NONE"],[1026,8,364,8],[1026,10,364,10],[1027,0,356,28],[1027,3,356,7],[1029,0,366,7],[1029,6,366,13,"AlarmMethod"],[1029,17,366,24],[1029,20,366,27],[1030,0,367,4,"ALARM"],[1030,4,367,4,"ALARM"],[1030,9,367,9],[1030,11,367,11],[1030,18,366,27],[1031,0,368,4,"ALERT"],[1031,4,368,4,"ALERT"],[1031,9,368,9],[1031,11,368,11],[1031,18,366,27],[1032,0,369,4,"EMAIL"],[1032,4,369,4,"EMAIL"],[1032,9,369,9],[1032,11,369,11],[1032,18,366,27],[1033,0,370,4,"SMS"],[1033,4,370,4,"SMS"],[1033,7,370,7],[1033,9,370,9],[1033,14,366,27],[1034,0,371,4,"DEFAULT"],[1034,4,371,4,"DEFAULT"],[1034,11,371,11],[1034,13,371,13],[1035,0,366,27],[1035,3,366,7],[1037,0,373,7],[1037,6,373,13,"EventAccessLevel"],[1037,22,373,29],[1037,25,373,32],[1038,0,374,4,"CONFIDENTIAL"],[1038,4,374,4,"CONFIDENTIAL"],[1038,16,374,16],[1038,18,374,18],[1038,32,373,32],[1039,0,375,4,"PRIVATE"],[1039,4,375,4,"PRIVATE"],[1039,11,375,11],[1039,13,375,13],[1039,22,373,32],[1040,0,376,4,"PUBLIC"],[1040,4,376,4,"PUBLIC"],[1040,10,376,10],[1040,12,376,12],[1040,20,373,32],[1041,0,377,4,"DEFAULT"],[1041,4,377,4,"DEFAULT"],[1041,11,377,11],[1041,13,377,13],[1042,0,373,32],[1042,3,373,7],[1044,0,379,7],[1044,6,379,13,"CalendarAccessLevel"],[1044,25,379,32],[1044,28,379,35],[1045,0,380,4,"CONTRIBUTOR"],[1045,4,380,4,"CONTRIBUTOR"],[1045,15,380,15],[1045,17,380,17],[1045,30,379,35],[1046,0,381,4,"EDITOR"],[1046,4,381,4,"EDITOR"],[1046,10,381,10],[1046,12,381,12],[1046,20,379,35],[1047,0,382,4,"FREEBUSY"],[1047,4,382,4,"FREEBUSY"],[1047,12,382,12],[1047,14,382,14],[1047,24,379,35],[1048,0,383,4,"OVERRIDE"],[1048,4,383,4,"OVERRIDE"],[1048,12,383,12],[1048,14,383,14],[1048,24,379,35],[1049,0,384,4,"OWNER"],[1049,4,384,4,"OWNER"],[1049,9,384,9],[1049,11,384,11],[1049,18,379,35],[1050,0,385,4,"READ"],[1050,4,385,4,"READ"],[1050,8,385,8],[1050,10,385,10],[1050,16,379,35],[1051,0,386,4,"RESPOND"],[1051,4,386,4,"RESPOND"],[1051,11,386,11],[1051,13,386,13],[1051,22,379,35],[1052,0,387,4,"ROOT"],[1052,4,387,4,"ROOT"],[1052,8,387,8],[1052,10,387,10],[1052,16,379,35],[1053,0,388,4,"NONE"],[1053,4,388,4,"NONE"],[1053,8,388,8],[1053,10,388,10],[1054,0,379,35],[1054,3,379,7],[1056,0,390,7],[1056,6,390,13,"ReminderStatus"],[1056,20,390,27],[1056,23,390,30],[1057,0,391,4,"COMPLETED"],[1057,4,391,4,"COMPLETED"],[1057,13,391,13],[1057,15,391,15],[1057,26,390,30],[1058,0,392,4,"INCOMPLETE"],[1058,4,392,4,"INCOMPLETE"],[1058,14,392,14],[1058,16,392,16],[1059,0,390,30],[1059,3,390,7],[1061,0,394,7],[1061,6,394,13,"DEFAULT"],[1061,13,394,20],[1061,16,394,23],[1061,25,394,7],[1064,0,395,0],[1064,11,395,9,"stringifyIfDate"],[1064,26,395,0],[1064,27,395,25,"date"],[1064,31,395,0],[1064,33,395,31],[1065,0,396,4],[1065,11,396,11,"date"],[1065,15,396,15],[1065,27,396,27,"Date"],[1065,31,396,11],[1065,34,396,34,"date"],[1065,38,396,38],[1065,39,396,39,"toISOString"],[1065,50,396,34],[1065,52,396,11],[1065,55,396,55,"date"],[1065,59,396,4],[1066,0,397,1],[1068,0,398,0],[1068,11,398,9,"stringifyDateValues"],[1068,30,398,0],[1068,31,398,29,"obj"],[1068,34,398,0],[1068,36,398,34],[1069,0,399,4],[1069,11,399,11,"Object"],[1069,17,399,17],[1069,18,399,18,"keys"],[1069,22,399,11],[1069,23,399,23,"obj"],[1069,26,399,11],[1069,28,399,28,"reduce"],[1069,34,399,11],[1069,35,399,35],[1069,45,399,36,"acc"],[1069,48,399,35],[1069,50,399,41,"key"],[1069,53,399,35],[1069,55,399,49],[1070,0,400,8,"acc"],[1070,6,400,8,"acc"],[1070,9,400,11],[1070,10,400,12,"key"],[1070,13,400,11],[1070,14,400,8],[1070,17,400,19,"stringifyIfDate"],[1070,32,400,34],[1070,33,400,35,"obj"],[1070,36,400,38],[1070,37,400,39,"key"],[1070,40,400,38],[1070,41,400,34],[1070,42,400,8],[1071,0,401,8],[1071,13,401,15,"acc"],[1071,16,401,8],[1072,0,402,5],[1072,5,399,11],[1072,7,402,7],[1072,9,399,11],[1072,10,399,4],[1073,0,403,1]]},"type":"js/module"}]}