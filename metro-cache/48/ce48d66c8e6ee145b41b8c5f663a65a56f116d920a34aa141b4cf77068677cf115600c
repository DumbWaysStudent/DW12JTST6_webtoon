{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/interopRequireWildcard","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"react","data":{"isAsync":false}},{"name":"./extractLengthList","data":{"isAsync":false}},{"name":"../util","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  var _interopRequireWildcard = _$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/interopRequireWildcard\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.extractFont = extractFont;\n  exports.setTSpan = setTSpan;\n  exports.default = extractText;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _react = _interopRequireWildcard(_$$_REQUIRE(_dependencyMap[3], \"react\"));\n\n  var _extractLengthList = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"./extractLengthList\"));\n\n  var _util = _$$_REQUIRE(_dependencyMap[5], \"../util\");\n\n  var _jsxFileName = \"/home/irvandp/Downloads/Compressed/rn-starter/rn-starter/node_modules/react-native-svg/lib/extract/extractText.js\";\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  var fontRegExp = /^\\s*((?:(?:normal|bold|italic)\\s+)*)(?:(\\d+(?:\\.\\d+)?[ptexm%])*(?:\\s*\\/.*?)?\\s+)?\\s*\"?([^\"]*)/i;\n  var fontFamilyPrefix = /^[\\s\"']*/;\n  var fontFamilySuffix = /[\\s\"']*$/;\n  var commaReg = /\\s*,\\s*/g;\n  var cachedFontObjectsFromString = {};\n\n  function extractSingleFontFamily(fontFamilyString) {\n    return fontFamilyString ? fontFamilyString.split(commaReg)[0].replace(fontFamilyPrefix, '').replace(fontFamilySuffix, '') : null;\n  }\n\n  function parseFontString(font) {\n    if (cachedFontObjectsFromString.hasOwnProperty(font)) {\n      return cachedFontObjectsFromString[font];\n    }\n\n    var match = fontRegExp.exec(font);\n\n    if (!match) {\n      cachedFontObjectsFromString[font] = null;\n      return null;\n    }\n\n    var isBold = /bold/.exec(match[1]);\n    var isItalic = /italic/.exec(match[1]);\n    cachedFontObjectsFromString[font] = {\n      fontSize: match[2] || 12,\n      fontWeight: isBold ? 'bold' : 'normal',\n      fontStyle: isItalic ? 'italic' : 'normal',\n      fontFamily: extractSingleFontFamily(match[3])\n    };\n    return cachedFontObjectsFromString[font];\n  }\n\n  function extractFont(props) {\n    var fontData = props.fontData,\n        fontStyle = props.fontStyle,\n        fontVariant = props.fontVariant,\n        fontWeight = props.fontWeight,\n        fontStretch = props.fontStretch,\n        fontSize = props.fontSize,\n        fontFamily = props.fontFamily,\n        textAnchor = props.textAnchor,\n        textDecoration = props.textDecoration,\n        letterSpacing = props.letterSpacing,\n        wordSpacing = props.wordSpacing,\n        kerning = props.kerning,\n        fontVariantLigatures = props.fontVariantLigatures,\n        fontFeatureSettings = props.fontFeatureSettings,\n        font = props.font;\n    var ownedFont = (0, _util.pickNotNil)({\n      fontData: fontData,\n      fontStyle: fontStyle,\n      fontVariant: fontVariant,\n      fontWeight: fontWeight,\n      fontStretch: fontStretch,\n      fontSize: fontSize,\n      fontFamily: extractSingleFontFamily(fontFamily),\n      textAnchor: textAnchor,\n      textDecoration: textDecoration,\n      letterSpacing: letterSpacing,\n      wordSpacing: wordSpacing,\n      kerning: kerning,\n      fontVariantLigatures: fontVariantLigatures,\n      fontFeatureSettings: fontFeatureSettings\n    });\n    var baseFont = typeof font === 'string' ? parseFontString(font) : font;\n    return _objectSpread({}, baseFont, {}, ownedFont);\n  }\n\n  var TSpan;\n\n  function setTSpan(TSpanImplementation) {\n    TSpan = TSpanImplementation;\n  }\n\n  function getChild(child) {\n    if (typeof child === 'string' || typeof child === 'number') {\n      return _react.default.createElement(TSpan, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        }\n      }, String(child));\n    } else {\n      return child;\n    }\n  }\n\n  function extractText(props, container) {\n    var x = props.x,\n        y = props.y,\n        dx = props.dx,\n        dy = props.dy,\n        rotate = props.rotate,\n        children = props.children,\n        baselineShift = props.baselineShift,\n        verticalAlign = props.verticalAlign,\n        alignmentBaseline = props.alignmentBaseline;\n    var textChildren = typeof children === 'string' || typeof children === 'number' ? container ? _react.default.createElement(TSpan, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      }\n    }, String(children)) : null : _react.Children.count(children) > 1 || Array.isArray(children) ? _react.Children.map(children, getChild) : children;\n    return {\n      content: textChildren === null ? String(children) : null,\n      children: textChildren,\n      baselineShift: baselineShift,\n      verticalAlign: verticalAlign,\n      alignmentBaseline: alignmentBaseline,\n      font: extractFont(props),\n      x: (0, _extractLengthList.default)(x),\n      y: (0, _extractLengthList.default)(y),\n      dx: (0, _extractLengthList.default)(dx),\n      dy: (0, _extractLengthList.default)(dy),\n      rotate: (0, _extractLengthList.default)(rotate)\n    };\n  }\n});","map":[[15,0,1,0],[17,0,2,0],[19,0,3,0],[27,0,5,0],[27,6,5,6,"fontRegExp"],[27,16,5,16],[27,19,5,19],[27,115,5,0],[28,0,6,0],[28,6,6,6,"fontFamilyPrefix"],[28,22,6,22],[28,25,6,25],[28,35,6,0],[29,0,7,0],[29,6,7,6,"fontFamilySuffix"],[29,22,7,22],[29,25,7,25],[29,35,7,0],[30,0,8,0],[30,6,8,6,"commaReg"],[30,14,8,14],[30,17,8,17],[30,27,8,0],[31,0,10,0],[31,6,10,6,"cachedFontObjectsFromString"],[31,33,10,33],[31,36,10,36],[31,38,10,0],[33,0,12,0],[33,11,12,9,"extractSingleFontFamily"],[33,34,12,0],[33,35,12,33,"fontFamilyString"],[33,51,12,0],[33,53,12,51],[34,0,16,2],[34,11,16,9,"fontFamilyString"],[34,27,16,25],[34,30,17,6,"fontFamilyString"],[34,46,17,22],[34,47,18,9,"split"],[34,52,17,6],[34,53,18,15,"commaReg"],[34,61,17,6],[34,63,18,25],[34,64,17,6],[34,66,19,9,"replace"],[34,73,17,6],[34,74,19,17,"fontFamilyPrefix"],[34,90,17,6],[34,92,19,35],[34,94,17,6],[34,96,20,9,"replace"],[34,103,17,6],[34,104,20,17,"fontFamilySuffix"],[34,120,17,6],[34,122,20,35],[34,124,17,6],[34,125,16,25],[34,128,21,6],[34,132,16,2],[35,0,22,1],[37,0,24,0],[37,11,24,9,"parseFontString"],[37,26,24,0],[37,27,24,25,"font"],[37,31,24,0],[37,33,24,31],[38,0,25,2],[38,8,25,6,"cachedFontObjectsFromString"],[38,35,25,33],[38,36,25,34,"hasOwnProperty"],[38,50,25,6],[38,51,25,49,"font"],[38,55,25,6],[38,56,25,2],[38,58,25,56],[39,0,26,4],[39,13,26,11,"cachedFontObjectsFromString"],[39,40,26,38],[39,41,26,39,"font"],[39,45,26,38],[39,46,26,4],[40,0,27,3],[42,0,28,2],[42,8,28,8,"match"],[42,13,28,13],[42,16,28,16,"fontRegExp"],[42,26,28,26],[42,27,28,27,"exec"],[42,31,28,16],[42,32,28,32,"font"],[42,36,28,16],[42,37,28,2],[44,0,29,2],[44,8,29,6],[44,9,29,7,"match"],[44,14,29,2],[44,16,29,14],[45,0,30,4,"cachedFontObjectsFromString"],[45,6,30,4,"cachedFontObjectsFromString"],[45,33,30,31],[45,34,30,32,"font"],[45,38,30,31],[45,39,30,4],[45,42,30,40],[45,46,30,4],[46,0,31,4],[46,13,31,11],[46,17,31,4],[47,0,32,3],[49,0,33,2],[49,8,33,8,"isBold"],[49,14,33,14],[49,17,33,17],[49,24,33,24,"exec"],[49,28,33,17],[49,29,33,29,"match"],[49,34,33,34],[49,35,33,35],[49,36,33,34],[49,37,33,17],[49,38,33,2],[50,0,34,2],[50,8,34,8,"isItalic"],[50,16,34,16],[50,19,34,19],[50,28,34,28,"exec"],[50,32,34,19],[50,33,34,33,"match"],[50,38,34,38],[50,39,34,39],[50,40,34,38],[50,41,34,19],[50,42,34,2],[51,0,35,2,"cachedFontObjectsFromString"],[51,4,35,2,"cachedFontObjectsFromString"],[51,31,35,29],[51,32,35,30,"font"],[51,36,35,29],[51,37,35,2],[51,40,35,38],[52,0,36,4,"fontSize"],[52,6,36,4,"fontSize"],[52,14,36,12],[52,16,36,14,"match"],[52,21,36,19],[52,22,36,20],[52,23,36,19],[52,24,36,14],[52,28,36,26],[52,30,35,38],[53,0,37,4,"fontWeight"],[53,6,37,4,"fontWeight"],[53,16,37,14],[53,18,37,16,"isBold"],[53,24,37,22],[53,27,37,25],[53,33,37,22],[53,36,37,34],[53,44,35,38],[54,0,38,4,"fontStyle"],[54,6,38,4,"fontStyle"],[54,15,38,13],[54,17,38,15,"isItalic"],[54,25,38,23],[54,28,38,26],[54,36,38,23],[54,39,38,37],[54,47,35,38],[55,0,39,4,"fontFamily"],[55,6,39,4,"fontFamily"],[55,16,39,14],[55,18,39,16,"extractSingleFontFamily"],[55,41,39,39],[55,42,39,40,"match"],[55,47,39,45],[55,48,39,46],[55,49,39,45],[55,50,39,39],[56,0,35,38],[56,5,35,2],[57,0,41,2],[57,11,41,9,"cachedFontObjectsFromString"],[57,38,41,36],[57,39,41,37,"font"],[57,43,41,36],[57,44,41,2],[58,0,42,1],[60,0,44,7],[60,11,44,16,"extractFont"],[60,22,44,7],[60,23,44,28,"props"],[60,28,44,7],[60,30,44,35],[61,0,44,35],[61,8,46,4,"fontData"],[61,16,44,35],[61,19,61,6,"props"],[61,24,44,35],[61,25,46,4,"fontData"],[61,33,44,35],[62,0,44,35],[62,8,47,4,"fontStyle"],[62,17,44,35],[62,20,61,6,"props"],[62,25,44,35],[62,26,47,4,"fontStyle"],[62,35,44,35],[63,0,44,35],[63,8,48,4,"fontVariant"],[63,19,44,35],[63,22,61,6,"props"],[63,27,44,35],[63,28,48,4,"fontVariant"],[63,39,44,35],[64,0,44,35],[64,8,49,4,"fontWeight"],[64,18,44,35],[64,21,61,6,"props"],[64,26,44,35],[64,27,49,4,"fontWeight"],[64,37,44,35],[65,0,44,35],[65,8,50,4,"fontStretch"],[65,19,44,35],[65,22,61,6,"props"],[65,27,44,35],[65,28,50,4,"fontStretch"],[65,39,44,35],[66,0,44,35],[66,8,51,4,"fontSize"],[66,16,44,35],[66,19,61,6,"props"],[66,24,44,35],[66,25,51,4,"fontSize"],[66,33,44,35],[67,0,44,35],[67,8,52,4,"fontFamily"],[67,18,44,35],[67,21,61,6,"props"],[67,26,44,35],[67,27,52,4,"fontFamily"],[67,37,44,35],[68,0,44,35],[68,8,53,4,"textAnchor"],[68,18,44,35],[68,21,61,6,"props"],[68,26,44,35],[68,27,53,4,"textAnchor"],[68,37,44,35],[69,0,44,35],[69,8,54,4,"textDecoration"],[69,22,44,35],[69,25,61,6,"props"],[69,30,44,35],[69,31,54,4,"textDecoration"],[69,45,44,35],[70,0,44,35],[70,8,55,4,"letterSpacing"],[70,21,44,35],[70,24,61,6,"props"],[70,29,44,35],[70,30,55,4,"letterSpacing"],[70,43,44,35],[71,0,44,35],[71,8,56,4,"wordSpacing"],[71,19,44,35],[71,22,61,6,"props"],[71,27,44,35],[71,28,56,4,"wordSpacing"],[71,39,44,35],[72,0,44,35],[72,8,57,4,"kerning"],[72,15,44,35],[72,18,61,6,"props"],[72,23,44,35],[72,24,57,4,"kerning"],[72,31,44,35],[73,0,44,35],[73,8,58,4,"fontVariantLigatures"],[73,28,44,35],[73,31,61,6,"props"],[73,36,44,35],[73,37,58,4,"fontVariantLigatures"],[73,57,44,35],[74,0,44,35],[74,8,59,4,"fontFeatureSettings"],[74,27,44,35],[74,30,61,6,"props"],[74,35,44,35],[74,36,59,4,"fontFeatureSettings"],[74,55,44,35],[75,0,44,35],[75,8,60,4,"font"],[75,12,44,35],[75,15,61,6,"props"],[75,20,44,35],[75,21,60,4,"font"],[75,25,44,35],[76,0,63,2],[76,8,63,8,"ownedFont"],[76,17,63,17],[76,20,63,20],[76,42,63,31],[77,0,64,4,"fontData"],[77,6,64,4,"fontData"],[77,14,64,12],[77,16,64,4,"fontData"],[77,24,63,31],[78,0,65,4,"fontStyle"],[78,6,65,4,"fontStyle"],[78,15,65,13],[78,17,65,4,"fontStyle"],[78,26,63,31],[79,0,66,4,"fontVariant"],[79,6,66,4,"fontVariant"],[79,17,66,15],[79,19,66,4,"fontVariant"],[79,30,63,31],[80,0,67,4,"fontWeight"],[80,6,67,4,"fontWeight"],[80,16,67,14],[80,18,67,4,"fontWeight"],[80,28,63,31],[81,0,68,4,"fontStretch"],[81,6,68,4,"fontStretch"],[81,17,68,15],[81,19,68,4,"fontStretch"],[81,30,63,31],[82,0,69,4,"fontSize"],[82,6,69,4,"fontSize"],[82,14,69,12],[82,16,69,4,"fontSize"],[82,24,63,31],[83,0,70,4,"fontFamily"],[83,6,70,4,"fontFamily"],[83,16,70,14],[83,18,70,16,"extractSingleFontFamily"],[83,41,70,39],[83,42,70,40,"fontFamily"],[83,52,70,39],[83,53,63,31],[84,0,71,4,"textAnchor"],[84,6,71,4,"textAnchor"],[84,16,71,14],[84,18,71,4,"textAnchor"],[84,28,63,31],[85,0,72,4,"textDecoration"],[85,6,72,4,"textDecoration"],[85,20,72,18],[85,22,72,4,"textDecoration"],[85,36,63,31],[86,0,73,4,"letterSpacing"],[86,6,73,4,"letterSpacing"],[86,19,73,17],[86,21,73,4,"letterSpacing"],[86,34,63,31],[87,0,74,4,"wordSpacing"],[87,6,74,4,"wordSpacing"],[87,17,74,15],[87,19,74,4,"wordSpacing"],[87,30,63,31],[88,0,75,4,"kerning"],[88,6,75,4,"kerning"],[88,13,75,11],[88,15,75,4,"kerning"],[88,22,63,31],[89,0,76,4,"fontVariantLigatures"],[89,6,76,4,"fontVariantLigatures"],[89,26,76,24],[89,28,76,4,"fontVariantLigatures"],[89,48,63,31],[90,0,77,4,"fontFeatureSettings"],[90,6,77,4,"fontFeatureSettings"],[90,25,77,23],[90,27,77,4,"fontFeatureSettings"],[91,0,63,31],[91,5,63,20],[91,6,63,2],[92,0,80,2],[92,8,80,8,"baseFont"],[92,16,80,16],[92,19,80,19],[92,26,80,26,"font"],[92,30,80,19],[92,35,80,35],[92,43,80,19],[92,46,80,46,"parseFontString"],[92,61,80,61],[92,62,80,62,"font"],[92,66,80,61],[92,67,80,19],[92,70,80,70,"font"],[92,74,80,2],[93,0,82,2],[93,29,82,14,"baseFont"],[93,37,82,2],[93,43,82,27,"ownedFont"],[93,52,82,2],[94,0,83,1],[96,0,85,0],[96,6,85,4,"TSpan"],[96,11,85,0],[98,0,87,7],[98,11,87,16,"setTSpan"],[98,19,87,7],[98,20,87,25,"TSpanImplementation"],[98,39,87,7],[98,41,87,46],[99,0,88,2,"TSpan"],[99,4,88,2,"TSpan"],[99,9,88,7],[99,12,88,10,"TSpanImplementation"],[99,31,88,2],[100,0,89,1],[102,0,91,0],[102,11,91,9,"getChild"],[102,19,91,0],[102,20,91,18,"child"],[102,25,91,0],[102,27,91,25],[103,0,92,2],[103,8,92,6],[103,15,92,13,"child"],[103,20,92,6],[103,25,92,23],[103,33,92,6],[103,37,92,35],[103,44,92,42,"child"],[103,49,92,35],[103,54,92,52],[103,62,92,2],[103,64,92,62],[104,0,93,4],[104,13,93,11],[104,42,93,12],[104,47,93,11],[105,0,93,11],[106,0,93,11],[107,0,93,11],[108,0,93,11],[109,0,93,11],[109,9,93,19,"String"],[109,15,93,25],[109,16,93,26,"child"],[109,21,93,25],[109,22,93,11],[109,23,93,4],[110,0,94,3],[110,5,92,2],[110,11,94,9],[111,0,95,4],[111,13,95,11,"child"],[111,18,95,4],[112,0,96,3],[113,0,97,1],[115,0,99,15],[115,11,99,24,"extractText"],[115,22,99,15],[115,23,99,36,"props"],[115,28,99,15],[115,30,99,43,"container"],[115,39,99,15],[115,41,99,54],[116,0,99,54],[116,8,101,4,"x"],[116,9,99,54],[116,12,110,6,"props"],[116,17,99,54],[116,18,101,4,"x"],[116,19,99,54],[117,0,99,54],[117,8,102,4,"y"],[117,9,99,54],[117,12,110,6,"props"],[117,17,99,54],[117,18,102,4,"y"],[117,19,99,54],[118,0,99,54],[118,8,103,4,"dx"],[118,10,99,54],[118,13,110,6,"props"],[118,18,99,54],[118,19,103,4,"dx"],[118,21,99,54],[119,0,99,54],[119,8,104,4,"dy"],[119,10,99,54],[119,13,110,6,"props"],[119,18,99,54],[119,19,104,4,"dy"],[119,21,99,54],[120,0,99,54],[120,8,105,4,"rotate"],[120,14,99,54],[120,17,110,6,"props"],[120,22,99,54],[120,23,105,4,"rotate"],[120,29,99,54],[121,0,99,54],[121,8,106,4,"children"],[121,16,99,54],[121,19,110,6,"props"],[121,24,99,54],[121,25,106,4,"children"],[121,33,99,54],[122,0,99,54],[122,8,107,4,"baselineShift"],[122,21,99,54],[122,24,110,6,"props"],[122,29,99,54],[122,30,107,4,"baselineShift"],[122,43,99,54],[123,0,99,54],[123,8,108,4,"verticalAlign"],[123,21,99,54],[123,24,110,6,"props"],[123,29,99,54],[123,30,108,4,"verticalAlign"],[123,43,99,54],[124,0,99,54],[124,8,109,4,"alignmentBaseline"],[124,25,99,54],[124,28,110,6,"props"],[124,33,99,54],[124,34,109,4,"alignmentBaseline"],[124,51,99,54],[125,0,112,2],[125,8,112,8,"textChildren"],[125,20,112,20],[125,23,113,4],[125,30,113,11,"children"],[125,38,113,4],[125,43,113,24],[125,51,113,4],[125,55,113,36],[125,62,113,43,"children"],[125,70,113,36],[125,75,113,56],[125,83,113,4],[125,86,114,6,"container"],[125,95,114,15],[125,98,115,8],[125,127,115,9],[125,132,115,8],[126,0,115,8],[127,0,115,8],[128,0,115,8],[129,0,115,8],[130,0,115,8],[130,7,115,16,"String"],[130,13,115,22],[130,14,115,23,"children"],[130,22,115,22],[130,23,115,8],[130,24,114,15],[130,27,116,10],[130,31,113,4],[130,34,117,8,"Children"],[130,50,117,17,"count"],[130,55,117,8],[130,56,117,23,"children"],[130,64,117,8],[130,68,117,35],[130,69,117,8],[130,73,117,40,"Array"],[130,78,117,45],[130,79,117,46,"isArray"],[130,86,117,40],[130,87,117,54,"children"],[130,95,117,40],[130,96,117,8],[130,99,118,6,"Children"],[130,115,118,15,"map"],[130,118,118,6],[130,119,118,19,"children"],[130,127,118,6],[130,129,118,29,"getChild"],[130,137,118,6],[130,138,117,8],[130,141,120,6,"children"],[130,149,112,2],[131,0,123,2],[131,11,123,9],[132,0,124,4,"content"],[132,6,124,4,"content"],[132,13,124,11],[132,15,124,13,"textChildren"],[132,27,124,25],[132,32,124,30],[132,36,124,13],[132,39,124,37,"String"],[132,45,124,43],[132,46,124,44,"children"],[132,54,124,43],[132,55,124,13],[132,58,124,56],[132,62,123,9],[133,0,125,4,"children"],[133,6,125,4,"children"],[133,14,125,12],[133,16,125,14,"textChildren"],[133,28,123,9],[134,0,126,4,"baselineShift"],[134,6,126,4,"baselineShift"],[134,19,126,17],[134,21,126,4,"baselineShift"],[134,34,123,9],[135,0,127,4,"verticalAlign"],[135,6,127,4,"verticalAlign"],[135,19,127,17],[135,21,127,4,"verticalAlign"],[135,34,123,9],[136,0,128,4,"alignmentBaseline"],[136,6,128,4,"alignmentBaseline"],[136,23,128,21],[136,25,128,4,"alignmentBaseline"],[136,42,123,9],[137,0,129,4,"font"],[137,6,129,4,"font"],[137,10,129,8],[137,12,129,10,"extractFont"],[137,23,129,21],[137,24,129,22,"props"],[137,29,129,21],[137,30,123,9],[138,0,130,4,"x"],[138,6,130,4,"x"],[138,7,130,5],[138,9,130,7],[138,41,130,25,"x"],[138,42,130,7],[138,43,123,9],[139,0,131,4,"y"],[139,6,131,4,"y"],[139,7,131,5],[139,9,131,7],[139,41,131,25,"y"],[139,42,131,7],[139,43,123,9],[140,0,132,4,"dx"],[140,6,132,4,"dx"],[140,8,132,6],[140,10,132,8],[140,42,132,26,"dx"],[140,44,132,8],[140,45,123,9],[141,0,133,4,"dy"],[141,6,133,4,"dy"],[141,8,133,6],[141,10,133,8],[141,42,133,26,"dy"],[141,44,133,8],[141,45,123,9],[142,0,134,4,"rotate"],[142,6,134,4,"rotate"],[142,12,134,10],[142,14,134,12],[142,46,134,30,"rotate"],[142,52,134,12],[143,0,123,9],[143,5,123,2],[144,0,136,1]]},"type":"js/module"}]}