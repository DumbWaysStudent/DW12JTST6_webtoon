{"dependencies":[{"name":"@babel/runtime/helpers/interopRequireDefault","data":{"isAsync":false}},{"name":"@babel/runtime/helpers/defineProperty","data":{"isAsync":false}},{"name":"@babel/runtime/regenerator","data":{"isAsync":false}},{"name":"@unimodules/core","data":{"isAsync":false}},{"name":"invariant","data":{"isAsync":false}},{"name":"./ExpoAppAuth","data":{"isAsync":false}}],"output":[{"data":{"code":"__d(function (global, _$$_REQUIRE, _$$_IMPORT_DEFAULT, _$$_IMPORT_ALL, module, exports, _dependencyMap) {\n  var _interopRequireDefault = _$$_REQUIRE(_dependencyMap[0], \"@babel/runtime/helpers/interopRequireDefault\");\n\n  Object.defineProperty(exports, \"__esModule\", {\n    value: true\n  });\n  exports.getDefaultOAuthRedirect = getDefaultOAuthRedirect;\n  exports.authAsync = authAsync;\n  exports.refreshAsync = refreshAsync;\n  exports.revokeAsync = revokeAsync;\n  exports.URLSchemes = exports.OAuthRedirect = void 0;\n\n  var _defineProperty2 = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[1], \"@babel/runtime/helpers/defineProperty\"));\n\n  var _regenerator = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[2], \"@babel/runtime/regenerator\"));\n\n  var _core = _$$_REQUIRE(_dependencyMap[3], \"@unimodules/core\");\n\n  var _invariant = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[4], \"invariant\"));\n\n  var _ExpoAppAuth = _interopRequireDefault(_$$_REQUIRE(_dependencyMap[5], \"./ExpoAppAuth\"));\n\n  function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { keys.push.apply(keys, Object.getOwnPropertySymbols(object)); } if (enumerableOnly) keys = keys.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); return keys; }\n\n  function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { (0, _defineProperty2.default)(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n  function isValidServiceConfiguration(config) {\n    return !!(config && typeof config.authorizationEndpoint === 'string' && typeof config.tokenEndpoint === 'string');\n  }\n\n  function assertValidClientId(clientId) {\n    if (typeof clientId !== 'string' || !clientId.length) {\n      throw new _core.CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`clientId` must be a string with more than 0 characters');\n    }\n  }\n\n  function assertValidProps(_ref) {\n    var issuer = _ref.issuer,\n        redirectUrl = _ref.redirectUrl,\n        clientId = _ref.clientId,\n        serviceConfiguration = _ref.serviceConfiguration;\n\n    if (typeof issuer !== 'string' && !isValidServiceConfiguration(serviceConfiguration)) {\n      throw new _core.CodedError('ERR_APP_AUTH_INVALID_CONFIG', 'You must provide either an `issuer` or both `authorizationEndpoint` and `tokenEndpoint`');\n    }\n\n    if (typeof redirectUrl !== 'string') {\n      throw new _core.CodedError('ERR_APP_AUTH_INVALID_CONFIG', '`redirectUrl` must be a string');\n    }\n\n    assertValidClientId(clientId);\n  }\n\n  function _executeAsync(props) {\n    return _regenerator.default.async(function _executeAsync$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            if (!props.redirectUrl) {\n              props.redirectUrl = getDefaultOAuthRedirect();\n            }\n\n            assertValidProps(props);\n            _context.next = 4;\n            return _regenerator.default.awrap(_ExpoAppAuth.default.executeAsync(props));\n\n          case 4:\n            return _context.abrupt(\"return\", _context.sent);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    });\n  }\n\n  function getDefaultOAuthRedirect() {\n    return _ExpoAppAuth.default.OAuthRedirect + \":/oauthredirect\";\n  }\n\n  function authAsync(props) {\n    return _regenerator.default.async(function authAsync$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            if (_ExpoAppAuth.default.executeAsync) {\n              _context2.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('expo-app-auth', 'authAsync');\n\n          case 2:\n            _context2.next = 4;\n            return _regenerator.default.awrap(_executeAsync(props));\n\n          case 4:\n            return _context2.abrupt(\"return\", _context2.sent);\n\n          case 5:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    });\n  }\n\n  function refreshAsync(props, refreshToken) {\n    return _regenerator.default.async(function refreshAsync$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            if (_ExpoAppAuth.default.executeAsync) {\n              _context3.next = 2;\n              break;\n            }\n\n            throw new _core.UnavailabilityError('expo-app-auth', 'refreshAsync');\n\n          case 2:\n            if (refreshToken) {\n              _context3.next = 4;\n              break;\n            }\n\n            throw new _core.CodedError('ERR_APP_AUTH_TOKEN', 'Cannot refresh with null `refreshToken`');\n\n          case 4:\n            _context3.next = 6;\n            return _regenerator.default.awrap(_executeAsync(_objectSpread({\n              isRefresh: true,\n              refreshToken: refreshToken\n            }, props)));\n\n          case 6:\n            return _context3.abrupt(\"return\", _context3.sent);\n\n          case 7:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    });\n  }\n\n  function revokeAsync(_ref2, _ref3) {\n    var clientId, issuer, serviceConfiguration, token, _ref3$isClientIdProvi, isClientIdProvided, revocationEndpoint, response, openidConfig, encodedClientID, encodedToken, body, headers, results;\n\n    return _regenerator.default.async(function revokeAsync$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            clientId = _ref2.clientId, issuer = _ref2.issuer, serviceConfiguration = _ref2.serviceConfiguration;\n            token = _ref3.token, _ref3$isClientIdProvi = _ref3.isClientIdProvided, isClientIdProvided = _ref3$isClientIdProvi === void 0 ? false : _ref3$isClientIdProvi;\n\n            if (token) {\n              _context4.next = 4;\n              break;\n            }\n\n            throw new _core.CodedError('ERR_APP_AUTH_TOKEN', 'Cannot revoke a null `token`');\n\n          case 4:\n            assertValidClientId(clientId);\n\n            if (!(serviceConfiguration && serviceConfiguration.revocationEndpoint)) {\n              _context4.next = 9;\n              break;\n            }\n\n            revocationEndpoint = serviceConfiguration.revocationEndpoint;\n            _context4.next = 17;\n            break;\n\n          case 9:\n            _context4.next = 11;\n            return _regenerator.default.awrap(fetch(issuer + \"/.well-known/openid-configuration\"));\n\n          case 11:\n            response = _context4.sent;\n            _context4.next = 14;\n            return _regenerator.default.awrap(response.json());\n\n          case 14:\n            openidConfig = _context4.sent;\n            (0, _invariant.default)(openidConfig.revocation_endpoint, 'The OpenID config does not specify a revocation endpoint');\n            revocationEndpoint = openidConfig.revocation_endpoint;\n\n          case 17:\n            encodedClientID = encodeURIComponent(clientId);\n            encodedToken = encodeURIComponent(token);\n            body = \"token=\" + encodedToken + (isClientIdProvided ? \"&client_id=\" + encodedClientID : '');\n            headers = {\n              'Content-Type': 'application/x-www-form-urlencoded'\n            };\n            _context4.prev = 21;\n            _context4.next = 24;\n            return _regenerator.default.awrap(fetch(revocationEndpoint, {\n              method: 'POST',\n              headers: headers,\n              body: body\n            }));\n\n          case 24:\n            results = _context4.sent;\n            return _context4.abrupt(\"return\", results);\n\n          case 28:\n            _context4.prev = 28;\n            _context4.t0 = _context4[\"catch\"](21);\n            throw new _core.CodedError('ERR_APP_AUTH_REVOKE_FAILED', _context4.t0.message);\n\n          case 31:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, null, null, [[21, 28]]);\n  }\n\n  function parseAuthRevocationResults(results) {\n    var data, token, retryAfterValue, retryAfter;\n    return _regenerator.default.async(function parseAuthRevocationResults$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return _regenerator.default.awrap(results.json());\n\n          case 2:\n            data = _context5.sent;\n            token = results.headers['update-client-auth'];\n\n            if (!results.ok) {\n              _context5.next = 8;\n              break;\n            }\n\n            return _context5.abrupt(\"return\", {\n              type: 'success',\n              status: results.status,\n              data: data,\n              token: token\n            });\n\n          case 8:\n            if (!(results.status == 503 && results.headers['retry-after'])) {\n              _context5.next = 14;\n              break;\n            }\n\n            retryAfterValue = results.headers['retry-after'];\n\n            if (retryAfterValue) {\n              retryAfter = parseRetryTime(retryAfterValue);\n            }\n\n            return _context5.abrupt(\"return\", {\n              type: 'failed',\n              status: results.status,\n              data: data,\n              token: token,\n              retryAfter: retryAfter\n            });\n\n          case 14:\n            return _context5.abrupt(\"return\", {\n              type: 'error',\n              status: results.status,\n              data: data,\n              token: token\n            });\n\n          case 15:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    });\n  }\n\n  function parseRetryTime(value) {\n    if (/^\\d+$/.test(value)) {\n      return parseInt(value, 10) * 1000;\n    }\n\n    var retry = Date.parse(value);\n\n    if (isNaN(retry)) {\n      throw new _core.CodedError('ERR_APP_AUTH_FETCH_RETRY_TIME', 'Cannot parse the Retry-After header value returned by the server: ' + value);\n    }\n\n    var now = Date.now();\n    var parsedDate = new Date(retry);\n    return parsedDate.getTime() - now;\n  }\n\n  var OAuthRedirect = _ExpoAppAuth.default.OAuthRedirect,\n      URLSchemes = _ExpoAppAuth.default.URLSchemes;\n  exports.URLSchemes = URLSchemes;\n  exports.OAuthRedirect = OAuthRedirect;\n});","map":[[17,0,1,0],[19,0,2,0],[21,0,3,0],[27,0,4,0],[27,11,4,9,"isValidServiceConfiguration"],[27,38,4,0],[27,39,4,37,"config"],[27,45,4,0],[27,47,4,45],[28,0,5,4],[28,11,5,11],[28,12,5,12],[28,14,5,14,"config"],[28,20,5,20],[28,24,6,8],[28,31,6,15,"config"],[28,37,6,21],[28,38,6,22,"authorizationEndpoint"],[28,59,6,8],[28,64,6,48],[28,72,5,14],[28,76,7,8],[28,83,7,15,"config"],[28,89,7,21],[28,90,7,22,"tokenEndpoint"],[28,103,7,8],[28,108,7,40],[28,116,5,12],[28,117,5,4],[29,0,8,1],[31,0,9,0],[31,11,9,9,"assertValidClientId"],[31,30,9,0],[31,31,9,29,"clientId"],[31,39,9,0],[31,41,9,39],[32,0,10,4],[32,8,10,8],[32,15,10,15,"clientId"],[32,23,10,8],[32,28,10,28],[32,36,10,8],[32,40,10,40],[32,41,10,41,"clientId"],[32,49,10,49],[32,50,10,50,"length"],[32,56,10,4],[32,58,10,58],[33,0,11,8],[33,12,11,14],[33,16,11,18,"CodedError"],[33,32,11,14],[33,33,11,29],[33,62,11,14],[33,64,11,60],[33,121,11,14],[33,122,11,8],[34,0,12,5],[35,0,13,1],[37,0,14,0],[37,11,14,9,"assertValidProps"],[37,27,14,0],[37,34,14,84],[38,0,14,84],[38,8,14,28,"issuer"],[38,14,14,84],[38,22,14,28,"issuer"],[38,28,14,84],[39,0,14,84],[39,8,14,36,"redirectUrl"],[39,19,14,84],[39,27,14,36,"redirectUrl"],[39,38,14,84],[40,0,14,84],[40,8,14,49,"clientId"],[40,16,14,84],[40,24,14,49,"clientId"],[40,32,14,84],[41,0,14,84],[41,8,14,59,"serviceConfiguration"],[41,28,14,84],[41,36,14,59,"serviceConfiguration"],[41,56,14,84],[43,0,15,4],[43,8,15,8],[43,15,15,15,"issuer"],[43,21,15,8],[43,26,15,26],[43,34,15,8],[43,38,15,38],[43,39,15,39,"isValidServiceConfiguration"],[43,66,15,66],[43,67,15,67,"serviceConfiguration"],[43,87,15,66],[43,88,15,4],[43,90,15,90],[44,0,16,8],[44,12,16,14],[44,16,16,18,"CodedError"],[44,32,16,14],[44,33,16,29],[44,62,16,14],[44,64,16,60],[44,153,16,14],[44,154,16,8],[45,0,17,5],[47,0,18,4],[47,8,18,8],[47,15,18,15,"redirectUrl"],[47,26,18,8],[47,31,18,31],[47,39,18,4],[47,41,18,41],[48,0,19,8],[48,12,19,14],[48,16,19,18,"CodedError"],[48,32,19,14],[48,33,19,29],[48,62,19,14],[48,64,19,60],[48,96,19,14],[48,97,19,8],[49,0,20,5],[51,0,21,4,"assertValidClientId"],[51,4,21,4,"assertValidClientId"],[51,23,21,23],[51,24,21,24,"clientId"],[51,32,21,23],[51,33,21,4],[52,0,22,1],[54,0,23,0],[54,11,23,15,"_executeAsync"],[54,24,23,0],[54,25,23,29,"props"],[54,30,23,0],[55,0,23,0],[56,0,23,0],[57,0,23,0],[58,0,23,0],[59,0,24,4],[59,16,24,8],[59,17,24,9,"props"],[59,22,24,14],[59,23,24,15,"redirectUrl"],[59,34,24,4],[59,36,24,28],[60,0,25,8,"props"],[60,14,25,8,"props"],[60,19,25,13],[60,20,25,14,"redirectUrl"],[60,31,25,8],[60,34,25,28,"getDefaultOAuthRedirect"],[60,57,25,51],[60,59,25,8],[61,0,26,5],[63,0,27,4,"assertValidProps"],[63,12,27,4,"assertValidProps"],[63,28,27,20],[63,29,27,21,"props"],[63,34,27,20],[63,35,27,4],[64,0,23,0],[65,0,23,0],[65,46,28,17,"ExpoAppAuth"],[65,67,28,29,"executeAsync"],[65,79,28,17],[65,80,28,42,"props"],[65,85,28,17],[65,86,23,0],[67,0,23,0],[68,0,23,0],[70,0,23,0],[71,0,23,0],[72,0,23,0],[73,0,23,0],[74,0,23,0],[75,0,23,0],[76,0,23,0],[78,0,30,7],[78,11,30,16,"getDefaultOAuthRedirect"],[78,34,30,7],[78,37,30,42],[79,0,31,4],[79,11,31,14,"ExpoAppAuth"],[79,32,31,26,"OAuthRedirect"],[79,45,31,4],[80,0,32,1],[82,0,33,7],[82,11,33,22,"authAsync"],[82,20,33,7],[82,21,33,32,"props"],[82,26,33,7],[83,0,33,7],[84,0,33,7],[85,0,33,7],[86,0,33,7],[87,0,33,7],[87,16,34,9,"ExpoAppAuth"],[87,37,34,21,"executeAsync"],[87,49,33,7],[88,0,33,7],[89,0,33,7],[90,0,33,7],[92,0,33,7],[92,18,35,14],[92,22,35,18,"UnavailabilityError"],[92,47,35,14],[92,48,35,38],[92,63,35,14],[92,65,35,55],[92,76,35,14],[92,77,33,7],[94,0,33,7],[95,0,33,7],[96,0,33,7],[96,46,37,17,"_executeAsync"],[96,59,37,30],[96,60,37,31,"props"],[96,65,37,30],[96,66,33,7],[98,0,33,7],[99,0,33,7],[101,0,33,7],[102,0,33,7],[103,0,33,7],[104,0,33,7],[105,0,33,7],[106,0,33,7],[107,0,33,7],[109,0,39,7],[109,11,39,22,"refreshAsync"],[109,23,39,7],[109,24,39,35,"props"],[109,29,39,7],[109,31,39,42,"refreshToken"],[109,43,39,7],[110,0,39,7],[111,0,39,7],[112,0,39,7],[113,0,39,7],[114,0,39,7],[114,16,40,9,"ExpoAppAuth"],[114,37,40,21,"executeAsync"],[114,49,39,7],[115,0,39,7],[116,0,39,7],[117,0,39,7],[119,0,39,7],[119,18,41,14],[119,22,41,18,"UnavailabilityError"],[119,47,41,14],[119,48,41,38],[119,63,41,14],[119,65,41,55],[119,79,41,14],[119,80,39,7],[121,0,39,7],[122,0,39,7],[122,16,43,9,"refreshToken"],[122,28,39,7],[123,0,39,7],[124,0,39,7],[125,0,39,7],[127,0,39,7],[127,18,44,14],[127,22,44,18,"CodedError"],[127,38,44,14],[127,39,44,29],[127,59,44,14],[127,61,44,51],[127,102,44,14],[127,103,39,7],[129,0,39,7],[130,0,39,7],[131,0,39,7],[131,46,46,17,"_executeAsync"],[131,59,46,30],[132,0,47,8,"isRefresh"],[132,14,47,8,"isRefresh"],[132,23,47,17],[132,25,47,19],[132,29,46,30],[133,0,48,8,"refreshToken"],[133,14,48,8,"refreshToken"],[133,26,48,20],[133,28,48,8,"refreshToken"],[134,0,46,30],[134,15,49,11,"props"],[134,20,46,30],[134,22,39,7],[136,0,39,7],[137,0,39,7],[139,0,39,7],[140,0,39,7],[141,0,39,7],[142,0,39,7],[143,0,39,7],[144,0,39,7],[145,0,39,7],[147,0,53,7],[147,11,53,22,"revokeAsync"],[147,22,53,7],[148,0,53,7],[150,0,53,7],[151,0,53,7],[152,0,53,7],[153,0,53,7],[154,0,53,36,"clientId"],[154,12,53,36,"clientId"],[154,20,53,7],[154,29,53,36,"clientId"],[154,37,53,7],[154,39,53,46,"issuer"],[154,45,53,7],[154,54,53,46,"issuer"],[154,60,53,7],[154,62,53,54,"serviceConfiguration"],[154,82,53,7],[154,91,53,54,"serviceConfiguration"],[154,111,53,7],[155,0,53,80,"token"],[155,12,53,80,"token"],[155,17,53,7],[155,26,53,80,"token"],[155,31,53,7],[155,63,53,87,"isClientIdProvided"],[155,81,53,7],[155,83,53,87,"isClientIdProvided"],[155,101,53,7],[155,139,53,108],[155,144,53,7],[157,0,53,7],[157,16,54,9,"token"],[157,21,53,7],[158,0,53,7],[159,0,53,7],[160,0,53,7],[162,0,53,7],[162,18,55,14],[162,22,55,18,"CodedError"],[162,38,55,14],[162,39,55,29],[162,59,55,14],[162,61,55,51],[162,91,55,14],[162,92,53,7],[164,0,53,7],[165,0,57,4,"assertValidClientId"],[165,12,57,4,"assertValidClientId"],[165,31,57,23],[165,32,57,24,"clientId"],[165,40,57,23],[165,41,57,4],[167,0,53,7],[167,18,59,8,"serviceConfiguration"],[167,38,59,28],[167,42,59,32,"serviceConfiguration"],[167,62,59,52],[167,63,59,53,"revocationEndpoint"],[167,81,53,7],[168,0,53,7],[169,0,53,7],[170,0,53,7],[172,0,60,8,"revocationEndpoint"],[172,12,60,8,"revocationEndpoint"],[172,30,60,26],[172,33,60,29,"serviceConfiguration"],[172,53,60,49],[172,54,60,50,"revocationEndpoint"],[172,72,60,8],[173,0,53,7],[174,0,53,7],[176,0,53,7],[177,0,53,7],[178,0,53,7],[178,46,64,31,"fetch"],[178,51,64,36],[178,52,64,40,"issuer"],[178,58,64,36],[178,97,53,7],[180,0,53,7],[181,0,64,14,"response"],[181,12,64,14,"response"],[181,20,53,7],[182,0,53,7],[183,0,53,7],[183,46,65,35,"response"],[183,54,65,43],[183,55,65,44,"json"],[183,59,65,35],[183,61,53,7],[185,0,53,7],[186,0,65,14,"openidConfig"],[186,12,65,14,"openidConfig"],[186,24,53,7],[187,0,66,8],[187,36,66,18,"openidConfig"],[187,48,66,30],[187,49,66,31,"revocation_endpoint"],[187,68,66,8],[187,70,66,52],[187,128,66,8],[188,0,67,8,"revocationEndpoint"],[188,12,67,8,"revocationEndpoint"],[188,30,67,26],[188,33,67,29,"openidConfig"],[188,45,67,41],[188,46,67,42,"revocation_endpoint"],[188,65,67,8],[190,0,53,7],[191,0,69,10,"encodedClientID"],[191,12,69,10,"encodedClientID"],[191,27,53,7],[191,30,69,28,"encodeURIComponent"],[191,48,69,46],[191,49,69,47,"clientId"],[191,57,69,46],[191,58,53,7],[192,0,70,10,"encodedToken"],[192,12,70,10,"encodedToken"],[192,24,53,7],[192,27,70,25,"encodeURIComponent"],[192,45,70,43],[192,46,70,44,"token"],[192,51,70,43],[192,52,53,7],[193,0,71,10,"body"],[193,12,71,10,"body"],[193,16,53,7],[193,30,71,26,"encodedToken"],[193,42,53,7],[193,46,71,41,"isClientIdProvided"],[193,64,71,59],[193,83,71,76,"encodedClientID"],[193,98,71,59],[193,101,71,96],[193,103,53,7],[194,0,72,10,"headers"],[194,12,72,10,"headers"],[194,19,53,7],[194,22,72,20],[195,0,72,22],[195,30,72,38],[196,0,72,20],[196,13,53,7],[197,0,53,7],[198,0,53,7],[199,0,53,7],[199,46,75,30,"fetch"],[199,51,75,35],[199,52,75,36,"revocationEndpoint"],[199,70,75,35],[199,72,75,56],[200,0,76,12,"method"],[200,14,76,12,"method"],[200,20,76,18],[200,22,76,20],[200,28,75,56],[201,0,77,12,"headers"],[201,14,77,12,"headers"],[201,21,77,19],[201,23,77,12,"headers"],[201,30,75,56],[202,0,78,12,"body"],[202,14,78,12,"body"],[202,18,78,16],[202,20,78,12,"body"],[203,0,75,56],[203,13,75,35],[203,14,53,7],[205,0,53,7],[206,0,75,14,"results"],[206,12,75,14,"results"],[206,19,53,7],[207,0,53,7],[207,46,80,15,"results"],[207,53,53,7],[209,0,53,7],[210,0,53,7],[211,0,53,7],[212,0,53,7],[212,18,83,14],[212,22,83,18,"CodedError"],[212,38,83,14],[212,39,83,29],[212,67,83,14],[212,69,83,59],[212,82,83,65,"message"],[212,89,83,14],[212,90,53,7],[214,0,53,7],[215,0,53,7],[216,0,53,7],[217,0,53,7],[218,0,53,7],[219,0,53,7],[220,0,53,7],[222,0,86,0],[222,11,86,15,"parseAuthRevocationResults"],[222,37,86,0],[222,38,86,42,"results"],[222,45,86,0],[223,0,86,0],[224,0,86,0],[225,0,86,0],[226,0,86,0],[227,0,86,0],[228,0,86,0],[229,0,86,0],[229,46,87,23,"results"],[229,53,87,30],[229,54,87,31,"json"],[229,58,87,23],[229,60,86,0],[231,0,86,0],[232,0,87,10,"data"],[232,12,87,10,"data"],[232,16,86,0],[233,0,88,10,"token"],[233,12,88,10,"token"],[233,17,86,0],[233,20,88,18,"results"],[233,27,88,25],[233,28,88,26,"headers"],[233,35,88,18],[233,36,88,34],[233,56,88,18],[233,57,86,0],[235,0,86,0],[235,17,90,8,"results"],[235,24,90,15],[235,25,90,16,"ok"],[235,27,86,0],[236,0,86,0],[237,0,86,0],[238,0,86,0],[240,0,86,0],[240,46,92,15],[241,0,92,17,"type"],[241,14,92,17,"type"],[241,18,92,21],[241,20,92,23],[241,29,92,15],[242,0,92,34,"status"],[242,14,92,34,"status"],[242,20,92,40],[242,22,92,42,"results"],[242,29,92,49],[242,30,92,50,"status"],[242,36,92,15],[243,0,92,58,"data"],[243,14,92,58,"data"],[243,18,92,62],[243,20,92,58,"data"],[243,24,92,15],[244,0,92,64,"token"],[244,14,92,64,"token"],[244,19,92,69],[244,21,92,64,"token"],[245,0,92,15],[245,13,86,0],[247,0,86,0],[248,0,86,0],[248,18,94,13,"results"],[248,25,94,20],[248,26,94,21,"status"],[248,32,94,13],[248,36,94,31],[248,39,94,13],[248,43,94,38,"results"],[248,50,94,45],[248,51,94,46,"headers"],[248,58,94,38],[248,59,94,54],[248,72,94,38],[248,73,86,0],[249,0,86,0],[250,0,86,0],[251,0,86,0],[253,0,96,14,"retryAfterValue"],[253,12,96,14,"retryAfterValue"],[253,27,86,0],[253,30,96,32,"results"],[253,37,96,39],[253,38,96,40,"headers"],[253,45,96,32],[253,46,96,48],[253,59,96,32],[253,60,86,0],[255,0,98,8],[255,16,98,12,"retryAfterValue"],[255,31,98,8],[255,33,98,29],[256,0,99,12,"retryAfter"],[256,14,99,12,"retryAfter"],[256,24,99,22],[256,27,99,25,"parseRetryTime"],[256,41,99,39],[256,42,99,40,"retryAfterValue"],[256,57,99,39],[256,58,99,12],[257,0,100,9],[259,0,86,0],[259,46,102,15],[260,0,102,17,"type"],[260,14,102,17,"type"],[260,18,102,21],[260,20,102,23],[260,28,102,15],[261,0,102,33,"status"],[261,14,102,33,"status"],[261,20,102,39],[261,22,102,41,"results"],[261,29,102,48],[261,30,102,49,"status"],[261,36,102,15],[262,0,102,57,"data"],[262,14,102,57,"data"],[262,18,102,61],[262,20,102,57,"data"],[262,24,102,15],[263,0,102,63,"token"],[263,14,102,63,"token"],[263,19,102,68],[263,21,102,63,"token"],[263,26,102,15],[264,0,102,70,"retryAfter"],[264,14,102,70,"retryAfter"],[264,24,102,80],[264,26,102,70,"retryAfter"],[265,0,102,15],[265,13,86,0],[267,0,86,0],[268,0,86,0],[268,46,106,15],[269,0,106,17,"type"],[269,14,106,17,"type"],[269,18,106,21],[269,20,106,23],[269,27,106,15],[270,0,106,32,"status"],[270,14,106,32,"status"],[270,20,106,38],[270,22,106,40,"results"],[270,29,106,47],[270,30,106,48,"status"],[270,36,106,15],[271,0,106,56,"data"],[271,14,106,56,"data"],[271,18,106,60],[271,20,106,56,"data"],[271,24,106,15],[272,0,106,62,"token"],[272,14,106,62,"token"],[272,19,106,67],[272,21,106,62,"token"],[273,0,106,15],[273,13,86,0],[275,0,86,0],[276,0,86,0],[277,0,86,0],[278,0,86,0],[279,0,86,0],[280,0,86,0],[281,0,86,0],[283,0,109,0],[283,11,109,9,"parseRetryTime"],[283,25,109,0],[283,26,109,24,"value"],[283,31,109,0],[283,33,109,31],[284,0,111,4],[284,8,111,8],[284,16,111,16,"test"],[284,20,111,8],[284,21,111,21,"value"],[284,26,111,8],[284,27,111,4],[284,29,111,29],[285,0,112,8],[285,13,112,15,"parseInt"],[285,21,112,23],[285,22,112,24,"value"],[285,27,112,23],[285,29,112,31],[285,31,112,23],[285,32,112,15],[285,35,112,37],[285,39,112,8],[286,0,113,5],[288,0,114,4],[288,8,114,10,"retry"],[288,13,114,15],[288,16,114,18,"Date"],[288,20,114,22],[288,21,114,23,"parse"],[288,26,114,18],[288,27,114,29,"value"],[288,32,114,18],[288,33,114,4],[290,0,115,4],[290,8,115,8,"isNaN"],[290,13,115,13],[290,14,115,14,"retry"],[290,19,115,13],[290,20,115,4],[290,22,115,22],[291,0,116,8],[291,12,116,14],[291,16,116,18,"CodedError"],[291,32,116,14],[291,33,116,29],[291,64,116,14],[291,66,116,62],[291,137,116,133,"value"],[291,142,116,14],[291,143,116,8],[292,0,117,5],[294,0,118,4],[294,8,118,10,"now"],[294,11,118,13],[294,14,118,16,"Date"],[294,18,118,20],[294,19,118,21,"now"],[294,22,118,16],[294,24,118,4],[295,0,119,4],[295,8,119,10,"parsedDate"],[295,18,119,20],[295,21,119,23],[295,25,119,27,"Date"],[295,29,119,23],[295,30,119,32,"retry"],[295,35,119,23],[295,36,119,4],[296,0,120,4],[296,11,120,11,"parsedDate"],[296,21,120,21],[296,22,120,22,"getTime"],[296,29,120,11],[296,34,120,34,"now"],[296,37,120,4],[297,0,121,1],[299,6,122,15,"OAuthRedirect"],[299,19],[299,22,122,45,"ExpoAppAuth"],[299,42],[299,43,122,15,"OAuthRedirect"],[299,56],[300,6,122,30,"URLSchemes"],[300,16],[300,19,122,45,"ExpoAppAuth"],[300,39],[300,40,122,30,"URLSchemes"],[300,50]]},"type":"js/module"}]}